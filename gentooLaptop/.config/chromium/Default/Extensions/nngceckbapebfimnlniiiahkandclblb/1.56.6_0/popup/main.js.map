{"version":3,"file":"popup/main.js","mappings":"UAAIA,E,aCAJ,SAASC,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,IAAM,GACtCR,EAAyBG,QAAUH,EACnCA,EAAyBS,GAAK,MAC9BC,EAAOC,QAAUX,G,mGCZV,MAAeY,GCAf,MAAeC,GCEf,MAAeC,GC2Bf,MAAe,G,0SCpBf,MAAMC,EACXC,YACUC,EACAC,EACAC,EACAC,EACAC,GAJA,KAAAJ,oBAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,iBAAAA,EACA,KAAAC,oBAAAA,EACA,KAAAC,aAAAA,EAGJC,YAAYC,EAA+BC,G,yCAE/C,WADuBC,KAAKJ,aAAaK,sBAGvC,OADAD,KAAKN,iBAAiBQ,KAAK,gBACpB,EAIT,aADqBF,KAAKR,oBAAoBW,aAEzB,MAAfJ,GACFC,KAAKN,iBAAiBQ,KAAK,YAAa,CAAEE,IAAKL,EAAYK,MAE7DJ,KAAKP,OAAOY,SAAS,CAAC,QAAS,CAAEC,YAAa,CAAEC,iBAAiB,MAC1D,MAINR,EAAYK,IAAII,SAAS,2BACnBR,KAAKL,oBAAoBc,gCAEhCT,KAAKP,OAAOY,SAAS,CAAC,sBACf,O,iCA9BAf,GAAgB,8F,uCAAhBA,EAAgB,QAAhBA,EAAgB,O,0SCFtB,MAAM,EAGXC,YACUC,EACAC,EACAG,GAFA,KAAAJ,oBAAAA,EACA,KAAAC,OAAAA,EACA,KAAAG,aAAAA,EALA,KAAAc,SAAW,QACX,KAAAC,UAAY,QAOhBd,c,yCACJ,SAAUG,KAAKR,oBAAoBW,WACjC,OAAO,EAGT,MAAMS,SAAqBZ,KAAKJ,aAAaK,sBACzC,CAACD,KAAKU,UACN,CAACV,KAAKW,WAGV,OADAX,KAAKP,OAAOY,SAASO,IACd,M,iCAnBE,GAAgB,4D,uCAAhB,EAAgB,QAAhB,EAAgB,O,gUCAtB,MAAMC,EAQXtB,YAAoBE,GAAA,KAAAA,OAAAA,EAClBO,KAAKc,mBAAqBd,KAAKP,OAAOsB,OACnCC,MACC,EAAAC,EAAA,IAAQC,GAAUA,aAAiB,EAAAC,mBACnC,EAAAC,EAAA,MAEDC,WACEN,IACGf,KAAKsB,eAAgBtB,KAAKuB,gBAAkBR,IAGpDf,KAAKwB,qBAAuBxB,KAAKP,OAAOsB,OACrCC,MAAK,EAAAC,EAAA,IAAQC,GAAUA,aAAiB,EAAAO,iBACxCJ,WAAWH,GAA0BlB,KAAK0B,wBAA0BR,EAAMlC,KAGzEa,c,iDACJ,QAC6C,gBAAxB,QAAnB,EAAAG,KAAKuB,sBAAc,eAAEI,oBACqB,aAA1C3B,KAAKsB,eAAeK,mBACpB3B,KAAK0B,0BAA4B1B,KAAKsB,eAAetC,IACrDgB,KAAKsB,eAAelB,OAA2B,QAAnB,EAAAJ,KAAKuB,sBAAc,eAAEnB,SAIrDwB,cACiC,MAA3B5B,KAAKc,oBACPd,KAAKc,mBAAmBe,cAGO,MAA7B7B,KAAKwB,sBACPxB,KAAKwB,qBAAqBK,e,iCAvCnBhB,GAAyB,0B,uCAAzBA,EAAyB,QAAzBA,EAAyB,O,0BCFtC,MAAMiB,EAA4B,oBAAXC,OAAyB,EAAQ,MAAS,KAE1D,MAAMC,EAaXC,cACMD,EAAME,SAIVF,EAAME,QAAS,EACfF,EAAMG,YACe,IAAZC,GACqB,MAA3BA,EAAgBC,SACiB,SAAjCD,EAAgBC,QAAQC,KAC3BN,EAAMO,UAA8B,oBAAXR,OACzBC,EAAMQ,gBAAkBR,EAAMO,WAAavC,KAAKyC,SAASV,QACzDC,EAAMU,qBAAuBV,EAAMO,WAAavC,KAAK2C,cAAcZ,QACnEC,EAAMY,OAASZ,EAAMG,SAAWH,EAAMO,UAAY,EAAAM,EAASd,QAG7DE,sBAAsBa,GACpB,GAAId,EAAMG,OACR,OAAO,IAAIY,WAAWC,OAAOC,KAAKH,EAAK,WAClC,CACL,MAAMI,EAAenB,OAAOoB,KAAKL,GAC3BM,EAAQ,IAAIL,WAAWG,EAAaG,QAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaG,OAAQC,IACvCF,EAAME,GAAKJ,EAAaK,WAAWD,GAErC,OAAOF,GAIXnB,yBAAyBa,GACvB,OAAOd,EAAMwB,eAAexB,EAAMyB,gBAAgBX,IAGpDb,sBAAsBa,GACpB,GAAId,EAAMG,OACR,OAAO,IAAIY,WAAWC,OAAOC,KAAKH,EAAK,QAClC,CACL,MAAMM,EAAQ,IAAIL,WAAWD,EAAIO,OAAS,GAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAIO,OAAQC,GAAK,EACnCF,EAAME,EAAI,GAAKI,SAASZ,EAAIa,OAAOL,EAAG,GAAI,IAE5C,OAAOF,GAIXnB,uBAAuBa,GACrB,GAAId,EAAMG,OACR,OAAO,IAAIY,WAAWC,OAAOC,KAAKH,EAAK,SAClC,CACL,MAAMc,EAAUC,SAASC,mBAAmBhB,IACtCiB,EAAM,IAAIhB,WAAWa,EAAQP,QACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIM,EAAQP,OAAQC,IAClCS,EAAIT,GAAKM,EAAQL,WAAWD,GAE9B,OAAOS,GAIX9B,6BAA6Ba,GAC3B,MAAMiB,EAAM,IAAIhB,WAAWD,EAAIO,QAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAIO,OAAQC,IAC9BS,EAAIT,GAAKR,EAAIS,WAAWD,GAE1B,OAAOS,EAGT9B,uBAAuB+B,GACrB,GAAIhC,EAAMG,OACR,OAAOa,OAAOC,KAAKe,GAAQC,SAAS,UAC/B,CACL,IAAIC,EAAS,GACb,MAAMd,EAAQ,IAAIL,WAAWiB,GAC7B,IAAK,IAAIV,EAAI,EAAGA,EAAIF,EAAMe,WAAYb,IACpCY,GAAUE,OAAOC,aAAajB,EAAME,IAEtC,OAAOvB,OAAOuC,KAAKJ,IAIvBjC,0BAA0B+B,GACxB,OAAOhC,EAAMuC,gBAAgBvC,EAAMwC,gBAAgBR,IAGrD/B,uBAAuBwC,GACrB,OAAOA,EAAOC,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,KAAM,IAGtEzC,wBAAwB+B,GACtB,GAAIhC,EAAMG,OACR,OAAOa,OAAOC,KAAKe,GAAQC,SAAS,QAC/B,CACL,MAAMb,EAAQ,IAAIL,WAAWiB,GACvBW,EAAgBP,OAAOC,aAAaO,MAAM,KAAMxB,GACtD,OAAOyB,mBAAmBC,OAAOH,KAIrC1C,8BAA8B+B,GAC5B,OAAOI,OAAOC,aAAaO,MAAM,KAAM,IAAI7B,WAAWiB,IAIxD/B,uBAAuB+B,GACrB,GAAIhC,EAAMG,OACR,OAAOa,OAAOC,KAAKe,GAAQC,SAAS,OAC/B,CACL,MAAMb,EAAQ,IAAIL,WAAWiB,GAC7B,OAAOe,MAAMC,UAAUC,IACpBC,KAAK9B,GAAQ+B,IAAe,KAAOA,EAAElB,SAAS,KAAKmB,OAAO,KAC1DC,KAAK,KAIZpD,uBAAuBqD,GACrB,IAAIC,EAASD,EAAUZ,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACxD,OAAQa,EAAOlC,OAAS,GACtB,KAAK,EACH,MACF,KAAK,EACHkC,GAAU,KACV,MACF,KAAK,EACHA,GAAU,IACV,MACF,QACE,MAAM,IAAI1G,MAAM,6BAGpB,OAAO0G,EAGTtD,wBAAwBqD,GACtB,OAAOtD,EAAMwD,cAAcxD,EAAMyB,gBAAgB6B,IAGnDrD,qBAAqBwD,GACnB,OAAIzD,EAAMG,OACDa,OAAOC,KAAKwC,EAAQ,QAAQxB,SAAS,UAErCY,mBAAmBC,OAAO/C,OAAOuC,KAAKmB,KAIjDxD,wBAAwBwD,GACtB,OAAOzD,EAAM0D,mBAAmB1D,EAAM2D,gBAAgBF,IAGxDxD,qBAAqBwC,GACnB,OAAIzC,EAAMG,OACDa,OAAOC,KAAKwB,EAAQ,UAAUR,SAAS,QAEvCY,mBAAmBC,OAAO/C,OAAOoB,KAAKsB,KAKjDxC,iBACE,MAAO,uCAAuCyC,QAAQ,SAAUkB,IAE9D,MAAMC,EAAqB,GAAhBC,KAAKC,SAAiB,EAGjC,OADgB,MAANH,EAAYC,EAAS,EAAJA,EAAW,GAC7B5B,SAAS,OAItBhC,cAAcjD,GACZ,OAAOgH,OACL,4EACA,KACAC,KAAKjH,GAGTiD,mBAAmBiE,GACjB,MAAM9F,EAAM4B,EAAMmE,OAAOD,GACzB,IACE,OAAc,MAAP9F,GAAgC,KAAjBA,EAAIgG,SAAkBhG,EAAIgG,SAAW,KAC3D,SACA,OAAO,MAIXnE,eAAeiE,GACb,MAAM9F,EAAM4B,EAAMmE,OAAOD,GACzB,IACE,OAAc,MAAP9F,GAA4B,KAAbA,EAAIiG,KAAcjG,EAAIiG,KAAO,KACnD,SACA,OAAO,MAIXpE,iBAAiBiE,GACf,GAAiB,MAAbA,EACF,OAAO,KAIT,GAAkB,MADlBA,EAAYA,EAAUI,QAEpB,OAAO,KAGT,GAAIJ,EAAUK,WAAW,SACvB,OAAO,KAGT,IAAIC,EAAUN,EAAUK,WAAW,YAAcL,EAAUK,WAAW,YAWtE,IATGC,GACDN,EAAUO,QAAQ,OAAS,GAC3BzE,EAAM0E,eAAeT,KAAKC,IAC1BA,EAAUO,QAAQ,KAAO,IAEzBP,EAAY,UAAYA,EACxBM,GAAU,GAGRA,EACF,IACE,MAAMpG,EAAM4B,EAAM2E,aAAaT,GAE/B,KADwC,OAAlBU,MAAAA,OAAK,EAALA,EAAA,UAAyBA,EAAMC,QAAQzG,EAAIgG,WAE/D,OAAO,KAGT,GAAqB,cAAjBhG,EAAIgG,UAA4BpE,EAAM8E,eAAe1G,EAAIgG,UAC3D,OAAOhG,EAAIgG,SAGb,MAAMW,EACK,MAATH,GAAoC,MAAnBA,EAAMI,UAAoBJ,EAAMI,UAAU5G,EAAIgG,UAAY,KAC7E,OAAoB,MAAbW,EAAoBA,EAAY3G,EAAIgG,SAC3C,MAAOxH,IAKX,IACE,MAAMqI,EAAkB,MAATL,GAAoC,MAAnBA,EAAMI,UAAoBJ,EAAMI,UAAUd,GAAa,KAEvF,GAAc,MAAVe,EACF,OAAOA,EAET,SACA,OAAO,KAGT,OAAO,KAGThF,sBAAsBiE,GACpB,MAAM9F,EAAM4B,EAAMmE,OAAOD,GACzB,GAAW,MAAP9F,GAA6B,MAAdA,EAAI8G,QAAiC,KAAf9G,EAAI8G,OAC3C,OAAO,KAET,MAAMjC,EAAM,IAAIkC,IAYhB,OAXiC,MAAlB/G,EAAI8G,OAAO,GAAa9G,EAAI8G,OAAOvD,OAAO,GAAKvD,EAAI8G,QAAQE,MAAM,KAC1EC,SAASC,IACb,MAAMC,EAAQD,EAAKF,MAAM,KACrBG,EAAMlE,OAAS,GAGnB4B,EAAIuC,IACF3C,mBAAmB0C,EAAM,IAAIE,cACjB,MAAZF,EAAM,GAAa,GAAK1C,mBAAmB0C,EAAM,QAG9CtC,EAGThD,uBAAuByF,EAA0BC,GAC/C,MAAO,CAACC,EAAQC,IACC,MAAXD,EAAED,IAA4B,MAAXE,EAAEF,IACf,EAEK,MAAXC,EAAED,IAA4B,MAAXE,EAAEF,GAChB,EAEM,MAAXC,EAAED,IAA4B,MAAXE,EAAEF,GAChB,EAGFD,EAAYI,SACfJ,EAAYI,SAASC,QAAQH,EAAED,GAAOE,EAAEF,IACxCC,EAAED,GAAMK,cAAcH,EAAEF,IAIhC1F,0BAA0Ba,GACxB,OAAc,MAAPA,GAA8B,iBAARA,GAAmC,KAAfA,EAAIwD,OAGvDrE,cAAiBK,GACf,OAAOA,EAGTL,cAAiBgG,EAAWC,GAC1B,OAAOC,OAAOC,OAAOH,EAAQC,GAG/BjG,mBAAkEoG,GAChE,OAAQF,OAAOpJ,KAAKsJ,GAAKpH,QAAQqH,GAAMC,OAAOC,OAAOF,KAAYrD,KAAKqD,GAAMD,EAAIC,KAGlFrG,cAAciE,GACZ,GAAiB,MAAbA,EACF,OAAO,KAIT,GAAkB,MADlBA,EAAYA,EAAUI,QAEpB,OAAO,KAGT,IAAIlG,EAAM4B,EAAM2E,aAAaT,GAC7B,GAAW,MAAP9F,EAAa,GAEoB,IAAjC8F,EAAUO,QAAQ,YAAsD,IAAlCP,EAAUO,QAAQ,cAClCP,EAAUO,QAAQ,MAAQ,IAChDrG,EAAM4B,EAAM2E,aAAa,UAAYT,IAGzC,OAAO9F,EAGT6B,yBAAyBwG,GACvB,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAErD,MAAM,GAGrCnD,sBAAsB2G,GAI5B,MADE,mKACa3C,KAAK2C,GAGd3G,gBAAgB4G,GACtB,IAAIC,GAAS,EACb,IAAElB,EAaF,OAbEA,EAYCiB,EAAIE,UAAUC,WAAaH,EAAIE,UAAUE,QAAWJ,EAAYK,OAT/D,2TAA2TjD,KACzT2B,IAEF,0kDAA0kD3B,KACxkD2B,EAAEjE,OAAO,EAAG,OAGdmF,GAAS,GAGNA,GAAoD,MAA1CD,EAAIE,UAAUC,UAAUG,MAAM,SAGzClH,qBAAqB4G,GAC3B,OAC8C,MAA5CA,EAAIE,UAAUC,UAAUG,MAAM,YACY,MAA1CN,EAAIE,UAAUC,UAAUG,MAAM,SAI1BlH,oBAAoBiE,GAC1B,IACE,GAAe,MAAXpE,EACF,OAAO,IAAIA,EAAQsH,IAAIlD,GAClB,GAAmB,mBAARkD,IAChB,OAAO,IAAIA,IAAIlD,GACV,GAAc,MAAVnE,OAAgB,CACzB,MAAMsH,EAAcnD,EAAUO,QAAQ,QAAU,EAChD,IAAK4C,GAAenD,EAAUO,QAAQ,MAAQ,EAC5CP,EAAY,UAAYA,OACnB,IAAKmD,EACV,OAAO,KAET,MAAMC,EAASvH,OAAOwH,SAASC,cAAc,KAE7C,OADAF,EAAOG,KAAOvD,EACPoD,GAET,MAAO1K,IAIT,OAAO,MAzYF,EAAAsD,QAAS,EACT,EAAAC,QAAS,EACT,EAAAI,WAAY,EACZ,EAAAC,iBAAkB,EAClB,EAAAE,sBAAuB,EACvB,EAAAE,OAAc,KACd,EAAA8D,eACL,iFAEK,EAAAgD,wBACL,02BAmYJ1H,EAAM2H,O,0SCjZC,MAAMC,EAUX3H,mC,yCACE,aAAa2H,EAAWC,eAAe,CACrCC,QAAQ,EACRC,SAAUC,OAAOC,QAAQC,uBAI7BjI,iC,yCACE,aAAa2H,EAAWC,eAAe,CACrCC,QAAQ,EACRK,eAAe,OAInBlI,uB,yCACE,aAAa2H,EAAWQ,UAAU,CAChCN,QAAQ,OAIZ7H,iBAAuBoI,G,yCACrB,OAAO,IAAI5L,SAASC,IAClBsL,OAAOM,KAAKC,MAAMF,GAAUC,IAC1B5L,EAAQ4L,YAKdrI,sBAA4BoI,G,yCAC1B,MAAMC,QAAaV,EAAWQ,UAAUC,GACxC,OAAIC,EAAKjH,OAAS,EACTiH,EAAK,GAGP,QAGTrI,0BACEuI,EACAC,EACAC,EAAY,MAEZ,MAAMrC,EAAW,CACfoC,QAASA,GAOX,OAJY,MAARC,IACFrC,EAAIqC,KAAOA,GAGNd,EAAWe,eAAeH,EAAKnC,GAGxCpG,sBACEuI,EACAnC,EACAgC,EAA0C,M,yCAE1C,GAAKG,GAAQA,EAAIxL,GAIjB,OAAO,IAAIP,SAAeC,IACxBsL,OAAOM,KAAKM,YAAYJ,EAAIxL,GAAIqJ,EAAKgC,GAAS,KACxCL,OAAOa,QAAQC,UAGnBpM,aAKNuD,2BACE,OAAO+H,OAAOe,UAAUC,oBAG1B/I,+BACE,OAAO+H,OAAOa,QAAQI,cAAcC,QAGtCjJ,qB,yCACE,OAAOxD,QAAQC,QAAQsL,OAAOe,UAAUI,SAAS,CAAEC,KAAM,UAAW/H,OAAS,MAG/EpB,oBAAoB7B,EAAaiL,GAAyB,EAAOvB,GAAkB,GACjFE,OAAOM,KAAKgB,OAAO,CAAElL,IAAKA,EAAK0J,OAAQA,IAGzC7H,uBACEK,EACAiJ,GAEAvB,OAAOa,QAAQW,UAAUC,aACvB,CAACC,EAAUC,EAAsCC,KAC/CL,EAASG,EAAKC,EAAQC,MAK5B3J,uB,yCACE,MAAMqI,QAAaV,EAAWQ,UAAU,CACtCN,QAAQ,EACR+B,MAAO,YACPC,WAAY,SACZ3B,eAAe,IAGjB,GAAoB,IAAhBG,EAAKjH,OACP,OAGF,MAAM0I,EAAazB,EAAKA,EAAKjH,OAAS,GAAGrE,GACzCgL,OAAOM,KAAK0B,OAAOD,MAGrB9J,yBAA+BgK,G,yCAC7BjC,OAAOM,KAAK4B,OAAOD,EAAO,CAAEnC,QAAQ,EAAMqC,aAAa,OAGzDlK,kBAAkB4G,GACZe,EAAWwC,oBAAsBxC,EAAWyC,mBAI9CC,QAAQhC,KAAK4B,OAAO,CAAEpC,QAAQ,IAAQyC,QAAQ1D,EAAI2D,OAElD3D,EAAI2D,QAIRvK,oBAAoB4G,EAAa4D,EAAeC,EAAkBC,GAChE,GAAI/C,EAAWgD,YAAa,CAE1B,IAAIlC,EAAe,KAEjBA,EADW,gBAFe,MAAfgC,EAAsBA,EAAYtB,KAAO,OAEL,iBAAbqB,EAC3BA,EAEAzK,EAAMwC,gBAAgBiI,GCrJ9B,MACLxK,wBAAwBwI,EAAiBC,EAAY,KAAMmC,GAAa,GACtE,OAAKjD,EAAWgD,YAGT,IAAInO,SAASC,IAClB,MACMoO,GADM,IAAIC,MAEVC,UAAU/I,WAAa,IAAM6B,KAAKmH,MAAMnH,KAAKC,SAAWwC,OAAO2E,kBACpEZ,QAAgBzB,QAAQsC,kBACvB,wBACA,CACEnO,GAAI8N,EACJrC,QAASA,EACTC,KAAMA,EACN0C,aAAc,OAEfxB,IACClN,EAAQkN,SAfLnN,QAAQC,QAAQ,QDoJb2O,iBACR,eACAC,KAAKC,UAAU,CACbd,SAAU/B,EACVgC,YAAaA,EACbC,SAAUA,KAEZ,OAEG,CACL,MAAMa,EAAO,IAAIC,KAAK,CAAChB,GAAWC,GAClC,GAAI3D,UAAU2E,iBACZ3E,UAAU4E,WAAWH,EAAMb,OACtB,CACL,MAAM/E,EAAIiB,EAAIU,SAASC,cAAc,KACrC5B,EAAE6B,KAAOL,IAAIwE,gBAAgBJ,GAC7B5F,EAAEiG,SAAWlB,EACb9D,EAAIU,SAASuE,KAAKC,YAAYnG,GAC9BA,EAAEoG,QACFnF,EAAIU,SAASuE,KAAKG,YAAYrG,KAKpC3F,kBACE,OAAO,EAGTA,qBAAqB4G,GACnB,OAAOmB,OAAOkE,KAAKC,gBAGrBlM,uBAAuB4G,GACrB,OAAW,MAAPA,EACKA,EAAIuF,SAASC,QAAO,GAEpBrE,OAAOa,QAAQwD,SAI1BpM,2BACgB+H,OAAOe,UAAUI,WAE5BlK,QAAQqN,GAAyB,MAAnBA,EAAEF,SAAS3E,OACzBpC,SAASiH,IACRA,EAAEF,SAASC,YAIjBpM,qBAAqBsM,GACnB,OAAI3E,EAAWwC,mBACNE,QAAQzB,QAAQ2D,cAAcD,GAC5B3E,EAAW6E,YACbzE,OAAOa,QAAQ2D,cAAcD,QAD/B,EAKTtM,yBAAyByM,GACvB,OAAI9E,EAAWwC,mBACNE,QAAQqC,YAAYC,QAAQF,GAE9B,IAAIjQ,SAAQ,CAACC,EAASmQ,KAC3B7E,OAAO2E,YAAYC,QAAQF,EAAYhQ,MAI3CuD,yBACE,OAAI2H,EAAWwC,mBACNE,QAAQzB,QAAQiE,kBAElB,IAAIrQ,SAASC,IAClBsL,OAAOa,QAAQiE,gBAAgBpQ,OA3N5B,EAAA0N,mBAAiD,oBAAZE,QACrC,EAAAM,aACwC,IAA7C7D,UAAUC,UAAUvC,QAAQ,cACiB,IAA7CsC,UAAUC,UAAUvC,QAAQ,cACmB,IAA/CsC,UAAUC,UAAUvC,QAAQ,cACvB,EAAAgI,aAAwB7E,EAAWgD,aAAiC,oBAAX5C,OACzD,EAAAqC,oBACwC,IAA7CtD,UAAUC,UAAUvC,QAAQ,cAAkE,IAA5CsC,UAAUC,UAAUvC,QAAQ,W,0SEL3E,MAAM,EAEXlH,YACUC,EACAC,EACAG,GAFA,KAAAJ,oBAAAA,EACA,KAAAC,OAAAA,EACA,KAAAG,aAAAA,EAJA,KAAAc,SAAW,QAOfb,c,yCAEJ,SADuBG,KAAKJ,aAAaK,qBAC3B,CAOZ,aANqBD,KAAKR,oBAAoBW,YAE5CH,KAAKP,OAAOY,SAAS,CAAC,SAEtBL,KAAKP,OAAOY,SAAS,CAACL,KAAKU,YAEtB,EAET,OAAO,M,iCAnBE,GAAkB,4D,uCAAlB,EAAkB,QAAlB,EAAkB,O,0SCCxB,MAAMqO,EACXxP,YAAoBE,EAAwBuP,GAAxB,KAAAvP,OAAAA,EAAwB,KAAAuP,mBAAAA,EAEtCnP,c,yCACJ,OAAsC,MAAlC+J,EAAWoB,qBACbhL,KAAKP,OAAOY,SAAS,CAAC,kBACf,SAEIL,KAAKgP,mBAAmBnP,kB,iCAR5BkP,GAAkB,2C,uCAAlBA,EAAkB,QAAlBA,EAAkB,OCDxB,MAAeE,GCWf,MAAeC,GClBf,MAAeC,G,0SCOf,MAAM,EAWX5P,YACY6P,EACAC,EACA3H,GAFA,KAAA0H,qBAAAA,EACA,KAAAC,mBAAAA,EACA,KAAA3H,YAAAA,EAbF,KAAA4H,QAAU,IAAI,EAAAC,aAQxB,KAAAC,YAAa,EAOX,MAAMC,EAAOzP,KAAKqP,mBAAmBK,UAErC1P,KAAK2P,QAAUF,EAAKG,MAAQ,GAC5B5P,KAAK6P,YAAcJ,EAAKK,UAAY,GACpC9P,KAAK+P,OAASN,EAAKO,KAAO,GAC1BhQ,KAAKiQ,YAAcR,EAAKS,UAAY,GACpClQ,KAAKmQ,SAAWV,EAAKW,OAAS,GAC9BpQ,KAAKqQ,iBAAmBZ,EAAKa,eAAiB,GAG1CC,S,yCACJ,MAAMC,QAAgBxQ,KAAKqP,mBAAmBoB,QAAQ,CACpDb,KAAM5P,KAAK2P,QACXK,IAAKhQ,KAAK+P,OACVG,SAAUlQ,KAAKiQ,YACfH,SAAU9P,KAAK6P,YACfO,MAAOpQ,KAAKmQ,SACZG,cAAetQ,KAAKqQ,mBAItBrQ,KAAK2P,QAAUa,EAAQZ,KACvB5P,KAAK+P,OAASS,EAAQR,IACtBhQ,KAAKiQ,YAAcO,EAAQN,SAC3BlQ,KAAK6P,YAAcW,EAAQV,SAC3B9P,KAAKmQ,SAAWK,EAAQJ,MACxBpQ,KAAKqQ,iBAAmBG,EAAQF,cAEhCtQ,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,qBACxE3Q,KAAK4Q,WAGPC,eACE7Q,KAAKwP,YAAcxP,KAAKwP,WAGhBoB,QACR5Q,KAAKsP,QAAQwB,Q,iCArDJ,GAAoB,gF,oCAApB,EAAoB,8B,eCF1B,MAAMC,EACXxR,YAAoByR,GAAA,KAAAA,GAAAA,EAEGC,UACrBjR,KAAKgR,GAAGE,cAAcC,Q,iCAJbJ,GAAkB,uC,oCAAlBA,EAAkB,mE,2CAAlB,kBCAN,MAAMK,EAIX7R,YAAoB8R,GAAA,KAAAA,MAAAA,EAHpB,KAAAL,GAAkB,KAIhBhR,KAAKgR,GAAKK,EAAMH,cAGlBI,WACEtR,KAAKuR,QAAUxM,MAAM9B,KACnBjD,KAAKgR,GAAGQ,iBAAiB,iDAE3BxR,KAAKuR,QAAQlK,SAASoK,IACpBA,EAAOC,iBACL,SACCxQ,IACClB,KAAKgR,GAAGW,UAAUC,IAAI,aAExB,GAGFH,EAAOC,iBACL,QACCxQ,IACClB,KAAKgR,GAAGW,UAAU3F,OAAO,aAE3B,MAK6BiF,QAAQ/P,GACzC,MAAM+G,EAAS/G,EAAM+G,OACrB,IACEA,IAAWjI,KAAKgR,IACf/I,EAAO0J,UAAUE,SAAS,aAC1B5J,EAAO0J,UAAUE,SAAS,kBAKzB7R,KAAKuR,QAAQlO,OAAS,EAAG,CAC3B,MAAMoO,EAASzR,KAAKuR,QAAQ,GAC5B,GAAqC,UAAjCE,EAAOK,QAAQrK,cAA2B,CAC5C,MAAMsK,EAAUN,EAChB,GAAoB,MAAhBM,EAAQ3G,MAA+C,aAA/B2G,EAAQ3G,KAAK3D,cAEvC,YADAsK,EAAQ/D,QAIZyD,EAAOO,U,iCAlDAZ,GAAe,uC,oCAAfA,EAAe,gE,4CAAf,mBCAN,MAAMa,EAOX1S,YAAoByR,EAAwBkB,GAAxB,KAAAlB,GAAAA,EAAwB,KAAAkB,SAAAA,EAN/BC,qBAAiBC,GAC5BpS,KAAKqS,gBAAgC,KAAdD,IAAkC,IAAdA,EAO7Cd,WACMtR,KAAKqS,kBAAoBrS,KAAKgR,GAAGE,cAAcoB,aAAa,iBAC9DtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,eAAgB,OAE/DlR,KAAKgR,GAAGE,cAAcoB,aAAa,mBACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,iBAAkB,QAEjElR,KAAKgR,GAAGE,cAAcoB,aAAa,gBACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,cAAe,QAE9DlR,KAAKgR,GAAGE,cAAcoB,aAAa,eACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,aAAc,SAE7DlR,KAAKgR,GAAGE,cAAcoB,aAAa,cACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,YAAa,a,iCAvBxDe,GAAsB,2E,oCAAtBA,EAAsB,sFCE5B,MAAMO,EACXjT,YAAoBmI,GAAA,KAAAA,YAAAA,EAEpB+K,UAAUzT,EAAY0T,EAAaC,EAAaC,GAC9C,OAAO5S,KAAK0H,YAAYiJ,EAAE3R,EAAI0T,EAAIC,EAAIC,I,iCAJ7BJ,GAAQ,+B,4CAARA,EAAQ,UCMd,MAAMK,UAA6B,EACxCtT,YACE6P,EACAC,EACA3H,EACQjI,GAERqT,MAAM1D,EAAsBC,EAAoB3H,GAFxC,KAAAjI,OAAAA,EAGRO,KAAKwP,YAAa,EAGpBoB,QACEkC,MAAMlC,QACN5Q,KAAKP,OAAOY,SAAS,CAAC,M,iCAbbwS,GAAoB,iH,oCAApBA,EAAoB,43C,GAAA,MCbjC,kCAAY,8CAAY,EAAAtC,YACtB,sDACE,uDACE,uDAAsB,e,sBAAoB,oBAC5C,6CACA,wDACE,4DAAoB,gB,uBAAsB,oBAC5C,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAmB,oBACjD,sDACF,+CACF,6CACF,2CACA,yDACE,0DACE,2DACE,gB,uBACF,oBACA,4DACE,8DACE,kEAAqB,gB,uBAAsB,oBAC3C,kEAIE,mEAJF,oBAQF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACA,0DACE,2DACE,gB,uBACF,oBACA,4DACE,8DACE,kEAAyB,gB,uBAA0B,oBACnD,kEAIE,uEAJF,oBAQF,iDACA,8DACE,kEAAoB,gB,uBAAqB,oBACzC,kEAIE,kEAJF,oBAQF,iDACA,8DACE,kEAAyB,gB,uBAA0B,oBACnD,kEAIE,uEAJF,oBAQF,iDACA,8DACE,kEAA8B,gB,uBAA+B,oBAC7D,kEAKE,4EALF,oBAQF,iDACA,gEACE,oEAAsB,iB,wBAAuB,oBAC7C,oEAIE,oEAJF,oBAQF,kDACF,gDACA,8DACE,iB,wBACF,oBACF,8CACF,4CACF,0CACA,uB,iCArG4B,yEAGF,4EAGe,wDAC3B,sDAAwB,yEACa,uDAO3C,oHAIuB,4EAKnB,uDAOJ,yHAKA,+GAEuB,0DAEI,gFAKvB,2DAMkB,2EAKlB,sDAMuB,gFAKvB,2DAM4B,qFAM5B,gEAKoB,8EAKpB,wDAMkB,0DACtB,wH,0KCnGD,MAAMwC,EAGXxT,YAAYyT,GACVhT,KAAKgT,MAAQA,G,0SCuKV,MAAeC,GCzKf,MAAeC,GCFf,MAAeC,EAGpB5T,YAAYqM,GACV5L,KAAK4L,SAAWA,EAGRwH,oBACRC,EACAzH,EAAgB,KAChB0H,GAAY,GAEZ,GAAoB,MAAhBD,GAAyC,KAAjBA,EAC1B,MAAM,IAAIxU,MAAM,wCAKlB,GAHgB,MAAZ+M,GAAqC,MAAjB5L,KAAK4L,WAC3BA,EAAW5L,KAAK4L,UAEF,MAAZA,EACF,OAAO,KAET,IAAK0H,QAAwCC,IAA3B3H,EAASyH,GAA6B,CACtD,IAAIG,EAAgC,KAElCA,EADEH,EAAa3K,OAAO,KAAO2K,EAAa3K,OAAO,GAAGC,cAC5B0K,EAAa3K,OAAO,GAAGjB,cAEvB4L,EAAa3K,OAAO,GAAGC,cAE7C0K,EAAahQ,OAAS,IACxBmQ,GAAyBH,EAAajO,MAAM,SAIfmO,IAA3B3H,EADJyH,EAAeG,KAEbH,EAAeA,EAAa5L,oBAEC8L,IAA3B3H,EAASyH,KACXA,EAAeA,EAAa1K,eAGhC,OAAOiD,EAASyH,ICpCb,MAAMI,UAAsBN,EAOjC5T,YAAYqM,EAAe8H,EAAgBC,G,QACzCb,MAAMlH,GACN,IAAIgI,EAAa,KACjB,GAAgB,MAAZhI,EAAkB,CACpB,MAAMiI,EAAqB7T,KAAKoT,oBAAoB,cAElDQ,EADEC,GAAsBF,EACXE,EAEAjI,EAIbgI,GACF5T,KAAK8T,QAAU9T,KAAKoT,oBAAoB,UAAWQ,GACnD5T,KAAK+T,iBAAmB/T,KAAKoT,oBAAoB,mBAAoBQ,GACrE5T,KAAKgU,eAAwD,QAAvC,EAAqB,QAArB,EAAAhU,KAAK+T,wBAAgB,eAAEE,wBAAgB,eAAG,GAChEjU,KAAKkU,iBAAmBlS,EAAMmS,mBAAmBnU,KAAKgU,iBAEvC,MAAXN,IACF1T,KAAK8T,QAAU,yCAGnB9T,KAAKoU,WAAaV,EAGpBW,mBACE,GAA6B,MAAzBrU,KAAK+T,iBACP,OAAO/T,KAAK8T,QAEd,IAAK,MAAMQ,KAAOtU,KAAK+T,iBACrB,GAAK/T,KAAK+T,iBAAiBQ,eAAeD,IAGtCtU,KAAK+T,iBAAiBO,GAAKjR,OAC7B,OAAOrD,KAAK+T,iBAAiBO,GAAK,GAGtC,OAAOtU,KAAK8T,QAGdU,iBACE,MAAMC,EAAqB,GAC3B,GAA6B,MAAzBzU,KAAK+T,iBACP,OAAOU,EAET,IAAK,MAAMH,KAAOtU,KAAK+T,iBAChB/T,KAAK+T,iBAAiBQ,eAAeD,IAG1CtU,KAAK+T,iBAAiBO,GAAKjN,SAASqN,IAClC,IAAIC,EAAS,GACb,GAAIL,EAAI7N,QAAQ,MAAQ,GAAK6N,EAAI7N,QAAQ,MAAQ,EAAG,CAClD,MAAMmO,EAAUN,EAAIO,YAAY,KAChCF,EAASL,EAAI3Q,OAAO,EAAGiR,GAAW,EAAIA,EAAUN,EAAIjR,QAAU,KAEhEoR,EAASK,KAAKH,EAASD,MAG3B,OAAOD,GC7DJ,MAAMM,EACXxV,YACUmI,EACA0H,GADA,KAAA1H,YAAAA,EACA,KAAA0H,qBAAAA,EAGV4F,UAAUtK,GACR,MAAMuK,EAAsBjV,KAAK0H,YAAYiJ,EAAE,mBAC/C,IAAIuE,EAAmB,GAoBvB,OAlBY,MAARxK,GAAgC,iBAATA,EACzBwK,EAAOJ,KAAKpK,GACK,MAARA,GAAgC,iBAATA,EAChCwK,EAAOJ,KAAKG,GACsB,MAAzBvK,EAAKqJ,iBACdmB,EAASA,EAAOC,OAAQzK,EAAuB8J,kBAE/CU,EAAOJ,KAAKpK,EAAKoJ,QAAUpJ,EAAKoJ,QAAUmB,GAGtB,IAAlBC,EAAO7R,OACTrD,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkBuE,EAAO,IAChFA,EAAO7R,OAAS,GACzBrD,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkBuE,EAAQ,CACxFE,QAAS,IAAOF,EAAO7R,SAIpB6R,G,iCA5BEH,GAAiB,oC,uCAAjBA,EAAiB,QAAjBA,EAAiB,OCEvB,MAAMM,EAGX9V,YACUyR,EACAsE,EACAC,GAFA,KAAAvE,GAAAA,EACA,KAAAsE,kBAAAA,EACA,KAAAC,WAAAA,EAGVC,YAAYC,GACe,MAArBzV,KAAK0V,cAAkD,MAA1B1V,KAAK0V,aAAa/W,OAInDqB,KAAKgR,GAAGE,cAAcyE,SAAU,EAEhC3V,KAAK0V,aAAa/W,MACfiN,IACC5L,KAAKgR,GAAGE,cAAcyE,SAAU,KAEjC/W,I,MACCoB,KAAKgR,GAAGE,cAAcyE,SAAU,GAG7B/W,aAAa6U,GAAwC,kBAAvB7U,EAAEW,YAAY+C,OAC5C1D,EAAoBsV,gBAErBlU,KAAKuV,WAAWK,MAAM,oCAAsChX,EAAEyV,qBAGjD,QAAf,EAAArU,KAAKuV,kBAAU,SAAEK,MAAM,2BAA2BhX,KAClDoB,KAAKsV,kBAAkBN,UAAUpW,S,iCA/B5ByW,GAAkB,2F,oCAAlBA,EAAkB,+G,eCDxB,MAAMQ,EAOXtW,YAAoByR,EAAwB8E,GAAxB,KAAA9E,GAAAA,EAAwB,KAAA8E,OAAAA,EAN/BC,iBAAa3D,GACxBpS,KAAKgW,UAA0B,KAAd5D,IAAkC,IAAdA,EAOvCd,YACOtP,EAAMQ,iBAAmBxC,KAAKgW,YAC7BhW,KAAK8V,OAAOG,SACdjW,KAAKgR,GAAGE,cAAcc,QAEtBhS,KAAK8V,OAAOI,SAASlV,MAAK,EAAAmV,EAAA,GAAK,IAAI9U,WAAU,IAAMrB,KAAKgR,GAAGE,cAAcc,Y,iCAdpE6D,GAAkB,wE,oCAAlBA,EAAkB,0ECKxB,MAAMO,UCLN,MAOL7W,YACYE,EACAiI,EACA2O,EACAjH,EACFmG,GAJE,KAAA9V,OAAAA,EACA,KAAAiI,YAAAA,EACA,KAAA2O,WAAAA,EACA,KAAAjH,qBAAAA,EACF,KAAAmG,WAAAA,EAXV,KAAAvC,MAAgB,GAGN,KAAAsD,aAAe,QAWnB/F,S,yCACJ,GAAkB,MAAdvQ,KAAKgT,OAAgC,KAAfhT,KAAKgT,MAQ/B,IAAiC,IAA7BhT,KAAKgT,MAAMvM,QAAQ,KASvB,IACEzG,KAAKuW,YAAcvW,KAAKqW,WAAWG,iBAAiB,IAAIzD,EAAoB/S,KAAKgT,cAC3EhT,KAAKuW,YACXvW,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,mBACzC,MAA3B3Q,KAAKyW,mBACPzW,KAAKyW,qBACmB,MAAfzW,KAAKP,QACdO,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,eAE7B,MAAO1X,GACPoB,KAAKuV,WAAWK,MAAMhX,QAlBtBoB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,sBAXrB3Q,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,uBDdzBpR,YACEE,EACA2P,EACA1H,EACA2O,EACAd,GAEAzC,MAAMrT,EAAQiI,EAAa2O,EAAYjH,EAAsBmG,I,iCARpDa,GAAa,2I,oCAAbA,EAAa,0mB,GAAA,MEd1B,kCAAY,8CAAY,EAAA7F,YACtB,sDACE,uDACE,uDAAuB,e,sBAAqB,oBAC9C,6CACA,wDACE,4DAAoB,gB,uBAA2B,oBACjD,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAqB,oBACnD,sDACF,+CACF,6CACF,2CACA,yDACE,0DACE,4DACE,8DACE,kEAAmB,gB,uBAA2B,oBAC9C,kEAIE,iEAJF,oBAUF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACF,2CACF,yCACA,sB,iCAtCkC,8CAGL,0EAGH,iFAGe,wDAC3B,sDAAwB,2EACa,uDAQtB,kFAKjB,qDASJ,mH,kMC5BD,MAAemG,GCFf,MAAeC,I,2SCWf,MAAMC,GACXrX,YACY6P,EACFyH,EACAjX,EACAkX,EACAzH,GAJE,KAAAD,qBAAAA,EACF,KAAAyH,0BAAAA,EACA,KAAAjX,aAAAA,EACA,KAAAkX,sBAAAA,EACA,KAAAzH,mBAAAA,EAGJ0H,mB,0CAEJ,MAAMC,EAAuB,CAC3B5L,KAAM,WACN/H,OAAQ,GACR4T,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,SAAS,GAGLC,SACGrX,KAAK6W,0BAA0BS,iBAAiBN,IACvD,oBACIO,QAAqBvX,KAAK6W,0BAA0BS,iBAAiBN,GACrEQ,QAAyBxX,KAAK8W,sBAAsBW,KAAKF,EAAc,UACvEG,EAAgB1V,EAAM0D,mBAAmB8R,SAEzCxX,KAAKJ,aAAa+X,mBAAmBJ,SACrCvX,KAAKJ,aAAagY,YAAYP,GAEpC,IAAIjX,EAAMJ,KAAKqP,mBAAmBwI,iBACvB,MAAPzX,IACFA,EAAM,+BAGR,MAAM0X,EAAc1X,EAAM,sBAG1BJ,KAAKoP,qBAAqB2I,UACxB3X,EAAAA,uCAGE0D,mBAAmBgU,GACnB,UACAT,EACA,kBACAK,O,kCA9CKd,IAAa,qI,qCAAbA,GAAa,obCd1B,+BACE,qDACE,kDACA,qDAA4B,e,sBAAsC,oBAClE,sDACG,4BAAG,gB,uBAAoB,oBAAI,oBAE9B,4DAAsB,2CAAS,EAAAG,sBAC7B,oDAAgD,gB,uBAClD,oBACA,uDAA4C,gB,uBAA4B,oBAC1E,2CACF,yCACA,mDACE,gDAAuD,+BAAM,gB,uBAA6B,oBAC5F,yCACA,sB,MAbgC,0FAEtB,yEAG4C,wGAEN,kFAIe,uF,kECdnDiB,G,wBAAZ,SAAYA,GACV,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,yEAPF,CAAYA,KAAAA,GAAc,K,ICAdC,GCAAC,G,uSCQL,MAAMC,GAQX5Y,YACE6Y,EACA1N,EACA2N,EACAC,GAEA,GAAY,MAAR5N,EAAc,CAEhB,MAAM6N,EAAUH,EAkBhB,OAfEpY,KAAKwY,gBADG,MAANH,EACqBE,EAAU,IAAMF,EAAK,IAAM3N,EAE3B6N,EAAU,IAAM7N,EAI9B,MAAP4N,IACFtY,KAAKwY,iBAAmB,IAAMF,GAGhCtY,KAAKyY,eAAiBF,EACtBvY,KAAK0K,KAAOA,EACZ1K,KAAKqY,GAAKA,OACVrY,KAAKsY,IAAMA,GAMb,GADAtY,KAAKwY,gBAAkBJ,GAClBpY,KAAKwY,gBACR,OAGF,MAAME,EAAe1Y,KAAKwY,gBAAgBpR,MAAM,KAChD,IAAIuR,EAAsB,KAE1B,GAA4B,IAAxBD,EAAarV,OACf,IACErD,KAAKyY,eAAiB/U,SAASgV,EAAa,GAAI,MAChDC,EAAYD,EAAa,GAAGtR,MAAM,KAClC,MAAOxI,GACP,YAGF+Z,EAAY3Y,KAAKwY,gBAAgBpR,MAAM,KACvCpH,KAAKyY,eACkB,IAArBE,EAAUtV,OACN2U,GAAeY,yBACfZ,GAAea,cAGvB,OAAQ7Y,KAAKyY,gBACX,KAAKT,GAAeY,yBACpB,KAAKZ,GAAec,yBAClB,GAAyB,IAArBH,EAAUtV,OACZ,OAGFrD,KAAKqY,GAAKM,EAAU,GACpB3Y,KAAK0K,KAAOiO,EAAU,GACtB3Y,KAAKsY,IAAMK,EAAU,GACrB,MACF,KAAKX,GAAea,cAClB,GAAyB,IAArBF,EAAUtV,OACZ,OAGFrD,KAAKqY,GAAKM,EAAU,GACpB3Y,KAAK0K,KAAOiO,EAAU,GACtB,MACF,KAAKX,GAAee,uBACpB,KAAKf,GAAegB,qBAClB,GAAyB,IAArBL,EAAUtV,OACZ,OAGFrD,KAAK0K,KAAOiO,EAAU,GACtB,MACF,QACE,QAIAM,QAAQC,EAAe5E,EAA0B,M,0CACrD,GAA2B,MAAvBtU,KAAKmZ,eACP,OAAOnZ,KAAKmZ,eAGd,IAAIC,EACJ,MAAMC,EAAoBrX,EAAMY,OAAN,0BAC1B,IAAIyW,EAGF,MAAM,IAAIxa,MAAM,qDAFhBua,EAAgBC,EAAiBC,mBAKnC,IACa,MAAPhF,IACFA,QAAY8E,EAAcG,UAAUL,IAEtClZ,KAAKmZ,qBAAuBC,EAAcI,cAAcxZ,KAAMsU,GAC9D,MAAO1V,GACPoB,KAAKmZ,eAAiB,0BAExB,OAAOnZ,KAAKmZ,mBCzHT,MAAMM,KHAb,SAAYxB,GACV,iDACA,+CAFF,CAAYA,KAAAA,GAAW,KCAvB,SAAYC,GACV,cACA,wBAFF,CAAYA,KAAAA,GAAgB,KGYrB,MAAewB,I,2SCcf,MAAM,GAmBXna,YACYE,EACAiI,EACA0H,EACA1P,EACA0Z,EACA5Z,EACA6P,EACAzP,EACAyW,EACFd,EACA5V,EACEmW,GAXA,KAAArW,OAAAA,EACA,KAAAiI,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAA1P,iBAAAA,EACA,KAAA0Z,cAAAA,EACA,KAAA5Z,oBAAAA,EACA,KAAA6P,mBAAAA,EACA,KAAAzP,aAAAA,EACA,KAAAyW,WAAAA,EACF,KAAAd,WAAAA,EACA,KAAA5V,oBAAAA,EACE,KAAAmW,OAAAA,EA9BZ,KAAA6D,eAAyB,GACzB,KAAAC,IAAc,GACd,KAAAC,cAAwB,EAExB,KAAAC,SAAmB,EACnB,KAAAC,iBAA2B,GAOjB,KAAAzD,aAAuB,QAGzB,KAAA0D,mBAAqB,EAkBvB1I,W,gDAEEtR,KAAKia,OACXja,KAAKJ,aAAasa,cAAc7Y,WAAiB8Y,GAAY,yCACrDna,KAAKia,eAIT1J,S,0CACJ,GAAIvQ,KAAK8Z,UAAwB,MAAZ9Z,KAAK4Z,KAA4B,KAAb5Z,KAAK4Z,KAM5C,YALA5Z,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,gBAIvB,IAAK3Q,KAAK8Z,UAAmC,MAAvB9Z,KAAK2Z,gBAAkD,KAAxB3Z,KAAK2Z,gBAMxD,YALA3Z,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,uBAKvB,MAAMyJ,QAAYpa,KAAKJ,aAAaya,aAC9BC,QAAsBta,KAAKJ,aAAa2a,mBAE9C,GAAIva,KAAK8Z,QAAS,CAChB,IAAIU,GAAS,EACb,IACE,GAAIxa,KAAKya,OAAO,GAAI,CAClB,MAAMnG,QAAYtU,KAAKoZ,cAAcsB,eACnC1a,KAAK4Z,IACL5Z,KAAKgT,MACLoH,EACAE,QACMta,KAAKJ,aAAa+a,4BAEpBC,QAAe5a,KAAKoZ,cAAcyB,UAAUvG,GAC5CwG,QAAqB9a,KAAKJ,aAAamb,kBAK7CP,SAJqBxa,KAAKoZ,cAAcI,cACtC,IAAIrB,GAAU2C,GACdF,MAEkB5a,KAAK4Z,IACpBY,UACGxa,KAAKgb,kBAAkB1G,QAE1B,CACL,MAAMA,QAAYtU,KAAKoZ,cAAcsB,eACnC1a,KAAK4Z,IACL5Z,KAAKgT,MACLoH,EACAE,GAEFE,GAAS,QACHxa,KAAKgb,kBAAkB1G,IAE/B,SACAkG,GAAS,EAGX,GAAIA,EAAQ,CAEV,GADAxa,KAAKga,qBACDha,KAAKga,oBAAsB,EAE7B,YADAha,KAAKN,iBAAiBQ,KAAK,UAG7BF,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,oBAGlB,CACL,MAAM2D,QAAYtU,KAAKoZ,cAAc6B,QACnCjb,KAAK2Z,eACL3Z,KAAKgT,MACLoH,EACAE,GAIF,IAAIY,GAAgB,EAEpB,GAAqB,aAJOlb,KAAKoZ,cAAc+B,cAK7CD,QAAsBlb,KAAKoZ,cAAcgC,wBAAwBpb,KAAK2Z,eAAgBrF,OACjF,CACL,MAAM1F,EAAU,IAAI6K,GACd4B,QAAsBrb,KAAKoZ,cAAckC,aAC7Ctb,KAAK2Z,eACLrF,EACA2D,GAAYsD,qBAEd3M,EAAQ4M,mBAAqBH,EAC7B,IACErb,KAAKuW,YAAcvW,KAAKqW,WAAWoF,0BAA0B7M,SACvD5O,KAAKuW,YACX2E,GAAgB,EAChB,MAAMQ,QAAqB1b,KAAKoZ,cAAckC,aAC5Ctb,KAAK2Z,eACLrF,EACA2D,GAAY0D,0BAER3b,KAAKoZ,cAAcwC,WAAWF,GACpC,MAAO9c,GACPoB,KAAKuV,WAAWK,MAAMhX,IAI1B,GAAIsc,EAAe,CACjB,GAAIlb,KAAKya,OAAO,GAAI,CAClB,MAAMK,QAAqB9a,KAAKJ,aAAamb,kBACvCH,QAAe5a,KAAKoZ,cAAcyB,UAAUvG,GAC5CuH,QAAe7b,KAAKoZ,cAAcI,cACtC,IAAIrB,GAAU2C,GACdF,GAEIkB,QAAe9b,KAAKoZ,cAAc2C,WACtCF,EACA7b,KAAKgT,MACLoH,EACAE,SAEIta,KAAKJ,aAAaoc,+BAChBhc,KAAKoZ,cAAc6C,QAAQ3H,EAAIA,IAAKwH,UAGxC9b,KAAKgb,kBAAkB1G,QAE7BtU,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,8BAMrBuL,S,iDACoBlc,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKN,iBAAiBQ,KAAK,aAIzBkc,kB,0CACJ,IAAKpc,KAAKqc,cACR,OAGF,MAAMC,EAA2E,aAA1Dtc,KAAKoZ,cAAcmD,OAAOrE,GAAiBsE,YAMlE,OAJIF,UACItc,KAAKyc,cAGNH,KAGTI,iBACE1c,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1B,MAAM8C,EAAQpT,SAASqT,eAAe5c,KAAK8Z,QAAU,MAAQ,kBACzD9Z,KAAK8V,OAAOG,SACd0G,EAAM3K,QAENhS,KAAK8V,OAAOI,SAASlV,MAAK,EAAAmV,EAAA,GAAK,IAAI9U,WAAU,IAAMsb,EAAM3K,UAI/CgJ,kBAAkB1G,G,gDACxBtU,KAAKoZ,cAAcyD,OAAOvI,SAC1BtU,KAAKyc,gBAGCA,a,gDACNzc,KAAKJ,aAAakd,oBAAmB,SACrC9c,KAAKJ,aAAamd,qBAAoB,GAC5C,MAAMC,QAAuBhd,KAAKJ,aAAaqd,0BACzCjd,KAAKJ,aAAasd,oBAAoBF,GAC5Chd,KAAKN,iBAAiBQ,KAAK,YACI,MAA3BF,KAAKyW,yBACDzW,KAAKyW,qBACa,MAAfzW,KAAKP,QACdO,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,kBAIjB2D,O,0CACZja,KAAKya,aAAeza,KAAKR,oBAAoB2d,eAC7Cnd,KAAK8Z,QACF9Z,KAAKya,OAAO,IAA8D,aAAjDza,KAAKJ,aAAa+a,6BAC5C3a,KAAKya,OAAO,GACdza,KAAKod,wBAA0Bpd,KAAKoP,qBAAqBgO,oBACzDpd,KAAKqc,qBACIrc,KAAKR,oBAAoB6d,+BACxBrd,KAAKoZ,cAAckE,aAAapF,GAAiBsE,cACtDxc,KAAKoP,qBAAqBmO,yBAC/Bvd,KAAKwd,oBAAsBxd,KAAKJ,aAAa6d,mBAC7Czd,KAAKgT,YAAchT,KAAKJ,aAAa8d,WACrC,MAAMC,QAAyB3d,KAAKL,oBAAoBie,sBACxD5d,KAAK6d,UAAYF,IAAqB3d,KAAK8Z,SAGvC6D,GAAsB3d,KAAKqc,eAAiBrc,KAAK8Z,gBAC7C9Z,KAAKR,oBAAoB0c,UAGjC,MAAMrM,EAAc7P,KAAKqP,mBAAmBwI,iBACtCiG,EACY,gCAAhBjO,EAAgD,wBAA0BA,EAC5E7P,KAAK+Z,iBAAmB/X,EAAM+b,YAAYD,O,kCA5PjC,IAAa,yU,qCAAb,K,gBCrBN,MAAME,GACwB/M,QAAQgN,GACzCA,EAAOC,kB,kCAFEF,K,qCAAAA,GAAkB,mE,4CAAlB,mBCAN,MAAMG,GAOX5e,YAAoByR,EAAwBkB,GAAxB,KAAAlB,GAAAA,EAAwB,KAAAkB,SAAAA,EAN/BkM,iBAAavS,GACxB7L,KAAK6L,MAAQA,EAOfyF,WACOtR,KAAKgR,GAAGE,cAAcoB,aAAa,UACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,QAASlR,KAAK6L,OAE7D7L,KAAKgR,GAAGE,cAAcoB,aAAa,eACtCtS,KAAKkS,SAASK,aAAavS,KAAKgR,GAAGE,cAAe,aAAclR,KAAK6L,Q,kCAd9DsS,IAAkB,2E,qCAAlBA,GAAkB,0E,kUCEzB,mCAAsD,e,sBAAqB,qB,MAArB,0E,yDAOlD,gCACE,kEAAiB,e,sBAAkB,oBACnC,kEAKE,yGALF,oBASF,kD,sCAVmB,sEAGf,sFAGA,kC,yDAKJ,gCACE,kEAA4B,e,sBAAyB,oBACrD,kEAKE,oHALF,oBASF,kD,sCAV8B,6EAG1B,sFAGA,6C,uHApBN,gCACE,iEAYA,iEAYA,8DACE,mEAME,0G,sBAGA,6DAKF,qDACF,mDACF,iD,qCAzCyB,oDAYA,qDAkBnB,sGAEA,gDAIE,wG,yDAYZ,+BACE,yDACE,+DAAgD,2GAC9C,e,sBACF,oBACF,8CACF,4C,MAHM,qHC5CH,MAAME,WAAsB,GAGjC9e,YACEE,EACAiI,EACA0H,EACA1P,EACA0Z,EACA5Z,EACA6P,EACAzP,EACAyW,EACAd,EACA5V,EACAmW,GAEAhD,MACErT,EACAiI,EACA0H,EACA1P,EACA0Z,EACA5Z,EACA6P,EACAzP,EACAyW,EACAd,EACA5V,EACAmW,GAEF9V,KAAKsW,aAAe,gBACpBtW,KAAKse,oBAA0D,MAAnCvc,OAAewc,iBAGvCjN,W,sHACE,EAAMA,SAAQ,WACpB,MAAMkN,EACsD,QAAzD,QAAMxe,KAAKJ,aAAa6e,wCAAiC,SAE5D1c,OAAO2c,YAAW,IAAY,mCAC5BnV,SAASqT,eAAe5c,KAAK8Z,QAAU,MAAQ,kBAAkB9H,QAC7DhS,KAAKqc,gBAAkBmC,GAA+Bxe,KAAKse,4BACnDte,KAAKR,oBAAoBW,oBAC3BH,KAAKoc,uBAGd,QAGCA,kB,wHACJ,IAAKpc,KAAKqc,cACR,OAGF,MAAMsC,EAAMpV,SAASC,cAAc,OACnCmV,EAAIC,UAAY,2BAA2B5e,KAAK0H,YAAYiJ,EAAE,wBAE9D,UAAU,CACRkO,YAAY,EACZC,gBAAgB,EAChBC,KAAMJ,EACNK,kBAAkB,EAClBC,iBAAkBjf,KAAK0H,YAAYiJ,EAAE,UACrCuO,mBAAmB,IAGrB,MAAM5C,QAAgB,EAAMF,gBAAe,WAO3C,OAJIE,GACF,aAGKA,M,kCA1EE+B,IAAa,yU,qCAAbA,GAAa,4kCDrB1B,gCAAM,8CAAY,EAAA9N,YAChB,sDACE,kDACA,sDACE,0DAAoB,e,uBAA6B,oBACnD,6CACA,yDACE,iEACF,6CACF,2CACA,yDACE,yDACE,2DACE,kEA2CF,+CACA,2DACE,yDAAG,gB,uBAAgC,oBACnC,gB,uBACF,oBACF,6CACA,6DAOA,wDACE,+DAAmC,2CAAS,EAAA2L,YAAU,gB,uBAAqB,oBAC7E,6CACF,2CACF,yCACA,sB,MAtE0B,kFAGgB,uDAM2B,wDA6C1D,qFACH,qIAGc,0DAQsC,6E,kMEnErD,MAAMiD,WCDN,MAKL5f,YACUsJ,EACEgH,EACFuP,EACAC,EACDC,EACAC,EACAC,GANC,KAAA3W,IAAAA,EACE,KAAAgH,YAAAA,EACF,KAAAuP,KAAAA,EACA,KAAAC,SAAAA,EACD,KAAAC,gBAAAA,EACA,KAAAC,cAAAA,EACA,KAAAC,aAAAA,EATD,KAAAC,cAAgBzf,KAAK0f,aAAaC,KAAK3f,MAW7CA,KAAK4f,cAAgB/W,EAAIU,SAASC,cAAc,KAGlDqW,OACE7f,KAAK4K,YAAY,QAGnBkV,QACE9f,KAAK4K,YAAY,SAGnBA,YAAYkJ,GACL9T,KAAK+f,QAAW/f,KAAK+f,OAAOC,KAAQhgB,KAAK+f,OAAOE,eAIrDjgB,KAAK+f,OAAOE,cAAcC,YAAYpM,EAAS9T,KAAK+f,OAAOC,KAG7DG,aAAard,GACX,OAAOwB,KACLR,mBAAmBhB,GAAK4B,QAAQ,mBAAmB,CAACyE,EAAOuJ,IAClDtO,OAAOC,aAAc,KAAOqO,MAKzC0N,UACEpgB,KAAK6I,IAAIwX,oBAAoB,UAAWrgB,KAAKyf,eAAe,GAGpDa,aAAa5V,EAAWQ,GAChC,OAAO,IAAIqV,gBAAgB,CACzB7V,KAAM1K,KAAKmgB,aAAa7S,KAAKC,UAAU7C,IACvC8V,OAAQ1c,mBAAmB9D,KAAK6I,IAAIU,SAAS6E,SAAS3E,MACtDgX,EAAGvV,EAAQjH,aAILyc,cAAcC,GACtB3gB,KAAK4f,cAAcnW,KAAO,GAAGzJ,KAAK6P,eAAe7P,KAAKof,QAAQuB,IAC9D3gB,KAAK+f,OAAS/f,KAAK6I,IAAIU,SAASqT,eAAe5c,KAAKqf,UACpDrf,KAAK+f,OAAOC,IAAMhgB,KAAK4f,cAAcnW,KAErCzJ,KAAK6I,IAAI6I,iBAAiB,UAAW1R,KAAKyf,eAAe,GAGnDC,aAAaxe,GACnB,IAAKlB,KAAK4gB,aAAa1f,GACrB,OAGF,MAAMqG,EAAkBrG,EAAMwJ,KAAKtD,MAAM,KACxB,YAAbG,EAAM,IAAoBvH,KAAKsf,gBACjCtf,KAAKsf,gBAAgB/X,EAAM,IACL,UAAbA,EAAM,IAAkBvH,KAAKuf,cACtCvf,KAAKuf,cAAchY,EAAM,IACH,SAAbA,EAAM,IAAiBvH,KAAKwf,cACrCxf,KAAKwf,aAAajY,EAAM,IAIpBqZ,aAAa1f,GACnB,OACkB,MAAhBA,EAAM2f,QACW,KAAjB3f,EAAM2f,QACN3f,EAAM2f,SAAY7gB,KAAK4f,cAAsBiB,QAC/B,MAAd3f,EAAMwJ,MACgB,iBAAfxJ,EAAMwJ,OAMsB,IAAnCxJ,EAAMwJ,KAAKjE,QAAQ,aACc,IAAjCvF,EAAMwJ,KAAKjE,QAAQ,WACa,IAAhCvF,EAAMwJ,KAAKjE,QAAQ,YDxFvBlH,YACEsJ,EACAgH,EACQnI,EACR4X,EACAC,EACAC,GAEA1M,MACEjK,EACAgH,EACA,yBACA,kBACAyP,EACAC,GACCzL,IACC,MAAMgN,EAAgBxT,KAAKyT,MAAMjN,GACJ,iBAAlBgN,GACT9gB,KAAK+f,OAAOiB,OAASF,EAAcE,OAAO/c,WAC1CjE,KAAK+f,OAAOkB,MAAQH,EAAcG,MAAMhd,YAExCub,EAAasB,MAlBX,KAAApZ,YAAAA,EAwBViC,KAAKuX,GACHpO,MAAM4N,cACJ1gB,KAAKsgB,aAAa,CAAEY,QAASA,EAASC,OAAQnhB,KAAK0H,YAAY0Z,mBAAqB,K,2SEtBnF,MAAeC,GAKpB9hB,YACY8P,EACA3H,EACA0H,GAFA,KAAAC,mBAAAA,EACA,KAAA3H,YAAAA,EACA,KAAA0H,qBAAAA,EAPH,KAAA4E,eAAyB,KAClC,KAAAsN,aAAuB,KASjBC,e,0CACJ,MAAM1R,EAAc7P,KAAKqP,mBAAmBwI,iBAE5C7X,KAAKwhB,QAAU,IAAIrC,GACjBpd,OACA8N,EACA7P,KAAK0H,aACJ+Z,IACCzhB,KAAKshB,aAAeG,KAErB7L,IACC5V,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkBiF,MAEnF8L,IACC1hB,KAAKoP,qBAAqBsB,UAAU,OAAQ1Q,KAAK0H,YAAYiJ,EAAE,QAAS+Q,SAK9EC,cACE,OAAQ3f,EAAMmS,mBAAmBnU,KAAKgU,gBAG9B4N,sBAAsBhW,GAC9B,OAAI5J,EAAMmS,mBAAmBvI,EAASoI,kBAItChU,KAAKgU,eAAiBpI,EAASoI,eAC/BhU,KAAKwhB,QAAQ7X,KAAKiC,EAASoI,iBACpB,I,kCAzCWqN,IAAyB,gF,qCAAzBA,GAAyB,2CCNxC,MAAeQ,I,2SCiBf,MAAM,WAAuBR,GAiBlC9hB,YACYuiB,EACAriB,EACV2P,EACA1H,EACU9H,EACVyP,EACUwH,EACAC,EACAvB,EACAO,GAEVhD,MAAMzD,EAAoB3H,EAAa0H,GAX7B,KAAA0S,YAAAA,EACA,KAAAriB,OAAAA,EAGA,KAAAG,aAAAA,EAEA,KAAAiX,0BAAAA,EACA,KAAAC,sBAAAA,EACA,KAAAvB,WAAAA,EACA,KAAAO,OAAAA,EA1BH,KAAA9C,MAAgB,GAChB,KAAA+O,eAAgB,EAEzB,KAAApI,eAAyB,GACzB,KAAAE,cAAwB,EAOd,KAAAmI,eAAiB,MACjB,KAAA1L,aAAe,QACf,KAAA2L,wBAA0B,uBAC1B,KAAAC,qBAA+B,EAiBnC5Q,W,0CACc,MAAdtR,KAAKgT,OAAgC,KAAfhT,KAAKgT,QAC7BhT,KAAKgT,YAAchT,KAAKJ,aAAauiB,qBACnB,MAAdniB,KAAKgT,QACPhT,KAAKgT,MAAQ,KAGZhT,KAAKkiB,sBACRliB,KAAK+hB,cAAkE,aAA3C/hB,KAAKJ,aAAauiB,uBAE5CngB,EAAMO,YAAcP,EAAMG,QAC5BnC,KAAKoiB,gBAIH7R,S,0CAGJ,SAFMvQ,KAAKuhB,eAEO,MAAdvhB,KAAKgT,OAAgC,KAAfhT,KAAKgT,MAQ/B,IAAiC,IAA7BhT,KAAKgT,MAAMvM,QAAQ,KAQvB,GAA2B,MAAvBzG,KAAK2Z,gBAAkD,KAAxB3Z,KAAK2Z,eASxC,IACE3Z,KAAKuW,YAAcvW,KAAK8hB,YAAYO,MAAMriB,KAAKgT,MAAOhT,KAAK2Z,eAAgB3Z,KAAKshB,cAChF,MAAM1V,QAAiB5L,KAAKuW,YAM5B,GALIvW,KAAK+hB,eAAiB/hB,KAAKkiB,0BACvBliB,KAAKJ,aAAa0iB,mBAAmBtiB,KAAKgT,aAE1ChT,KAAKJ,aAAa0iB,mBAAmB,MAEzCtiB,KAAK4hB,sBAAsBhW,GAC7B,OACK,GAAIA,EAAS2W,UAC6B,MAA3CviB,KAAKwiB,mCACPxiB,KAAKwiB,qCAELxiB,KAAKP,OAAOY,SAAS,CAACL,KAAKgiB,sBAExB,GAAIpW,EAAS6W,mBAC8B,MAA5CziB,KAAK0iB,oCACP1iB,KAAK0iB,sCAEL1iB,KAAKP,OAAOY,SAAS,CAACL,KAAKiiB,8BAExB,CACL,MAAMjF,QAAuBhd,KAAKJ,aAAaqd,0BACzCjd,KAAKJ,aAAasd,oBAAoBF,GACd,MAA1Bhd,KAAK2iB,mBACP3iB,KAAK2iB,oBAE+B,MAAlC3iB,KAAK4iB,0BACP5iB,KAAK4iB,4BAEL5iB,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,gBAG/B,MAAO1X,GACPoB,KAAKuV,WAAWK,MAAMhX,QA3CtBoB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,4BAXrB3Q,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,sBAXrB3Q,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,qBA4DzB+L,iBACE1c,KAAK6Z,cAAgB7Z,KAAK6Z,aACtB7Z,KAAK8V,OAAOG,SACd1M,SAASqT,eAAe,kBAAkB5K,QAE1ChS,KAAK8V,OAAOI,SACTlV,MAAK,EAAAmV,EAAA,GAAK,IACV9U,WAAU,IAAMkI,SAASqT,eAAe,kBAAkB5K,UAI3D+E,iBAAiB8L,EAAkBC,G,0CAEvC,MAAM9L,EAAuB,CAC3B5L,KAAM,WACN/H,OAAQ,GACR4T,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,SAAS,GAELC,QAAcrX,KAAK6W,0BAA0BS,iBAAiBN,GAC9D+L,QAAwB/iB,KAAK6W,0BAA0BS,iBAAiBN,GACxEQ,QAAyBxX,KAAK8W,sBAAsBW,KAAKsL,EAAiB,UAC1ErL,EAAgB1V,EAAM0D,mBAAmB8R,SAGzCxX,KAAKJ,aAAagY,YAAYP,SAC9BrX,KAAKJ,aAAa+X,mBAAmBoL,GAG3C,MAAMC,EAAShjB,KAAKqP,mBAAmBwI,iBAGvC7X,KAAKoP,qBAAqB2I,UACxBiL,EACE,mBACAH,EACA,gBACA/e,mBAAmBgf,GACnB,UACAzL,EACA,kBACAK,MAII0K,aACR7Y,SACGqT,eAA6B,MAAd5c,KAAKgT,OAAgC,KAAfhT,KAAKgT,MAAe,QAAU,kBACnEhB,S,kCApKM,IAAc,sR,qCAAd,GAAc,kGChBpB,MAAeiR,I,yWCaf,MAAMC,WAAuB,GAGlC3jB,YACEuiB,EACAriB,EACU2P,EACA1H,EACA9H,EACAyP,EACAwH,EACAC,EACVqM,EACA5N,EACAO,GAEAhD,MACEgP,EACAriB,EACA2P,EACA1H,EACA9H,EACAyP,EACAwH,EACAC,EACAvB,EACAO,GApBQ,KAAA1G,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAA9H,aAAAA,EACA,KAAAyP,mBAAAA,EACA,KAAAwH,0BAAAA,EACA,KAAAC,sBAAAA,EAVF,KAAAoL,qBAA+B,EA2BvCpP,MAAM6P,kBAAoB,IAAY,yCAC9BQ,EAAYC,UAAS,MAE7BtQ,MAAMwD,aAAe,cAGvB+M,WACErjB,KAAKP,OAAOY,SAAS,CAAC,iB,kCAnCb6iB,IAAc,iT,qCAAdA,GAAc,skC,GAAA,MCnB3B,kCAAY,8CAAY,EAAA3S,YACtB,sDACE,uDACE,uDAAsB,e,sBAAqB,oBAC7C,6CACA,wDACE,4DAAoB,gB,uBAAsB,oBAC5C,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAoB,oBAClD,sDACF,+CACF,6CACF,2CACA,yDACE,0DACE,4DACE,8DACE,kEAAmB,gB,uBAA2B,oBAC9C,kEAIE,iEAJF,oBASF,iDACA,8DACE,gEACE,oEAA4B,gB,uBAAyB,oBACrD,oEAKE,0EALF,oBASF,mDACA,gEACE,qEAME,2CAAS,EAAAmM,oB,uBAGT,6DAKF,qDACF,mDACF,iDACA,8DACE,8DACF,iDACF,+CACF,6CACA,wDACE,0DAAsB,gB,uBAAoC,oBAC5D,6CACF,2CACF,yCACA,sB,iCAvEkC,8CAGN,0EAGF,4EAGe,wDAC3B,sDAAwB,0EACa,uDAQtB,kFAKjB,qDAQ4B,+EAG1B,sFAGA,4CAWA,wGAEA,gDAIE,wGAMqB,6DAMT,6F,iNCnErB,MAAM4G,GAIX/jB,YAAYgkB,EAAmBC,GAC7BxjB,KAAKujB,UAAYA,EACjBvjB,KAAKwjB,oBAAsBA,GCCxB,MAAMC,GAMXlkB,YACSyT,EACA1Q,EACAkZ,EACPkI,EACOpP,EACA8F,EACAE,EACAqJ,EACAC,GARA,KAAA5Q,MAAAA,EACA,KAAA1Q,KAAAA,EACA,KAAAkZ,mBAAAA,EAEA,KAAAlH,IAAAA,EACA,KAAA8F,IAAAA,EACA,KAAAE,cAAAA,EACA,KAAAqJ,cAAAA,EACA,KAAAC,gBAAAA,EAEP5jB,KAAK0jB,mBAAqBA,GAA0C,MCxBxE,IAAYG,IAAZ,SAAYA,GACV,qCADF,CAAYA,KAAAA,GAAO,K,2SCsBZ,MAAM,WAA0BxC,GAgBrC9hB,YACYuiB,EACAriB,EACViI,EACU0R,EACA/C,EACAzW,EACVwP,EACUyH,EACVxH,EACUkG,GAEVzC,MAAMzD,EAAoB3H,EAAa0H,GAX7B,KAAA0S,YAAAA,EACA,KAAAriB,OAAAA,EAEA,KAAA2Z,cAAAA,EACA,KAAA/C,WAAAA,EACA,KAAAzW,aAAAA,EAEA,KAAAiX,0BAAAA,EAEA,KAAAtB,WAAAA,EAzBZ,KAAAjT,KAAe,GACf,KAAA0Q,MAAgB,GAChB,KAAA2G,eAAyB,GACzB,KAAAmK,sBAAgC,GAChC,KAAAC,KAAe,GACf,KAAAlK,cAAwB,EAIxB,KAAAmK,WAAY,EACZ,KAAAC,gBAA0B,EAEhB,KAAA3N,aAAe,QAgBvBtW,KAAKgkB,WAAa5U,EAAqB8U,aAGnC5S,W,0CACJtR,KAAKuhB,kBAGH4C,+BACF,OAAmC,MAA5BnkB,KAAKokB,oBAA8B,EAAqC,IAAhCpkB,KAAKokB,oBAAsB,GAGxEC,+BACF,OAAQrkB,KAAKokB,qBACX,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,QACE,MAAO,UAITE,8BACF,OAAQtkB,KAAKokB,qBACX,KAAK,EACH,OAAOpkB,KAAK0H,YAAYiJ,EAAE,UAC5B,KAAK,EACH,OAAO3Q,KAAK0H,YAAYiJ,EAAE,QAC5B,KAAK,EACH,OAAO3Q,KAAK0H,YAAYiJ,EAAE,QAC5B,QACE,OAAmC,MAA5B3Q,KAAKokB,oBAA8BpkB,KAAK0H,YAAYiJ,EAAE,QAAU,MAIvEJ,S,0CACJ,IAAKvQ,KAAKikB,gBAAkBjkB,KAAKgkB,UAM/B,YALAhkB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,wBAKvB,GAAkB,MAAd3Q,KAAKgT,OAAgC,KAAfhT,KAAKgT,MAM7B,YALAhT,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kBAIvB,IAAiC,IAA7B3Q,KAAKgT,MAAMvM,QAAQ,KAMrB,YALAzG,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,iBAIvB,GAA2B,MAAvB3Q,KAAK2Z,gBAAkD,KAAxB3Z,KAAK2Z,eAMtC,YALA3Z,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,uBAIvB,GAAI3Q,KAAK2Z,eAAetW,OAAS,EAM/B,YALArD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,qBAIvB,GAAI3Q,KAAK2Z,iBAAmB3Z,KAAK8jB,sBAM/B,YALA9jB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,0BAKvB,MAAM4T,EAAiBvkB,KAAK6W,0BAA0B2N,iBACpDxkB,KAAK2Z,eACL3Z,KAAKykB,gCAEP,GAAsB,MAAlBF,GAA0BA,EAAeG,MAAQ,EAAG,CAQtD,WAPqB1kB,KAAKoP,qBAAqB+M,WAC7Cnc,KAAK0H,YAAYiJ,EAAE,0BACnB3Q,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAIJ,GAAI3Q,KAAK+jB,OAAS/jB,KAAK2Z,eAMrB,YALA3Z,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,uBAKvB3Q,KAAKsC,KAAqB,KAAdtC,KAAKsC,KAAc,KAAOtC,KAAKsC,KAC3CtC,KAAKgT,MAAQhT,KAAKgT,MAAM1M,OAAOmB,cAC/B,MAAM2S,EAAMyJ,GAAQc,cAEdrK,EADcta,KAAKoP,qBAAqBwV,OACV,IAAQ,IACtCtQ,QAAYtU,KAAKoZ,cAAc6B,QACnCjb,KAAK2Z,eACL3Z,KAAKgT,MACLoH,EACAE,GAEIM,QAAe5a,KAAKoZ,cAAcyL,WAAWvQ,GAC7CwQ,QAAuB9kB,KAAKoZ,cAAckC,aAAatb,KAAK2Z,eAAgBrF,GAC5EvV,QAAaiB,KAAKoZ,cAAc2L,YAAYnK,EAAO,IACnDhM,EAAU,IAAI6U,GAClBzjB,KAAKgT,MACLhT,KAAKsC,KACLwiB,EACA9kB,KAAK+jB,KACLnJ,EAAO,GAAGpC,gBACV4B,EACAE,EACAta,KAAK2jB,cACL3jB,KAAKshB,cAEP1S,EAAQ7P,KAAO,IAAIukB,GAAYvkB,EAAK,GAAIA,EAAK,GAAGyZ,iBAChD,MAAMwM,QAAkBhlB,KAAKJ,aAAaqlB,4BACzB,MAAbD,GAAwC,MAAnBA,EAAUvD,OAAiD,MAAhCuD,EAAUE,qBAC5DtW,EAAQ6S,MAAQuD,EAAUvD,MAC1B7S,EAAQsW,mBAAqBF,EAAUE,oBAGzC,IACEllB,KAAKuW,YAAcvW,KAAKqW,WAAW8O,aAAavW,GAChD,UACQ5O,KAAKuW,YACX,MAAO3X,GACP,GAAIoB,KAAK4hB,sBAAsBhjB,GAC7B,OAEA,MAAMA,EAGVoB,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,sBACxE3Q,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,cAAe,CAAEhW,YAAa,CAAE0S,MAAOhT,KAAKgT,SACvE,MAAOpU,GACPoB,KAAKuV,WAAWK,MAAMhX,OAI1B8d,eAAe0I,GACbplB,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1BtQ,SAASqT,eAAewI,EAAe,uBAAyB,kBAAkBpT,QAGpFqT,yBAC4C,MAAtCrlB,KAAKslB,+BACPC,aAAavlB,KAAKslB,+BAEpBtlB,KAAKslB,8BAAgC5G,YAAW,KAC9C,MAAM6F,EAAiBvkB,KAAK6W,0BAA0B2N,iBACpDxkB,KAAK2Z,eACL3Z,KAAKykB,gCAEPzkB,KAAKokB,oBAAwC,MAAlBG,EAAyB,KAAOA,EAAeG,QACzE,KAGGD,+BACN,IAAIe,EAAsB,GAC1B,MAAMC,EAAazlB,KAAKgT,MAAMvM,QAAQ,KAatC,OAZIgf,GAAc,IAChBD,EAAYA,EAAUrQ,OACpBnV,KAAKgT,MACFrP,OAAO,EAAG8hB,GACVnf,OACAmB,cACAL,MAAM,kBAGI,MAAbpH,KAAKsC,MAA8B,KAAdtC,KAAKsC,OAC5BkjB,EAAYA,EAAUrQ,OAAOnV,KAAKsC,KAAKgE,OAAOmB,cAAcL,MAAM,OAE7Doe,G,0BCpNK,gCAIE,eACF,qB,kCAJE,6EAGA,kH,yDA6Fd,gCACE,0DACE,4DAIE,gEAGE,mHAHF,oBAMA,gEACE,e,uBAA6B,wBAC7B,gEAAsE,gB,uBAEpE,oBACD,kCACD,+BAAwE,gB,uBAEtE,oBACJ,mDACF,iDACF,+CACF,6C,qCAfQ,8DAIA,uGACsE,kFAIE,kF,kCDjIvE,IAAiB,+Q,qCAAjB,GAAiB,6C,8FEHvB,MAAME,WAA0B,GACrCnmB,YACEuiB,EACAriB,EACAiI,EACA0R,EACA/C,EACAzW,EACAwP,EACAyH,EACAxH,EACAkG,GAEAzC,MACEgP,EACAriB,EACAiI,EACA0R,EACA/C,EACAzW,EACAwP,EACAyH,EACAxH,EACAkG,I,kCAvBOmQ,IAAiB,+Q,qCAAjBA,GAAiB,w5D,GAAA,MDnB9B,kCAAY,8CAAY,EAAAnV,YACtB,sDACE,uDACE,uDAAsB,e,sBAAqB,oBAC7C,6CACA,wDACE,4DAAoB,gB,uBAA4B,oBAClD,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAqB,oBACnD,sDACF,+CACF,6CACF,2CACA,yDACE,0DACE,4DACE,8DACE,kEAAmB,gB,uBAA2B,oBAC9C,kEAIE,iEAJF,oBAUF,iDACA,8DACE,gEACE,kEACE,sEACE,gB,uBACA,uCAMF,uDACA,sEAKE,0EAA4B,2BAInB,EAAA8U,4BATX,oBAWF,qDACA,kEACE,uEAME,2CAAS,EAAA3I,gBAAe,M,uBAGxB,+DAKF,uDACF,qDACF,mDACA,gEACE,6DASF,mDACF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACA,0DACE,4DACE,8DACE,gEACE,oEAAkC,gB,uBAA+B,oBACjE,oEAKE,iFALF,oBASF,mDACA,gEACE,uEAME,2CAAS,EAAAA,gBAAe,M,wBAGxB,+DAKF,sDACF,oDACF,kDACA,gEACE,oEAAkB,iB,wBAA6B,oBAC/C,oEAAyC,gEAAzC,oBACF,kDACF,gDACA,8DACE,iB,wBACF,oBACF,8CACA,2DAA+B,gCAAkD,oBACjF,iEAyBF,4CACF,0CACA,uB,iCAhKkC,8CAGN,0EAGF,kFAGe,wDAC3B,sDAAwB,2EACa,uDAQtB,kFAKjB,qDAAmB,6BAWf,2HAGG,oEAOH,sFAGA,4CAA4B,6BAa5B,wGAEA,gDAKE,wGAOJ,gGAKA,sFACA,6DAMN,4GAOsC,sFAGhC,sFAGA,mDAWA,yGAEA,gDAKE,wGAMY,oFACuB,oDAI3C,iHAGC,6DACkB,wD,gjBExHpB,MAAM,GASXnd,YACUE,EACAG,EACAyW,EACA8M,EACA/T,EACA1H,EACA/H,GANA,KAAAF,OAAAA,EACA,KAAAG,aAAAA,EACA,KAAAyW,WAAAA,EACA,KAAA8M,YAAAA,EACA,KAAA/T,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAA/H,oBAAAA,EAdV,KAAAgmB,YAAsB,EACtB,KAAAC,SAAmB,EAEnB,KAAAjQ,SAAmB,EAcbrE,W,0CACJtR,KAAK6lB,mBAAqB7lB,KAAKL,oBAAoBmmB,0BACnD9lB,KAAKgT,YAAchT,KAAKJ,aAAa8d,iBAC/B1d,KAAKmjB,YAAYC,UAAS,GAChCpjB,KAAK2V,SAAU,KAGXoQ,U,0CACJ/lB,KAAK2lB,YAAa,EAClB3lB,KAAKgmB,cAAgBhmB,KAAKL,oBAAoBsmB,cAE9C,UACQjmB,KAAKgmB,cACXhmB,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,gCAEf3Q,KAAKL,oBAAoBumB,+BAC/BlmB,KAAKP,OAAOY,SAAS,CAAC,KACtB,MAAOzB,GACPoB,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkB/R,EAAEkV,aAIlFqS,Q,0CAQJ,WAPwBnmB,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,iCACnB3Q,KAAK6lB,aAAavjB,KAClBtC,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAK4lB,SAAU,EACf5lB,KAAKgmB,cAAgBhmB,KAAKqW,WAAW+P,sBAAsBpmB,KAAK6lB,aAAa7mB,IAAIL,MAAK,IAC7EqB,KAAKmjB,YAAYC,UAAS,WAE7BpjB,KAAKgmB,cACXhmB,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,2BAClE3Q,KAAKL,oBAAoBumB,+BAC/BlmB,KAAKP,OAAOY,SAAS,CAAC,KACtB,MAAOzB,GACPoB,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkB/R,Q,uBC1D9E,yB,4BAEE,oE,uBAcF,yB,4BAEE,oE,kCD1BC,IAAuB,gM,qCAAvB,KELN,MAAMynB,WAAgC,I,oFAAhCA,MAAuB,GAAvBA,K,wCAAAA,GAAuB,4iBDRpC,gCACE,gDACA,qDACE,wDAAoB,e,sBAAmC,oBACzD,0CACA,kDACF,yCAEA,yDACE,uDACE,yDACE,2DACE,yDAAG,gB,uBAAmE,oBACxE,+CACA,2DACE,gEAGE,2CAAS,EAAAN,aAGT,gEAMA,gB,uBACF,oBACF,+CACA,2DACE,iEAGE,2CAAS,EAAAI,WAGT,gEAMA,gB,uBACF,oBACF,+CACF,6CACF,2CACF,yCACA,sB,MA9CwB,uFASb,2HAOD,8DAMG,uDAEH,sHAQA,8DAMG,oDAEH,qH,mEE3CH,MAAMG,ICIN,MAAMC,GASXhnB,YACEic,EACAlH,EACAoP,EACAtJ,EACAE,EACAkM,EACAznB,GAEAiB,KAAKwb,mBAAqBA,EAC1Bxb,KAAKsU,IAAMA,EACXtU,KAAK0jB,mBAAqBA,EAC1B1jB,KAAKoa,IAAMA,EACXpa,KAAKsa,cAAgBA,EACrBta,KAAKwmB,cAAgBA,EACrBxmB,KAAKjB,KAAOA,GCjBT,MAAe0nB,I,2SCMf,MAAMC,GAaXnnB,YACYmI,EACA0R,EACA1Z,EACAmX,EACAzH,EACAuX,EACA/mB,GANA,KAAA8H,YAAAA,EACA,KAAA0R,cAAAA,EACA,KAAA1Z,iBAAAA,EACA,KAAAmX,0BAAAA,EACA,KAAAzH,qBAAAA,EACA,KAAAuX,cAAAA,EACA,KAAA/mB,aAAAA,EAGN0R,W,gDACJtR,KAAKgT,YAAchT,KAAKJ,aAAa8d,WACX,QAA1B,EAAA1d,KAAK4mB,6BAAqB,QAA1B5mB,KAAK4mB,4BAAgC5mB,KAAK2mB,cAAcE,qCAGpDtW,S,0CACJ,WAAYvQ,KAAK8mB,kBACf,OAGF,WAAY9mB,KAAK+mB,sBACf,OAGF,MAAM/T,QAAchT,KAAKJ,aAAa8d,WACtB,MAAZ1d,KAAKoa,MACPpa,KAAKoa,UAAYpa,KAAKJ,aAAaya,cAEX,MAAtBra,KAAKsa,gBACPta,KAAKsa,oBAAsBta,KAAKJ,aAAa2a,oBAE/C,MAAMjG,QAAYtU,KAAKoZ,cAAc6B,QACnCjb,KAAK2Z,eACL3G,EAAM1M,OAAOmB,cACbzH,KAAKoa,IACLpa,KAAKsa,eAEDkB,QAA2Bxb,KAAKoZ,cAAckC,aAAatb,KAAK2Z,eAAgBrF,GAEtF,IAAIsG,EAA0C,KAG5CA,EADoB,aADO5a,KAAKoZ,cAAcyB,mBAE/B7a,KAAKoZ,cAAcyL,WAAWvQ,SAE9BtU,KAAKoZ,cAAc4N,aAAa1S,SAG3CtU,KAAKinB,qBAAqBzL,EAAoBlH,EAAKsG,MAGrDmM,qB,0CAGJ,OAAO,KAGHE,qBACJzL,EACAlH,EACAsG,G,8CAKIkM,iB,0CACJ,GAA2B,MAAvB9mB,KAAK2Z,gBAAkD,KAAxB3Z,KAAK2Z,eAMtC,OALA3Z,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,wBAEd,EAET,GAAI3Q,KAAK2Z,eAAetW,OAAS,EAM/B,OALArD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,sBAEd,EAET,GAAI3Q,KAAK2Z,iBAAmB3Z,KAAKknB,qBAM/B,OALAlnB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,2BAEd,EAGT,MAAM4T,EAAiBvkB,KAAK6W,0BAA0B2N,iBACpDxkB,KAAK2Z,eACL3Z,KAAKykB,gCAGP,GACgC,MAA9BzkB,KAAK4mB,wBACJ5mB,KAAK2mB,cAAcQ,uBAClB5C,EAAeG,MACf1kB,KAAK2Z,eACL3Z,KAAK4mB,uBAQP,OALA5mB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,4CAEd,EAGT,GAAsB,MAAlB4T,GAA0BA,EAAeG,MAAQ,EAAG,CAQtD,WAPqB1kB,KAAKoP,qBAAqB+M,WAC7Cnc,KAAK0H,YAAYiJ,EAAE,0BACnB3Q,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAIX,OAAO,KAGT0U,yBAC4C,MAAtCrlB,KAAKslB,+BACPC,aAAavlB,KAAKslB,+BAEpBtlB,KAAKslB,8BAAgC5G,YAAW,KAC9C,MAAM6F,EAAiBvkB,KAAK6W,0BAA0B2N,iBACpDxkB,KAAK2Z,eACL3Z,KAAKykB,gCAEPzkB,KAAKokB,oBAAwC,MAAlBG,EAAyB,KAAOA,EAAeG,QACzE,KAGCxI,S,iDACoBlc,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKN,iBAAiBQ,KAAK,aAIvBukB,+BACN,IAAIe,EAAsB,GAC1B,MAAMC,EAAazlB,KAAKgT,MAAMvM,QAAQ,KAUtC,OATIgf,GAAc,IAChBD,EAAYA,EAAUrQ,OACpBnV,KAAKgT,MACFrP,OAAO,EAAG8hB,GACVnf,OACAmB,cACAL,MAAM,kBAGNoe,G,kCAjLEkB,IAAuB,0L,qCAAvBA,K,2SCaN,MAAM,WAA6B,GAWxCnnB,YACEmI,EACA0R,EACA1Z,EACAmX,EACAzH,EACAuX,EACUlnB,EACF4W,EACA8M,EACArjB,EACRF,GAEAkT,MACEpL,EACA0R,EACA1Z,EACAmX,EACAzH,EACAuX,EACA/mB,GAbQ,KAAAH,OAAAA,EACF,KAAA4W,WAAAA,EACA,KAAA8M,YAAAA,EACA,KAAArjB,MAAAA,EApBV,KAAAsnB,aAAuB,EACvB,KAAAvN,cAAwB,EACxB,KAAAkK,KAAe,GACf,KAAAsD,WAAqB,KAErB,KAAAC,yBAA0B,EAG1B,KAAAhR,aAAe,QA0BThF,W,0GAWJ,SAVMtR,KAAKmjB,YAAYC,UAAS,GAChCpjB,KAAKonB,aAAc,EAEnBpnB,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBmmB,GAAY,mCACtC,MAAtBA,EAAQH,aACVrnB,KAAKqnB,WAAaG,EAAQH,iBAKP,MAAnBrnB,KAAKqnB,WACP,IACE,MAAMzb,QAAiB5L,KAAKqW,WAAWoR,gCAAgCznB,KAAKqnB,YAC5ErnB,KAAKkZ,MAAQtN,EAAS5M,GACtBgB,KAAKsnB,wBAA0B1b,EAAS8b,qBACxC1nB,KAAK4mB,4BACG5mB,KAAK2mB,cAAcgB,yCAAyC3nB,KAAKkZ,OACzE,SACAlZ,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBAI1E,EAAMW,SAAQ,cAGVyV,qB,0CACJ/mB,KAAKoa,IAAMyJ,GAAQc,cACnB,MAAMiD,EAAc5nB,KAAKoP,qBAAqBwV,OAE9C,OADA5kB,KAAKsa,cAAgBsN,EAAc,IAAQ,KACpC,KAGHX,qBACJzL,EACAlH,EACAsG,G,0CAEA,MAAM7b,QAAaiB,KAAKoZ,cAAc2L,YAAYnK,EAAO,IACnDhM,EAAU,IAAI2X,GAClB/K,EACAZ,EAAO,GAAGpC,gBACVxY,KAAK+jB,KACL/jB,KAAKoa,IACLpa,KAAKsa,cACLta,KAAKqnB,WACL,IAAI/D,GAAYvkB,EAAK,GAAIA,EAAK,GAAGyZ,kBAEnC,IACMxY,KAAKsnB,wBACPtnB,KAAKuW,YAAcvW,KAAKqW,WACrBwR,YAAYjZ,GACZjQ,MAAK,IAAY,mCAEhB,aADMqB,KAAK8nB,qBAAqBxT,EAAKsG,EAAQ7b,GACtCiB,KAAKqW,WAAW0R,oBAAoB/nB,KAAKkZ,YAEjDva,MAAYiN,GAAa,mCACxB,GAAgB,MAAZA,EACF,MAAM,IAAI/M,MAAMmB,KAAK0H,YAAYiJ,EAAE,8BAErC,MAAMqX,QAAehoB,KAAKJ,aAAaqoB,YACjC1E,EAAYvhB,EAAMwB,eAAeoI,EAAS2X,WAG1C2E,QAAmBloB,KAAKoZ,cAAcyB,YACtCsN,QAAqBnoB,KAAKoZ,cAAcgP,WAC5CF,EAAW5T,IACXiP,EAAUvf,QAGNqkB,EAAe,IAAI/B,GAGzB,OAFA+B,EAAaC,iBAAmBH,EAAa3P,gBAEtCxY,KAAKqW,WAAWkS,2CACrBvoB,KAAKkZ,MACL8O,EACAK,QAINroB,KAAKuW,YAAcvW,KAAKqW,WAAWwR,YAAYjZ,GAASjQ,MAAK,IAAY,yCACjEqB,KAAK8nB,qBAAqBxT,EAAKsG,EAAQ7b,cAI3CiB,KAAKuW,YAE4B,MAAnCvW,KAAKwoB,2BACPxoB,KAAKwoB,6BAELxoB,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,eAE7B,SACAtW,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,sBAI1E+L,eAAe0I,GACbplB,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1BtQ,SAASqT,eAAewI,EAAe,uBAAyB,kBAAkBpT,QAGtE8V,qBACZxT,EACAsG,EACA7b,G,gDAEMiB,KAAKJ,aAAa6oB,WAAWzoB,KAAKoa,WAClCpa,KAAKJ,aAAa8oB,iBAAiB1oB,KAAKsa,qBACxCta,KAAKoZ,cAAcyD,OAAOvI,SAC1BtU,KAAKoZ,cAAcuP,UAAU/N,EAAO,GAAGpC,uBACvCxY,KAAKoZ,cAAcwP,iBAAiB7pB,EAAK,GAAGyZ,iBAElD,MAAMkD,QAAqB1b,KAAKoZ,cAAckC,aAC5Ctb,KAAK2Z,eACLrF,EACA2D,GAAY0D,0BAER3b,KAAKoZ,cAAcwC,WAAWF,O,kCAzJ3B,IAAoB,yT,qCAApB,GAAoB,6C,2SCxBlB,MAAMmN,GACTC,iBACR7hB,EACA8hB,EACA9jB,EACA+jB,EACAC,EAAoB,IAEpB,IAAK,MAAMthB,KAAQ1C,EAAK,CACtB,IAAKA,EAAIsP,eAAe5M,GACtB,SAGF,MAAMuhB,EAAUH,EAAQ9jB,EAAI0C,IAASA,IACZ,IAArBqhB,GAA6BC,EAAWxiB,QAAQkB,IAAS,EAC1DV,EAAeU,GAAQuhB,GAAoB,KAE3CjiB,EAAeU,GAAQuhB,EAAU,IAAI/Q,GAAU+Q,GAAW,MAIvDC,eACRliB,EACA8hB,EACA9jB,EACAmkB,EAA0B,IAE1B,IAAK,MAAMzhB,KAAQ1C,EAAK,CACtB,IAAKA,EAAIsP,eAAe5M,GACtB,SAGF,MAAMuhB,EAAWjiB,EAAehC,EAAI0C,IAASA,GACzCyhB,EAAiB3iB,QAAQkB,IAAS,EACnCohB,EAAgBphB,GAAmB,MAAXuhB,EAAkBA,EAAU,KAEpDH,EAAgBphB,GAAmB,MAAXuhB,EAAmBA,EAAsB1Q,gBAAkB,MAK1E6Q,WACdC,EACArkB,EACAiU,EACA5E,EAA0B,M,0CAE1B,MAAMiV,EAAW,GACXC,EAAYxpB,KAElB,IAAK,MAAM2H,KAAQ1C,EACZA,EAAIsP,eAAe5M,IAKxB,SAAW8hB,GACT,MAAMC,EAAIjrB,QAAQC,UACfC,MAAK,KACJ,MAAMgrB,EAAU1kB,EAAIwkB,IAAYA,EAChC,OAAID,EAAKG,GACAH,EAAKG,GAAS1Q,QAAQC,EAAO5E,GAE/B,QAER3V,MAAMirB,IACJN,EAAkBG,GAAWG,KAElCL,EAASzU,KAAK4U,GAZhB,CAaG/hB,GAIL,aADMlJ,QAAQorB,IAAIN,GACXD,MC7EJ,MAAMQ,WAAoCjB,GAAjD,c,oBACE,KAAAkB,cAAwB,EACxB,KAAAC,UAAoB,EACpB,KAAAC,cAAwB,EACxB,KAAAC,cAAwB,EACxB,KAAAC,gBAA0B,EAC1B,KAAAC,gBAA0B,G,yBCDxB,wB,mCAAG,+C,0BADL,8BACE,wDACA,eACF,qB,kCAF6B,iDAC3B,oE,0BAKE,4BACE,e,sBACF,qB,mCADE,yJ,0BAEF,4BACE,e,sBACF,qB,mCADE,oM,uBAEF,4BACE,e,sBACF,qB,MADE,oH,uBAEF,4BACE,e,sBACF,qB,MADE,oH,uBAEF,4BACE,e,sBACF,qB,MADE,kH,uBAEF,4BACE,e,sBACF,qB,MADE,6H,0BAnBN,+BACE,eACA,4BACE,2DAGA,2DAGA,2DAGA,4DAGA,6DAGA,6DAGF,6CACF,4C,kCArBE,qFAEO,uHAGA,mHAGA,kHAGA,kHAGA,oHAGA,qH,0CClBJ,MAAMC,GAWX9qB,YAAoBmI,GAAA,KAAAA,YAAAA,EAVX,KAAA0D,KAAO,OAMP,KAAAkf,cAAe,EAMxBhZ,WACEtR,KAAKuqB,aAAevqB,KAAKoL,UAEUmI,IAA/BvT,KAAKwqB,wBACPxqB,KAAKwqB,sBAAwBxqB,KAAK0H,YAAYiJ,EAAE,iCAGhC,YAAd3Q,KAAKoL,MAAoC,WAAdpL,KAAKoL,MAChB,WAAdpL,KAAKoL,OACPpL,KAAKuqB,aAAe,eAEHhX,IAAfvT,KAAK6L,QACP7L,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,iBAEhB4C,IAAdvT,KAAKyqB,OACPzqB,KAAKyqB,KAAO,6BAES,UAAdzqB,KAAKoL,MACdpL,KAAKuqB,aAAe,cACDhX,IAAfvT,KAAK6L,QACP7L,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,eAEhB4C,IAAdvT,KAAKyqB,OACPzqB,KAAKyqB,KAAO,cAES,QAAdzqB,KAAKoL,OACdpL,KAAKuqB,aAAe,eACDhX,IAAfvT,KAAK6L,QACP7L,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,aAEhB4C,IAAdvT,KAAKyqB,OACPzqB,KAAKyqB,KAAO,kBAKlBC,+BACE,GAAkC,MAA9B1qB,KAAK4mB,sBACP,MAAO,GAGT,IAAI9jB,EACJ,OAAQ9C,KAAK4mB,sBAAsBmD,eACjC,KAAK,EACHjnB,EAAM9C,KAAK0H,YAAYiJ,EAAE,UACzB,MACF,KAAK,EACH7N,EAAM9C,KAAK0H,YAAYiJ,EAAE,QACzB,MACF,QACE7N,EAAM9C,KAAK0H,YAAYiJ,EAAE,QAG7B,OAAO7N,EAAM,KAAO9C,KAAK4mB,sBAAsBmD,cAAgB,K,uBC5D/D,gCACE,mDACF,6C,uBAII,wC,sBAKE,e,sBACF,qB,MAJE,0FAGA,qI,0BAEF,wCAKA,iD,mCAHE,kE,0BAYQ,gCAIE,eACF,qB,mCAJE,6EAGA,sH,kCDrCPM,IAAgB,4B,qCAAhBA,GAAgB,4O,MAAA,qS,uBDV7B,iCAME,uDAIA,yDAuBA,2CACF,wCACA,qB,MAjCE,kEACA,kEACA,qDAE6B,kDAIS,oE,mNESpC,6BACE,0DACE,oEAAwB,e,sBAAsC,oBAC9D,uEAOA,wEAMF,+CACA,4DACE,8DACE,gEACE,kEACE,oEACE,wEACG,gB,uBACD,uCAMF,yDACA,wEAKE,mHAA4B,kGAL9B,oBAUF,uDACA,oEACE,yEAOE,sGAAwB,M,uBAGxB,iEAKF,yDACF,uDACF,qDACA,kEACE,+DASF,qDACF,mDACF,iDACA,8DACE,gB,uBACF,oBACF,+CACA,4DACE,8DACE,gEACE,kEACE,oEACE,wEAAkC,gB,uBAA+B,oBACjE,wEAKE,yHALF,oBAUF,uDACA,oEACE,yEAOE,sGAAwB,M,uBAGxB,iEAKF,yDACF,uDACF,qDACF,mDACF,iDACF,+CACA,4DACE,8DACE,gEACE,oEAAkB,gB,uBAA6B,oBAC/C,oEAAyC,yGAAzC,oBACF,mDACF,iDACA,8DACE,gB,wBACF,oBACF,gDACF,8C,qCA9H4B,2FAIrB,oEAOA,kEAUQ,2GAGE,oEAOH,sFAGA,4CAaA,wGAEA,gDAKE,wGAOJ,gGAKA,sFACA,6DAMN,gHAQwC,sFAMhC,oEAaA,wGAEA,gDAKE,wGAWU,oFACuB,oDAI3C,sHC5HH,MAAMM,WAA6B,GACxCprB,YACE8W,EACA3O,EACA0R,EACA1Z,EACAE,EACAiX,EACAzH,EACAuX,EACAlnB,EACA0jB,EACArjB,GAEAgT,MACEpL,EACA0R,EACA1Z,EACAmX,EACAzH,EACAuX,EACAlnB,EACA4W,EACA8M,EACArjB,EACAF,GAIAukB,+BACF,OAAmC,MAA5BnkB,KAAKokB,oBAA8B,EAAqC,IAAhCpkB,KAAKokB,oBAAsB,GAGxEC,+BACF,OAAQrkB,KAAKokB,qBACX,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,QACE,MAAO,UAITE,8BACF,OAAQtkB,KAAKokB,qBACX,KAAK,EACH,OAAOpkB,KAAK0H,YAAYiJ,EAAE,UAC5B,KAAK,EACH,OAAO3Q,KAAK0H,YAAYiJ,EAAE,QAC5B,KAAK,EACH,OAAO3Q,KAAK0H,YAAYiJ,EAAE,QAC5B,QACE,OAAmC,MAA5B3Q,KAAKokB,oBAA8BpkB,KAAK0H,YAAYiJ,EAAE,QAAU,O,kCAvDlEga,IAAoB,yT,qCAApBA,GAAoB,olD,GAAA,MDpBjC,kCAAY,8CAAY,EAAApa,YACtB,sDACE,uDACE,uDAAsB,e,sBAAqB,oBAC7C,6CACA,wDACE,4DAAoB,gB,uBAAgC,oBACtD,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAqB,oBACnD,sDACF,+CACF,6CACF,2CACA,yDACE,6DAGA,gEAiIF,2CACF,yCACA,sB,iCAtJkC,8CAGN,yEAGF,sFAGe,wDAC3B,sDAAwB,2EACa,uDAKZ,wDAG7B,2D,khBECH,MAAM,GAqBXhR,YACYuiB,EACAriB,EACAiI,EACA5H,EACAF,EACAwP,EACAiH,EACAS,EACAzH,EACAwH,EACAtB,GAVA,KAAAuM,YAAAA,EACA,KAAAriB,OAAAA,EACA,KAAAiI,YAAAA,EACA,KAAA5H,MAAAA,EACA,KAAAF,aAAAA,EACA,KAAAwP,qBAAAA,EACA,KAAAiH,WAAAA,EACA,KAAAS,sBAAAA,EACA,KAAAzH,mBAAAA,EACA,KAAAwH,0BAAAA,EACA,KAAAtB,WAAAA,EA9BZ,KAAAqV,WAAY,EAUF,KAAA5I,eAAiB,MACjB,KAAA1L,aAAe,OACf,KAAAuU,oBAAsB,eACtB,KAAA5I,wBAA0B,uBAoB9B3Q,W,0CACJtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBmmB,GAAY,mCAChE,GAAoB,MAAhBA,EAAQ1oB,MAAiC,MAAjB0oB,EAAQnQ,MAAe,CACjD,MAAME,QAAqBvX,KAAKJ,aAAakrB,qBACvCzT,QAAcrX,KAAKJ,aAAamrB,oBAChC/qB,KAAKJ,aAAa+X,mBAAmB,YACrC3X,KAAKJ,aAAagY,YAAY,MAElB,MAAhB4P,EAAQ1oB,MACQ,MAAhByY,GACS,MAATF,GACArX,KAAKgrB,WAAW3T,EAAOmQ,EAAQnQ,eAEzBrX,KAAKqiB,MACTmF,EAAQ1oB,KACRyY,EACAvX,KAAKirB,0BAA0BzD,EAAQnQ,cAIvB,MAApBmQ,EAAQ3E,UACe,MAAvB2E,EAAQ1P,aACS,MAAjB0P,EAAQnQ,OACiB,MAAzBmQ,EAAQ9P,gBAER1X,KAAK8X,YAAc0P,EAAQ1P,YAC3B9X,KAAKqX,MAAQmQ,EAAQnQ,MACrBrX,KAAK0X,cAAgB8P,EAAQ9P,cAC7B1X,KAAK6iB,SAAW2E,EAAQ3E,kBAKxBtS,OAAO2a,EAAoBC,G,0CAE/B,GADAnrB,KAAKorB,uBAAyBprB,KAAKqrB,oBACzBrrB,KAAKorB,uBAAwB,CACrC,MAAME,QAAqBtrB,KAAKurB,kBAAkBL,EAAWC,GAC7DnrB,KAAKoP,qBAAqB2I,UAAUuT,EAAc,CAAEE,YAAY,QAI9DH,c,0CACJ,OAAuB,MAAnBrrB,KAAKqnB,YAA0C,KAApBrnB,KAAKqnB,YAClCrnB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,uBACnB3Q,KAAK0H,YAAYiJ,EAAE,2BAEd,SAEI3Q,KAAKqW,WAAWoV,eAAezrB,KAAKqnB,eAGnCkE,kBACdL,EACAC,G,0CAEA,IAAIzT,EAAgB1X,KAAK0X,cACrBL,EAAQrX,KAAKqX,MAEjB,MAAML,EAAuB,CAC3B5L,KAAM,WACN/H,OAAQ,GACR4T,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,SAAS,GAGX,GAAqB,MAAjBM,EAAuB,CACzB,MAAMH,QAAqBvX,KAAK6W,0BAA0BS,iBAAiBN,GACrEQ,QAAyBxX,KAAK8W,sBAAsBW,KAAKF,EAAc,UAC7EG,EAAgB1V,EAAM0D,mBAAmB8R,SACnCxX,KAAKJ,aAAa+X,mBAAmBJ,GAGhC,MAATF,IACFA,QAAcrX,KAAK6W,0BAA0BS,iBAAiBN,GAC1DkU,IACF7T,GAAS,eAAe6T,OAK5B7T,GAAS,eAAerX,KAAKqnB,mBAGvBrnB,KAAKJ,aAAagY,YAAYP,GAEpC,IAAIiU,EACFtrB,KAAKqP,mBAAmBqc,iBAAxB1rB,gCAGAA,KAAK6iB,SACL,iBACA/e,mBAAmB9D,KAAK8X,aALxB9X,sDASAqX,EACA,mBACAK,EAXA1X,+DAeA8D,mBAAmB9D,KAAKqnB,YAE1B,GAAI8D,EAAuB,CACzB,MAAMQ,QAAuB3rB,KAAKqW,WAAWuV,uBAC7CN,GAAgB,oBAAoBxnB,mBAAmB6nB,KAGzD,OAAOL,KAGKjJ,MAAMvjB,EAAcyY,EAAsBsU,G,0CACtD7rB,KAAK4qB,WAAY,EACjB,IACE5qB,KAAKuW,YAAcvW,KAAK8hB,YAAYgK,SAClChtB,EACAyY,EACAvX,KAAK8X,YACL+T,GAEF,MAAMjgB,QAAiB5L,KAAKuW,YAC5B,GAAI3K,EAAS2W,UACoC,MAA3CviB,KAAKwiB,mCACPxiB,KAAKwiB,qCAELxiB,KAAKP,OAAOY,SAAS,CAACL,KAAKgiB,gBAAiB,CAC1C1hB,YAAa,CACX+mB,WAAYwE,EACZE,IAAK,eAIN,GAAIngB,EAASogB,oBACkC,MAAhDhsB,KAAKisB,wCACPjsB,KAAKisB,0CAELjsB,KAAKP,OAAOY,SAAS,CAACL,KAAK6qB,qBAAsB,CAC/CvqB,YAAa,CACX+mB,WAAYwE,UAIb,GAAIjgB,EAAS6W,mBAC8B,MAA5CziB,KAAK0iB,oCACP1iB,KAAK0iB,sCAEL1iB,KAAKP,OAAOY,SAAS,CAACL,KAAKiiB,8BAExB,CACL,MAAMjF,QAAuBhd,KAAKJ,aAAaqd,0BACzCjd,KAAKJ,aAAasd,oBAAoBF,GACd,MAA1Bhd,KAAK2iB,mBACP3iB,KAAK2iB,oBAE+B,MAAlC3iB,KAAK4iB,0BACP5iB,KAAK4iB,4BAEL5iB,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,gBAG/B,MAAO1X,GACPoB,KAAKuV,WAAWK,MAAMhX,GACJ,kCAAdA,EAAEkV,SACJ9T,KAAKoP,qBAAqBsB,UACxB,QACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,+BAIzB3Q,KAAK4qB,WAAY,KAGXK,0BAA0B5T,GAChC,GAAIA,MAAAA,EACF,OAAO,KAGT,MAAM6U,EAAa7U,EAAMjQ,MAAM,gBAC/B,OAAO8kB,EAAW7oB,OAAS,EAAI6oB,EAAW,GAAK,KAGzClB,WAAW3T,EAAe2T,GAChC,GAAI3T,MAAAA,EACF,OAAO,EAET,GAAI2T,MAAAA,EACF,OAAO,EAGT,MAAMkB,EAAa7U,EAAMjQ,MAAM,gBACzB+kB,EAAkBnB,EAAW5jB,MAAM,gBACzC,OAAO8kB,EAAW,KAAOC,EAAgB,I,kCAvOhC,IAAY,wT,qCAAZ,K,ICpBDC,G,uSCuBL,MAAMC,WAAqB,GAChC9sB,YACEuiB,EACAriB,EACAiI,EACA5H,EACAF,EACAwP,EACAiH,EACAS,EACAD,EACAsM,EACA9T,EACAkG,EACQ/V,GAERsT,MACEgP,EACAriB,EACAiI,EACA5H,EACAF,EACAwP,EACAiH,EACAS,EACAzH,EACAwH,EACAtB,GAbM,KAAA/V,oBAAAA,EAgBR,MAAMY,EAAMJ,KAAKqP,mBAAmBwI,iBAEpC7X,KAAK8X,YAAc1X,EAAM,sBACzBJ,KAAK6iB,SAAW,UAEhB/P,MAAM6P,kBAAoB,IAAY,yCAC9BQ,EAAYC,UAAS,UACjBpjB,KAAKR,oBAAoBW,aAEjCyJ,EAAW0iB,oBAGMvqB,OAAOwqB,KAAK,GAAI,SACxB/f,Y,kCA3CJ6f,IAAY,6W,qCAAZA,GAAY,6HCblB,MAAM,GAMX9sB,YACYuiB,EACAriB,EACAiI,EACA0H,EACAvG,GAJA,KAAAiZ,YAAAA,EACA,KAAAriB,OAAAA,EACA,KAAAiI,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAvG,IAAAA,EAVF,KAAA2jB,mBAAqB,IAAI,EAAAjd,aACzB,KAAAkd,kBAAoB,IAAI,EAAAld,aAElC,KAAAmd,UAAmB,GAUnBpb,WACEtR,KAAK0sB,UAAY1sB,KAAK8hB,YAAY6K,+BAA+B3sB,KAAK6I,KAGxE+jB,OAAOlD,GACL1pB,KAAKwsB,mBAAmB1b,KAAK4Y,EAAEte,MAGjCyhB,UACE7sB,KAAKoP,qBAAqB2I,UAAU,4DACpC/X,KAAKysB,kBAAkB3b,Q,yDCtBrB,kCAKE,qHAEA,4DAAmB,eAAY,oBAC/B,6DAAqB,eAAmB,oBAC1C,8C,4BAFqB,iDACE,yD,kCDVhB,IAAyB,uIAWnBgc,U,qCAXN,GAAyB,0FEG/B,MAAMC,WAAkC,GAC7CxtB,YACEuiB,EACAriB,EACAiI,EACA0H,GAEA0D,MAAMgP,EAAariB,EAAQiI,EAAa0H,EAAsBrN,QAGhE6qB,OAAOlD,GACL5W,MAAM8Z,OAAOlD,GACb1pB,KAAK8hB,YAAYkL,8BAAgCtD,EAAEte,KACnDpL,KAAKP,OAAOY,SAAS,CAAC,S,kCAbb0sB,IAAyB,kH,qCAAzBA,GAAyB,iaDbtC,gCACE,qDACE,qDAAqB,e,sBAAoB,oBAC3C,0CACA,oDACE,0DAAoB,gB,uBAA6B,oBACnD,2CACA,kDACF,yCACA,uDACE,uDACE,yDACE,iEAUA,8DAA2D,2CAAS,EAAAF,aAClE,8DAAmB,gB,uBAAgC,oBACnD,+DAAqB,gB,uBAA+B,oBACtD,+CACF,6CACF,2CACF,yCACA,sB,MA3ByB,wEAGD,kFAUF,0DAQK,qFACE,uF,4EHxB7B,SAAYT,GACV,qCACA,qBACA,iBACA,yBACA,iBACA,2BACA,yCACA,2BARF,CAAYA,KAAAA,GAAqB,KKE1B,MAAMa,WAA8BxT,ICFpC,MAAMyT,GAAb,cACE,KAAAtd,KAAe,KACf,KAAAI,IAAc,KACd,KAAAE,SAAmB,KACnB,KAAAE,MAAgB,KAChB,KAAAE,cAAwB,KACxB,KAAAvP,OAAiB,KACjB,KAAA+O,SAAmB,KACnB,KAAAqd,aAAuB,MCiBlB,MAAMC,IAKN,MAAMC,IAKN,MAAMC,GAAb,cACE,KAAAC,QAAuD,IAAIF,GAI3D,KAAAG,QAAuD,IAAIH,GAK3D,KAAAI,MAAiD,IAAIJ,GACrD,KAAAK,YAAmE,IAAIL,GAIvE,KAAAM,SAAoD,IAAIN,GACxD,KAAAO,0BAGI,IAAIR,IAQH,MAAMS,GAAb,cAKE,KAAAC,mBAAkE,IAAIV,GAItE,KAAAW,iBAA0E,IAAIX,GAI9E,KAAAY,aAAsE,IAAIZ,GAI1E,KAAAa,WAAmD,IAAIb,IAMlD,MAAMc,IAmBN,MAAMC,GAAb,cAqBE,KAAAC,gBAAmC,IAAIlB,GAKvC,KAAAmB,aAAmD,IAAIjB,GAIvD,KAAAkB,mBAA8B,QAGzB,MAAMC,IAON,MAAMC,GAOXjvB,YAAYoK,GANZ,KAAAe,KAAqB,IAAI4iB,GACzB,KAAAvuB,KAAqB,IAAI8uB,GACzB,KAAAY,QAA2B,IAAIP,GAC/B,KAAA7K,SAA6B,IAAI8K,GACjC,KAAAO,OAAyB,IAAIH,GAG3BpmB,OAAOC,OAAOpI,KAAM,CAClB0K,KAAM,OAAF,wBACC,IAAI4iB,IACJ3jB,MAAAA,OAAI,EAAJA,EAAMe,MAEX3L,KAAM,OAAF,wBACC,IAAI8uB,IACJlkB,MAAAA,OAAI,EAAJA,EAAM5K,MAEX0vB,QAAS,OAAF,wBACF,IAAIP,IACJvkB,MAAAA,OAAI,EAAJA,EAAM8kB,SAEXpL,SAAU,OAAF,wBACH,IAAI8K,IACJxkB,MAAAA,OAAI,EAAJA,EAAM0Z,UAEXqL,OAAQ,OAAF,wBACD,IAAIH,IACJ5kB,MAAAA,OAAI,EAAJA,EAAM+kB,WCzKV,MAAMC,GAAb,cACE,KAAApM,WAAqB,EACrB,KAAAvO,eAAyB,GACzB,KAAAgY,qBAA+B,EAC/B,KAAAvJ,oBAA8B,EAC9B,KAAAmM,mBAA4E,MCHvE,MAAMC,GAOXtvB,YACE+U,EACA8F,EACAE,EACAkM,EACAznB,GAEAiB,KAAKsU,IAAMA,EACXtU,KAAKoa,IAAMA,EACXpa,KAAKsa,cAAgBA,EACrBta,KAAKwmB,cAAgBA,EACrBxmB,KAAKjB,KAAOA,GClBT,MAAM+vB,GAMXvvB,YAAYwvB,EAAe3f,GACzBpP,KAAKoL,KAAOgE,EAAqB4f,YACjChvB,KAAKsC,KAAO8M,EAAqB6f,kBACjCjvB,KAAKqnB,WAAa0H,EAClB/uB,KAAKkvB,UAAY,MCdd,MAAMC,GAGX5vB,YAAY+U,GACVtU,KAAKsU,IAAMA,GCJR,MAAM8a,GAGX7vB,YAAYyT,GACVhT,KAAKgT,MAAQA,GCGV,MAAMqc,GAUX9vB,YACE+vB,EACAC,EACAC,EACOC,EACAhO,EACAiO,EACA9L,EACP+L,GAJO,KAAAF,SAAAA,EACA,KAAAhO,MAAAA,EACA,KAAAiO,SAAAA,EACA,KAAA9L,gBAAAA,EAGY,MAAf0L,GAAuBA,EAAYjsB,OAAS,GAC9CrD,KAAKgT,MAAQsc,EAAY,GACzBtvB,KAAKwb,mBAAqB8T,EAAY,IACpB,MAATC,GAAiBA,EAAMlsB,OAAS,GACzCrD,KAAKlB,KAAOywB,EAAM,GAClBvvB,KAAKuX,aAAegY,EAAM,GAC1BvvB,KAAK8X,YAAcyX,EAAM,IACQ,MAAxBC,GAAgCA,EAAqBnsB,OAAS,IACvErD,KAAK6iB,SAAW2M,EAAqB,GACrCxvB,KAAK4vB,aAAeJ,EAAqB,IAE3CxvB,KAAK2vB,OAAmB,MAAVA,EAAiBA,EAAS,KAG1CE,gBAAgBhN,GACd,MAAMxa,EAAW,CACfynB,MAAO,qBACPC,UAAWlN,GAGb,GAAyB,MAArB7iB,KAAK4vB,aACPvnB,EAAIynB,MAAQjN,EAAStc,WAAW,gBAAkB,mBAAqB,MACvE8B,EAAI2nB,WAAa,qBACjB3nB,EAAI4nB,cAAgBjwB,KAAK4vB,kBACpB,GAA+B,MAA3B5vB,KAAKwb,oBAA4C,MAAdxb,KAAKgT,MACjD3K,EAAI2nB,WAAa,WACjB3nB,EAAI6nB,SAAWlwB,KAAKgT,MACpB3K,EAAI8nB,SAAWnwB,KAAKwb,uBACf,IAAiB,MAAbxb,KAAKlB,MAAqC,MAArBkB,KAAKuX,cAA4C,MAApBvX,KAAK8X,YAMhE,MAAM,IAAIjZ,MAAM,qCALhBwJ,EAAI2nB,WAAa,qBACjB3nB,EAAIvJ,KAAOkB,KAAKlB,KAChBuJ,EAAI+nB,cAAgBpwB,KAAKuX,aACzBlP,EAAIgoB,aAAerwB,KAAK8X,YAuB1B,OAlBI9X,KAAK2vB,SACPtnB,EAAIioB,WAAatwB,KAAK2vB,OAAOvkB,KAC7B/C,EAAIkoB,iBAAmBvwB,KAAK2vB,OAAOtI,WACnChf,EAAImoB,WAAaxwB,KAAK2vB,OAAOrtB,MAK3BtC,KAAKyhB,OAA0B,MAAjBzhB,KAAKyvB,WACrBpnB,EAAIooB,eAAiBzwB,KAAKyhB,MAC1BpZ,EAAIqoB,kBAAoB1wB,KAAKyvB,SAC7BpnB,EAAIsoB,kBAAoB3wB,KAAK0vB,SAAW,IAAM,KAGpB,MAAxB1vB,KAAK4jB,kBACPvb,EAAIub,gBAAkB5jB,KAAK4jB,iBAGtBvb,EAGTuoB,0BAA0BC,GACC,MAArB7wB,KAAK4vB,cAAmD,MAA3B5vB,KAAKwb,oBAA4C,MAAdxb,KAAKgT,OACvE6d,EAAQrpB,IAAI,aAAcxF,EAAM8uB,iBAAiB9wB,KAAKgT,S,2SC9CrD,MAAM+d,GAAqB,CAChC,CAAC3E,GAAsB4E,eAAgB,CACrC5lB,KAAMghB,GAAsB4E,cAC5B1uB,KAAM,KACN2uB,YAAa,KACbC,SAAU,EACVC,KAAM,EACNC,SAAS,GAEX,CAAChF,GAAsBiF,SAAU,CAC/BjmB,KAAMghB,GAAsBiF,QAC5B/uB,KAAM,KACN2uB,YAAa,KACbC,SAAU,EACVC,KAAM,EACNC,SAAS,GAEX,CAAChF,GAAsBkF,KAAM,CAC3BlmB,KAAMghB,GAAsBkF,IAC5BhvB,KAAM,MACN2uB,YAAa,KACbC,SAAU,EACVC,KAAM,EACNC,SAAS,GAEX,CAAChF,GAAsBmF,iBAAkB,CACvCnmB,KAAMghB,GAAsBmF,gBAC5BjvB,KAAM,qBACN2uB,YAAa,KACbC,SAAU,GACVC,KAAM,EACNC,SAAS,GAEX,CAAChF,GAAsBoF,OAAQ,CAC7BpmB,KAAMghB,GAAsBoF,MAC5BlvB,KAAM,KACN2uB,YAAa,KACbC,SAAU,EACVC,KAAM,EACNC,SAAS,GAEX,CAAChF,GAAsBqF,UAAW,CAChCrmB,KAAMghB,GAAsBqF,SAC5BnvB,KAAM,KACN2uB,YAAa,KACbC,SAAU,EACVC,KAAM,EACNC,SAAS,I,gBCrFN,MAAMM,GAKXnyB,YACUsJ,EACAgH,EACA8hB,EACAviB,EACA1H,EACA4X,EACAC,EACAC,GAPA,KAAA3W,IAAAA,EACA,KAAAgH,YAAAA,EACA,KAAA8hB,eAAAA,EACA,KAAAviB,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAA4X,gBAAAA,EACA,KAAAC,cAAAA,EACA,KAAAC,aAAAA,EAZF,KAAAO,OAA4B,KAE5B,KAAAN,cAAgBzf,KAAK0f,aAAaC,KAAK3f,MAY7CA,KAAK4f,cAAgB/W,EAAIU,SAASC,cAAc,KAGlDG,KAAKe,GACH,MAAMiW,EAAS,IAAIJ,gBAAgB,CACjC7V,KAAM1K,KAAKmgB,aAAa7S,KAAKC,UAAU7C,IACvC8V,OAAQ1c,mBAAmB9D,KAAK6I,IAAIU,SAAS6E,SAAS3E,MACtDmoB,QAAS9tB,mBAAmB9D,KAAK0H,YAAYiJ,EAAE,yBAC/C8P,EAAG,MAGDzgB,KAAK2xB,gBAEPhR,EAAOkR,OAAO,SAAU7xB,KAAK0H,YAAY0Z,mBACzCphB,KAAKoP,qBAAqB2I,UACxB,GAAG/X,KAAK6P,gDAAgD8Q,OAG1D3gB,KAAK4f,cAAcnW,KAAO,GAAGzJ,KAAK6P,uCAAuC8Q,IACzE3gB,KAAK+f,OAAS/f,KAAK6I,IAAIU,SAASqT,eAAe,mBAC/C5c,KAAK+f,OAAO+R,MAAQ,6BAA+B,IAAI1oB,IAAIpJ,KAAK6P,aAAagR,OAC7E7gB,KAAK+f,OAAOC,IAAMhgB,KAAK4f,cAAcnW,KAErCzJ,KAAK6I,IAAI6I,iBAAiB,UAAW1R,KAAKyf,eAAe,IAI7DI,OACE7f,KAAK4K,YAAY,QAGnBkV,QACE9f,KAAK4K,YAAY,SAGnBA,YAAYkJ,GACL9T,KAAK+f,QAAW/f,KAAK+f,OAAOC,KAAQhgB,KAAK+f,OAAOE,eAIrDjgB,KAAK+f,OAAOE,cAAcC,YAAYpM,EAAS9T,KAAK+f,OAAOC,KAG7DG,aAAard,GACX,OAAOwB,KACLR,mBAAmBhB,GAAK4B,QAAQ,mBAAmB,CAACyE,EAAOuJ,IAClDtO,OAAOC,aAAc,KAAOqO,MAKzC0N,UACEpgB,KAAK6I,IAAIwX,oBAAoB,UAAWrgB,KAAKyf,eAAe,GAGtDC,aAAaxe,GACnB,IAAKlB,KAAK4gB,aAAa1f,GACrB,OAGF,MAAMqG,EAAkBrG,EAAMwJ,KAAKtD,MAAM,KACxB,YAAbG,EAAM,IAAoBvH,KAAKsf,gBACjCtf,KAAKsf,gBAAgB/X,EAAM,IACL,UAAbA,EAAM,IAAkBvH,KAAKuf,cACtCvf,KAAKuf,cAAchY,EAAM,IACH,SAAbA,EAAM,IAAiBvH,KAAKwf,cACrCxf,KAAKwf,aAAajY,EAAM,IAIpBqZ,aAAa1f,GACnB,OACkB,MAAhBA,EAAM2f,QACW,KAAjB3f,EAAM2f,QACN3f,EAAM2f,SAAY7gB,KAAK4f,cAAsBiB,QAC/B,MAAd3f,EAAMwJ,MACgB,iBAAfxJ,EAAMwJ,OAMsB,IAAnCxJ,EAAMwJ,KAAKjE,QAAQ,aACc,IAAjCvF,EAAMwJ,KAAKjE,QAAQ,WACa,IAAhCvF,EAAMwJ,KAAKjE,QAAQ,W,2SC5ElB,MAAM,GAyBXlH,YACYuiB,EACAriB,EACAiI,EACA2O,EACAjH,EACAvG,EACAwG,EACAzP,EACAE,EACAyV,GATA,KAAAuM,YAAAA,EACA,KAAAriB,OAAAA,EACA,KAAAiI,YAAAA,EACA,KAAA2O,WAAAA,EACA,KAAAjH,qBAAAA,EACA,KAAAvG,IAAAA,EACA,KAAAwG,mBAAAA,EACA,KAAAzP,aAAAA,EACA,KAAAE,MAAAA,EACA,KAAAyV,WAAAA,EAlCZ,KAAAkM,MAAgB,GAChB,KAAAiO,UAAoB,EACpB,KAAAqC,eAAyB,EACzB,KAAAJ,gBAA0B,EAC1B,KAAAjF,UAAYqE,GACZ,KAAAiB,aAAe5F,GACf,KAAA6F,qBAA8C7F,GAAsB4E,cACpE,KAAAkB,mBAA6B,EAC7B,KAAAC,SAA2B,KAC3B,KAAAtmB,MAAgB,GAChB,KAAAumB,eAAyB,KAGzB,KAAA/K,WAAqB,KAQX,KAAAgL,WAAa,QACb,KAAA/b,aAAe,QAcvBtW,KAAKkyB,kBAAoBlyB,KAAKoP,qBAAqBkjB,iBAAiBzpB,GAnBlE0pB,oBACF,MAAO,6BAA6BvyB,KAAKqP,mBAAmBwI,mBAqBxDvG,W,0CACJ,GAAKtR,KAAKwyB,SAAsD,MAA3CxyB,KAAK8hB,YAAY2Q,uBAAtC,CAeA,GAVAzyB,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAWmmB,IACpB,MAAtBA,EAAQH,aACVrnB,KAAKqnB,WAAaG,EAAQH,eAI1BrnB,KAAK0yB,YACP1yB,KAAKsW,aAAe,QAGN,MAAZtW,KAAK6I,KAAe7I,KAAKkyB,kBAAmB,CAC9C,MAAMriB,EAAc7P,KAAKqP,mBAAmBwI,iBAC5C7X,KAAKmyB,SAAW,IAAIT,GAClB1xB,KAAK6I,IACLgH,EACA7P,KAAK2xB,eACL3xB,KAAKoP,qBACLpP,KAAK0H,aACJ+Z,IACCzhB,KAAKyhB,MAAQA,EACbzhB,KAAKuQ,YAENqF,IACC5V,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkBiF,MAEnF8L,IACc,UAATA,IACF1hB,KAAK+xB,eAAgB,MAM7B/xB,KAAKiyB,qBAAuBjyB,KAAK8hB,YAAY6Q,4BAC3C3yB,KAAKkyB,yBAEDlyB,KAAK2J,YAxCT3J,KAAKP,OAAOY,SAAS,CAACL,KAAKqyB,gBA2C/BzwB,cACE5B,KAAK4yB,kBACL5yB,KAAKmyB,SAAW,KAGZxoB,O,0CACJ,GAAiC,MAA7B3J,KAAKiyB,qBAEP,YADAjyB,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,qBAIlC3Q,KAAK4yB,kBACL5yB,KAAK6L,MAASklB,GAA2B/wB,KAAKiyB,sBAAsB3vB,KACpE,MAAMuwB,EAAe7yB,KAAK8hB,YAAY2Q,uBAAuBK,IAAI9yB,KAAKiyB,sBACtE,OAAQjyB,KAAKiyB,sBACX,KAAK7F,GAAsBqF,SACpBzxB,KAAK2xB,gBACRjT,YAAW,KACT1e,KAAK+yB,iBACJ,KAEL,MACF,KAAK3G,GAAsBkF,IAC3B,KAAKlF,GAAsBmF,gBACzB7S,YAAW,KACT,QAAe,CACbqB,YAAQxM,EACRlN,KAAMwsB,EAAaG,KACnBC,YAAaJ,EAAaK,UAC1BC,gBAAwBC,GAAuB,mCAC7C,MAAMC,EAAMD,EAAEE,cAAc,8BACjB,MAAPD,IACFrzB,KAAKyhB,MAAQ4R,EAAIE,YACXvzB,KAAKuQ,iBAIhB,GACH,MACF,KAAK6b,GAAsBoF,MACzBxxB,KAAKoyB,eAAiBS,EAAarB,MAC/BxxB,KAAK8hB,YAAY2Q,uBAAuBe,KAAO,UAC3CxzB,KAAKyzB,WAAU,QAQvBljB,S,0CACJ,GAAkB,MAAdvQ,KAAKyhB,OAAgC,KAAfzhB,KAAKyhB,MAA/B,CASA,GAAIzhB,KAAKiyB,uBAAyB7F,GAAsBqF,SAAU,CAChE,GAAqB,MAAjBzxB,KAAKmyB,SAGP,OAFAnyB,KAAKmyB,SAAStS,YAKhB7f,KAAKiyB,uBAAyB7F,GAAsBoF,OACpDxxB,KAAKiyB,uBAAyB7F,GAAsB4E,gBAEpDhxB,KAAKyhB,MAAQzhB,KAAKyhB,MAAM/c,QAAQ,IAAK,IAAI4B,QAG3C,UACQtG,KAAK0zB,WACX,SACI1zB,KAAKiyB,uBAAyB7F,GAAsBqF,UAA6B,MAAjBzxB,KAAKmyB,UACvEnyB,KAAKmyB,SAASrS,cAzBhB9f,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,gCA2BnB+iB,W,0CACJ1zB,KAAKuW,YAAcvW,KAAK8hB,YAAY6R,eAClC3zB,KAAKiyB,qBACLjyB,KAAKyhB,MACLzhB,KAAK0vB,UAEP,MAAM9jB,QAA6B5L,KAAKuW,YAClCyG,QAAuBhd,KAAKJ,aAAaqd,0BACzCjd,KAAKJ,aAAasd,oBAAoBF,GACd,MAA1Bhd,KAAK2iB,mBACP3iB,KAAK2iB,oBAEH/W,EAASogB,sBACXhsB,KAAKsW,aAAe,gBAElB1K,EAAS6W,qBACXziB,KAAKsW,aAAe,wBAEgB,MAAlCtW,KAAK4iB,0BACP5iB,KAAK4iB,4BAEL5iB,KAAKP,OAAOY,SAAS,CAACL,KAAKsW,cAAe,CACxChW,YAAa,CACX+mB,WAAYrnB,KAAKqnB,iBAMnBoM,UAAUG,G,0CACd,GAAI5zB,KAAKiyB,uBAAyB7F,GAAsBoF,OAI/B,MAArBxxB,KAAK6zB,aAAT,CAIA,IACE,MAAMjlB,EAAU,IAAIqe,GACpBre,EAAQoE,MAAQhT,KAAK8hB,YAAY9O,MACjCpE,EAAQ4M,mBAAqBxb,KAAK8hB,YAAYtG,mBAC9Cxb,KAAK6zB,aAAe7zB,KAAKqW,WAAWyd,mBAAmBllB,SACjD5O,KAAK6zB,aACPD,GACF5zB,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,4BAA6B3Q,KAAKoyB,iBAGzD,MAAOxzB,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxBoB,KAAK6zB,aAAe,SAGtBd,eACE,MAAMF,EAAe7yB,KAAK8hB,YAAY2Q,uBAAuBK,IAAI9yB,KAAKiyB,sBAEjEjyB,KAAKkyB,mBAAsC,MAAjBlyB,KAAKmyB,UAIpCnyB,KAAKmyB,SAASxoB,KAAKkpB,GAGbD,kBACe,MAAjB5yB,KAAKmyB,WACPnyB,KAAKmyB,SAAStS,OACd7f,KAAKmyB,SAAS/R,WAIdoS,cACF,OACExyB,KAAK8hB,YAAYiS,uBACjB/zB,KAAK8hB,YAAYkS,kBACjBh0B,KAAK8hB,YAAYmS,oBAIjBvB,gBACF,OAAO1yB,KAAK8hB,YAAYkS,kBAAoBh0B,KAAK8hB,YAAYmS,qB,kCA3PpD,IAAkB,iKA+BZnH,QAAM,yH,qCA/BZ,KCnBN,MAAMoH,GACX30B,YAAoB6P,GAAA,KAAAA,qBAAAA,EAEpB+kB,UAAUtrB,GACR,MAA+B,KAAxBA,EAAIuF,SAASlH,QAAiB2B,EAAIuF,SAASlH,OAAOT,QAAQ,uBAAyB,EAG5F2tB,MAAMvrB,GACJ,MAA+B,KAAxBA,EAAIuF,SAASlH,QAAiB2B,EAAIuF,SAASlH,OAAOT,QAAQ,mBAAqB,EAGxF4tB,SAASxrB,GACP,MAA+B,KAAxBA,EAAIuF,SAASlH,QAAiB2B,EAAIuF,SAASlH,OAAOT,QAAQ,sBAAwB,EAG3F6tB,QAAQzrB,GACN,MAC0B,KAAxBA,EAAIuF,SAASlH,SACmC,IAAhD2B,EAAIuF,SAASlH,OAAOT,QAAQ,gBAC5BoC,EAAIuF,SAASlH,OAAOT,QAAQ,qBAAuB,EAIvD8tB,kBAAkB1rB,EAAa2rB,EAA6B,WAE1D,OADgB3rB,EAAIU,SAASkrB,qBAAqBD,GAAoB,GACvDE,UAGjBC,kBAAkB9rB,EAAa+rB,EAAiBJ,EAA6B,WAC3E,GAAe,MAAXI,EAAiB,CACH/rB,EAAIU,SAASkrB,qBAAqBD,GAAoB,GAC9DE,UAAYE,GAIxBC,OAAOhsB,EAAaY,EAAe,MAKjC,GAJa,OAATA,IACFA,EAAOZ,EAAIuF,SAAS3E,MAGA,oBAAXO,QAA0BA,OAAOC,SAAWD,OAAOC,QAAQqB,OAAQ,CAC5E,GAAI7B,EAAKhD,QAAQ,iBAAmB,EAClCgD,EAAOA,EACJ/E,QAAQ,mBAAoB,qBAC5BA,QAAQ,iBAAkB,qBAC1BA,QAAQ,qBAAsB,yBAC5B,CACL,MAAMowB,EAAYrrB,EAAKrC,MAAM,KAC7BqC,EACEqrB,EAAU,GAAK,sBAAwBA,EAAUzxB,OAAS,EAAI,IAAMyxB,EAAU,GAAK,IAGvF,MAAMC,EAAWxrB,SAAS+pB,cAAc,QAAQ0B,wBAChDhrB,OAAOC,QAAQqB,OAAO,CACpBlL,IAAKqJ,EACL2B,KAAM,QACN6V,MAAOnb,KAAKmvB,MAAMF,EAAS9T,MAAQ8T,EAAS9T,MAAQ,GAAK,KACzDD,OAAQlb,KAAKmvB,MAAMF,EAAS/T,QAAU,OAGpChhB,KAAKs0B,QAAQzrB,IACfe,EAAWsrB,WAAWrsB,OAEG,oBAAXmB,QAA0BA,OAAOM,MAAQN,OAAOM,KAAKgB,SACrE7B,EAAOA,EACJ/E,QAAQ,mBAAoB,kBAC5BA,QAAQ,oBAAqB,kBAC7BA,QAAQ,qBAAsB,kBACjCsF,OAAOM,KAAKgB,OAAO,CACjBlL,IAAKqJ,M,kCArEAyqB,IAAiB,mB,wCAAjBA,GAAiB,QAAjBA,GAAiB,OCPvB,MAAeiB,I,qUCShB,mCAWE,6DAA8B,e,sBAAuB,oBACrD,qDACF,+C,sDAVE,sCAQM,sDAAwB,2EACa,wD,uBAY3C,8BACE,e,sBACF,qB,MADE,yH,0BAEF,8BACE,e,sBACF,qB,mCADE,4I,yDAXN,gCAME,0DACE,+DAGA,+DAGF,8CACA,0DACE,8DACE,gEACE,oEAAkB,gB,uBAA+B,oBACjD,oEAIE,0GAJF,oBAUF,mDACA,gEACE,oEAAsB,gB,uBAAyB,oBAC/C,oEAAqD,6GAArD,oBACF,mDACF,iDACF,+CACF,sD,qCA5BW,gGAGA,wFAOe,qFAKhB,qDAQoB,8EAC+B,yD,yDAK7D,gCACE,0DACE,0DAAuB,e,sBAA4B,oBACnD,uDACF,8CACA,4DACE,8DACE,gEACE,oEAAkC,gB,uBAA+B,oBACjE,oEAIE,0GAJF,oBASF,mDACA,gEACE,oEAAsB,gB,uBAAyB,oBAC/C,oEAAqD,6GAArD,oBACF,mDACF,iDACF,+CACF,sD,qCAvB2B,gFAMe,qFAKhC,qDAOoB,8EAC+B,yD,yDAK7D,gCACE,0DAA0B,8BAA8D,oBACxF,0DACE,4DACE,8DACE,oEAAsB,gB,uBAAyB,oBAC/C,oEAAqD,6GAArD,oBACF,mDACF,iDACF,+CACF,sD,qCATyD,2DAI3B,8EAC+B,yD,yDAM3D,gCACE,0DAAuB,e,sBAA6B,oBACpD,+DAAgD,yGAC9C,e,sBACF,oBACF,8C,MAJyB,iFAErB,mH,0BAJN,gCACE,8DAMF,sD,kCANoC,4D,yDAOpC,gCAME,0DAAoB,8BAAiC,oBACrD,0DACE,4DACE,8DACE,oEAAsB,gB,uBAAyB,oBAC/C,oEAAqD,6GAArD,oBACF,mDACF,iDACF,+CACF,sD,qCAL8B,+EAC+B,yD,uBAK7D,gCACE,wDAAuB,e,sBAAiC,oBACxD,wDAAuB,e,sBAAkC,oBAC3D,6C,MAFyB,qFACA,uF,yDAQvB,8BACE,+DAAmC,kGAAmB,MACpD,e,sBACF,oBACF,8C,sCAH+D,iEAC3D,+H,yDARN,gCACE,wDACE,+DAAmC,yGACjC,e,sBACF,oBACF,8CACA,2DAKF,6C,qCARM,uHAGA,yFCxGH,MAAMC,WAA2B,GAGtC71B,YACEuiB,EACAriB,EACAiI,EACA2O,EACAjH,EACQ+T,EACR9T,EACQgmB,EACAC,EACR11B,EACAE,EACQJ,EACR6V,GAEAzC,MACEgP,EACAriB,EACAiI,EACA2O,EACAjH,EACArN,OACAsN,EACAzP,EACAE,EACAyV,GAnBM,KAAA4N,YAAAA,EAEA,KAAAkS,mBAAAA,EACA,KAAAC,kBAAAA,EAGA,KAAA51B,iBAAAA,EAdV,KAAA61B,sBAAuB,EA6BrBziB,MAAM6P,kBAAoB,IACjBQ,EAAYC,UAAS,GAE9BtQ,MAAMwD,aAAe,cACrBtW,KAAK2xB,eACH3xB,KAAKoP,qBAAqBomB,aAAex1B,KAAKoP,qBAAqBqmB,WAGjEnkB,W,uNACJ,GAAItR,KAAKF,MAAM41B,SAASC,SAASC,IAAI,oBAWnC,OATA51B,KAAKiyB,qBAAuB7F,GAAsBqF,SAClDzxB,KAAKyhB,MAAQzhB,KAAKF,MAAM41B,SAASC,SAAS7C,IAAI,oBAC9C,EAAMnQ,kBAAoB,IAAY,mCACpC3iB,KAAKmjB,YAAYC,UAAS,GAC1BpjB,KAAKN,iBAAiBQ,KAAK,eAC3B6B,OAAOyK,WAETxM,KAAK0vB,SAA4D,SAAjD1vB,KAAKF,MAAM41B,SAASC,SAAS7C,IAAI,uBAC3C9yB,KAAK0zB,YAKb,SADM,EAAMpiB,SAAQ,WACa,MAA7BtR,KAAKiyB,qBAAT,CAUA,GAJIjyB,KAAKiyB,uBAAyB7F,GAAsBqF,iBAAmBzxB,KAAK61B,YAC9EtsB,SAASuE,KAAK6D,UAAUC,IAAI,kBAI5B5R,KAAKiyB,uBAAyB7F,GAAsBoF,OACpDxxB,KAAKs1B,kBAAkBhB,QAAQvyB,QAC/B,QACwB/B,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,wBACnB,KACA3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,SAGnB3Q,KAAKs1B,kBAAkBT,OAAO9yB,QAIlC/B,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBmmB,GAAY,mCAC5C,SAAhBA,EAAQuE,MACV,EAAMpJ,kBAAoB,KACxB/Y,EAAW0iB,oBAGX,OAFmBvqB,OAAOwqB,KAAK,GAAI,SACxB/f,QACJxM,KAAKmjB,YAAYC,UAAS,cAMnCxhB,c,gHACJ5B,KAAKq1B,mBAAmBxzB,YAlGM,sBAoG1B7B,KAAKiyB,uBAAyB7F,GAAsBqF,iBAAmBzxB,KAAK61B,YAC9EtsB,SAASuE,KAAK6D,UAAU3F,OAAO,kBAEjC,EAAMpK,YAAW,cAGnBk0B,gBACE91B,KAAKP,OAAOY,SAAS,CAAC,gBAGlBw1B,U,0CACJ,MAAmD,iBAArCjsB,EAAWkF,mBAAmBinB,O,kCAzGnCX,IAAkB,8W,qCAAlBA,GAAkB,mkD,GAAA,MD7B/B,kCAAiC,8CAAY,EAAA7kB,YAC3C,sDACE,uDACE,uDAAuB,e,sBAAmB,oBAC5C,6CACA,wDACE,4DAAoB,gBAAW,oBACjC,6CACA,yDACE,iEAcF,6CACF,2CACA,yDACE,uEAoCA,uEA0BA,sEAWA,qEAQA,sEAgBA,6DAIA,8DAYF,2CACF,yCACA,sB,iCA7IuD,8CAG1B,wEAGH,kDAOjB,4OAcF,+IAmCY,0FA0BA,8GAWA,6GASZ,+IAemB,uEAIQ,yE,4OE7H3B,MAAMylB,WCFN,S,2SCsBA,MAAM,WAAoC,GAQ/Cz2B,YACEmI,EACA0H,EACAyH,EACA8P,EACAvN,EACA1Z,EACQ2W,EACRzW,EACQujB,EACA5N,GAERzC,MACEpL,EACA0R,EACA1Z,EACAmX,EACAzH,EACAuX,EACA/mB,GAZM,KAAAyW,WAAAA,EAEA,KAAA8M,YAAAA,EACA,KAAA5N,WAAAA,EAdV,KAAAsE,cAAwB,EA2BlBvI,W,gHACEtR,KAAKmjB,YAAYC,UAAS,GAChC,EAAM9R,SAAQ,cAGhBoL,eAAe0I,GACbplB,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1BtQ,SAASqT,eAAewI,EAAe,uBAAyB,kBAAkBpT,QAG9E+U,qB,0CAKJ,OAJA/mB,KAAK4mB,4BAA8B5mB,KAAK2mB,cAAcE,iCACtD7mB,KAAKgT,YAAchT,KAAKJ,aAAa8d,WACrC1d,KAAKoa,UAAYpa,KAAKJ,aAAaya,aACnCra,KAAKsa,oBAAsBta,KAAKJ,aAAa2a,oBACtC,KAGHhK,S,0CAEJ,UAAYvQ,KAAK8mB,0BAIL9mB,KAAK+mB,sBAIjB,IAEE,MAAMkP,QAAej2B,KAAKoZ,cAAc6B,QACtCjb,KAAK2Z,eACL3Z,KAAKgT,MAAM1M,OAAOmB,cAClBzH,KAAKoa,IACLpa,KAAKsa,eAED4b,QAAwBl2B,KAAKoZ,cAAckC,aAAatb,KAAK2Z,eAAgBsc,GAG7E/N,QAAmBloB,KAAKoZ,cAAcyB,YAGtCsb,QAAkBn2B,KAAKoZ,cAAc4N,aAAaiP,EAAQ/N,SAE1DloB,KAAKinB,qBAAqBiP,EAAiBD,EAAQE,GACzD,MAAOv3B,GACPoB,KAAKuV,WAAWK,MAAMhX,OAIpBqoB,qBACJzL,EACAlH,EACAsG,G,0CAEA,IAEE,MAAMhM,EAAU,IAAIonB,GACpBpnB,EAAQ0F,IAAMsG,EAAO,GAAGpC,gBACxB5J,EAAQwnB,sBAAwB5a,EAChC5M,EAAQ8U,mBAAqB1jB,KAAK+jB,KAGlC/jB,KAAKuW,YAAcvW,KAAKqW,WAAWggB,sBAAsBznB,SACnD5O,KAAKuW,YACXvW,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,0BAGkB,MAAnC3Q,KAAKwoB,2BACPxoB,KAAKwoB,6BAELxoB,KAAKN,iBAAiBQ,KAAK,UAE7B,MAAOtB,GACPoB,KAAKuV,WAAWK,MAAMhX,Q,0BC/GxB,wCAKA,6C,kCAHE,kE,0BAWU,gCAIE,eACF,qB,kCAJE,mFAGA,wH,kCDdL,IAA2B,yQ,qCAA3B,GAA2B,6C,8FEGjC,MAAM03B,WAAoC,GA+B/C/2B,YACEmI,EACA0H,EACAyH,EACA8P,EACAvN,EACAxZ,EACAF,EACA2W,EACA8M,EACA5N,GAEAzC,MACEpL,EACA0H,EACAyH,EACA8P,EACAvN,EACA1Z,EACA2W,EACAzW,EACAujB,EACA5N,GApDAghB,+BACF,MAAMC,EAAyC,MAA5Bx2B,KAAKokB,oBAA8B,EAAqC,IAAhCpkB,KAAKokB,oBAAsB,GACtF,OAAQpkB,KAAKokB,qBACX,KAAK,EACH,MAAO,CACLqS,MAAO,aACPC,KAAM,SACNC,MAAOH,GAEX,KAAK,EACH,MAAO,CACLC,MAAO,aACPC,KAAM,OACNC,MAAOH,GAEX,KAAK,EACH,MAAO,CACLC,MAAO,aACPC,KAAM,OACNC,MAAOH,GAEX,QACE,MAAO,CACLC,MAAO,YACPC,KAAM,OACNC,MAAOH,K,kCA1BJF,IAA2B,yQ,qCAA3BA,GAA2B,83C,GAAA,MDzBxC,kCAAY,8CAAY,EAAA/lB,YACtB,sDACE,uDACE,uDAAG,2CAAS,EAAA2L,YAAU,e,sBAAqB,oBAC7C,6CACA,wDACE,4DAAoB,gB,uBAAmC,oBACzD,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAqB,oBACnD,sDACF,+CACF,6CACF,2CACA,yDACE,kE,uBACE,gB,uBACF,oBACA,qEAMA,0DACE,4DACE,8DACE,gEACE,kEACE,sEACE,gB,uBACA,uCAMF,uDACA,sEAKE,0EAA4B,2BAGnB,EAAAmJ,4BARX,oBAUF,qDACA,kEACE,uEAME,2CAAS,EAAA3I,gBAAe,M,uBAGxB,+DAKF,uDACF,qDACF,mDACA,gEACE,6DASF,mDACF,iDACF,+CACF,6CACA,0DACE,4DACE,8DACE,gEACE,oEAAkC,gB,uBAA+B,oBACjE,oEAKE,gFALF,oBASF,mDACA,gEACE,qEAME,2CAAS,EAAAA,gBAAe,M,uBAGxB,6DAKF,qDACF,oDACF,kDACF,gDACF,8CACA,4DACE,8DACE,gEACE,oEAAkB,iB,wBAA6B,oBAC/C,oEAAyC,gEAAzC,oBACF,kDACF,gDACA,8DACE,iB,wBACF,oBACF,8CACF,4CACF,0CACA,uB,iCAlIkC,8CAGN,0EAGF,yFAGe,wDAC3B,sDAAwB,2EACa,uDAKnB,qGAC1B,qHAKC,kEASS,2HAGG,0EAOH,sFAGA,4CAYA,wGAEA,gDAKE,wGAOJ,sGAKA,4FACA,mEAUgC,sFAGhC,sFAGA,kDAWA,wGAEA,gDAKE,wGAUY,qFACuB,oDAI3C,mH,6fEpHD,MAAM,GAGXnd,YACYsX,EACAzH,EACA1H,EACFmB,GAHE,KAAAgO,0BAAAA,EACA,KAAAzH,qBAAAA,EACA,KAAA1H,YAAAA,EACF,KAAAmB,IAAAA,EANV,KAAA+tB,QAAsC,GAShCtlB,W,0CACJtR,KAAK42B,cAAgB52B,KAAK6W,0BAA0BggB,gBAGtDC,QACE92B,KAAK42B,QAAU,GACf52B,KAAK6W,0BAA0BigB,QAGjCC,KAAK5G,GACH,MAAM6G,EAA0B,MAAZh3B,KAAK6I,IAAc,CAAE9G,OAAQ/B,KAAK6I,KAAQ,KAC9D7I,KAAKoP,qBAAqB6nB,gBAAgB9G,EAAU6G,GACpDh3B,KAAKoP,qBAAqBsB,UACxB,OACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE,e,kCAzB9C,IAAiC,qGAO7Bmc,U,qCAPJ,KCFN,MAAMoK,GACX33B,YAAoByR,EAAwB5B,GAAxB,KAAA4B,GAAAA,EAAwB,KAAA5B,qBAAAA,EAEtB+nB,SACpB,GAAc,MAAVp1B,OACF,OAEF,IAAIq1B,EAAW,GACf,MAAMC,EAAYt1B,OAAOu1B,eACzB,IAAK,IAAIh0B,EAAI,EAAGA,EAAI+zB,EAAUE,WAAYj0B,IAAK,CAC7C,MACMk0B,EADQH,EAAUI,WAAWn0B,GAChBW,WAMnB,IAAIyzB,EAAeF,EAAKn0B,OACxB,MAAMs0B,EAAaH,EAAKtwB,OAAO,kBAC/B,GAAIywB,GAAc,EAAG,CAED,KADAH,EAAK7zB,OAAOg0B,GAAYrxB,SAExCoxB,EAAeC,GAGnBP,GAAYI,EAAKI,UAAU,EAAGF,GAEhC13B,KAAKoP,qBAAqB6nB,gBAAgBG,EAAU,CAAEr1B,U,kCA3B7Cm1B,IAAmB,iE,qCAAnBA,GAAmB,oE,0CAAnB,iBCCN,MAAMW,GACXplB,UAAU0d,GAER,MAAM2H,EAAgB/yB,MAAM9B,KAAKktB,GACjC,IAAI4H,EAAoB,GACxB,IAAK,IAAIz0B,EAAI,EAAGA,EAAIw0B,EAAcz0B,OAAQC,IAAK,CAC7C,IAAI00B,EAAYF,EAAcx0B,GAC1B20B,GAAY,EAEhB,OAAQD,GACN,IAAK,IACHA,EAAY,QACZC,GAAY,EACZ,MACF,IAAK,IACHD,EAAY,OACZC,GAAY,EACZ,MACF,IAAK,IACHD,EAAY,OACZC,GAAY,EACZ,MACF,IAAK,IACHD,EAAY,SACZC,GAAY,EAKhB,IAAI7sB,EAAO,SACP4sB,EAAU7uB,MAAMnH,EAAM0H,yBACxB0B,EAAO,QACE6sB,GAAaD,EAAU7uB,MAAM,UACtCiC,EAAO,UACE4sB,EAAU7uB,MAAM,QACzBiC,EAAO,UAET2sB,GAAqB,yBAA2B3sB,EAAO,KAAO4sB,EAAY,UAE5E,OAAOD,G,yDC5BL,gCACE,4DACE,8DACE,2D,+BAKA,iEAAqB,gB,uBAA6B,oBACpD,mDACF,iDACA,8DACE,mEAKE,6H,uBAEA,2DACF,mDACF,iDACF,+C,4BAhBQ,oGAEmB,iFAQrB,oG,0BAlBV,+BACE,wDACE,+DAuBF,4CACF,2C,kCAxBoE,wD,uBAyBpE,gCACE,mDAAG,e,sBAAgC,oBACrC,2C,MADK,qF,kCDrCMF,K,sDAAAA,GAAiB,UEKvB,MAAMK,WAA0C,GACrD34B,YACEsX,EACAzH,EACA1H,EACQ0G,GAER0E,MAAM+D,EAA2BzH,EAAsB1H,EAAa3F,QAF5D,KAAAqM,SAAAA,EAKV5B,QACExM,KAAKoO,SAAS+pB,Q,kCAXLD,IAAiC,oH,qCAAjCA,GAAiC,i0BDb9C,gCACE,qDACE,0DAAiD,2CAAS,EAAA1rB,WACxD,0DAA6C,wBAAkC,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDACE,0DAAoB,gB,uBAA8B,oBACpD,2CACA,uDACE,4DAAiD,2CAAS,EAAAsqB,WACxD,gB,uBACF,oBACF,2CACF,yCACA,uDACE,0DA2BA,0DAGF,yCACA,sB,MA5CY,yEAIY,mFAIlB,8FAK6B,sEA2BV,0E,iYEnClB,MAAM,GAWXv3B,YACYsX,EACAzH,EACA1H,EACFmB,GAHE,KAAAgO,0BAAAA,EACA,KAAAzH,qBAAAA,EACA,KAAA1H,YAAAA,EACF,KAAAmB,IAAAA,EAdD,KAAAuvB,YAAsB,EACrB,KAAAC,WAAa,IAAI,EAAA9oB,aAG3B,KAAAlF,QAAe,GACf,KAAA8lB,SAAmB,IACnB,KAAAmI,aAAc,EACd,KAAAC,gBAAiB,EASfv4B,KAAKw4B,gBAAkB,CACrB,CAAEl2B,KAAMoF,EAAYiJ,EAAE,YAAa4iB,MAAO,YAC1C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAO,eAI1CjiB,W,0CACJ,MAAMmnB,QAAwBz4B,KAAK6W,0BAA0B6hB,aAC7D14B,KAAKqK,QAAUouB,EAAgB,GAC/Bz4B,KAAK4mB,sBAAwB6R,EAAgB,GAC7Cz4B,KAAKu4B,gBAAkBv4B,KAAKqK,QAAQsuB,UACpC34B,KAAKqK,QAAQe,KAA6B,eAAtBpL,KAAKqK,QAAQe,KAAwB,aAAe,WACxEpL,KAAKmwB,eAAiBnwB,KAAK6W,0BAA0BS,iBAAiBtX,KAAKqK,eACrErK,KAAK6W,0BAA0B+hB,WAAW54B,KAAKmwB,aAGjD0I,gB,0CACJ74B,KAAK84B,aAAY,SACX94B,KAAK6W,0BAA0B+hB,WAAW54B,KAAKmwB,aAGjD4I,c,0CACJ/4B,KAAKg5B,mBACLh5B,KAAKmwB,eAAiBnwB,KAAK6W,0BAA0BS,iBAAiBtX,KAAKqK,YAGvEyuB,YAAYG,GAAsB,G,0CACtCj5B,KAAKg5B,yBACCh5B,KAAK6W,0BAA0BiiB,YAAY94B,KAAKqK,SAElD4uB,UACIj5B,KAAKi5B,iBAITA,a,0CACJj5B,KAAKmwB,eAAiBnwB,KAAK6W,0BAA0BS,iBAAiBtX,KAAKqK,eACrErK,KAAK6W,0BAA0B+hB,WAAW54B,KAAKmwB,aAGvD4G,OACE,MAAMC,EAA0B,MAAZh3B,KAAK6I,IAAc,CAAE9G,OAAQ/B,KAAK6I,KAAQ,KAC9D7I,KAAKoP,qBAAqB6nB,gBAAgBj3B,KAAKmwB,SAAU6G,GACzDh3B,KAAKoP,qBAAqBsB,UACxB,OACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE,cAIzDuoB,SACEl5B,KAAKq4B,WAAWvnB,KAAK9Q,KAAKmwB,UAG5BgJ,gBACEn5B,KAAKs4B,aAAet4B,KAAKs4B,YAGnBU,mBAIN,GAFAh5B,KAAKqK,QAAQsuB,WAAa34B,KAAKu4B,iBAG5Bv4B,KAAKqK,QAAQ4M,WACbjX,KAAKqK,QAAQ6M,WACblX,KAAKqK,QAAQ+uB,QACbp5B,KAAKqK,QAAQ+M,WAEdpX,KAAKqK,QAAQ6M,WAAY,EACT,MAAZlX,KAAK6I,KAAa,CACpB,MAAMqO,EAAYlX,KAAK6I,IAAIU,SAAS+pB,cAAc,cAC9Cpc,IACFA,EAAUmiB,SAAU,GAK1Br5B,KAAK6W,0BAA0BmiB,iBAAiBh5B,KAAKqK,QAASrK,KAAK4mB,wB,kCA9F1D,IAA0B,qGAetBkG,U,qCAfJ,GAA0B,qECChC,MAAMwM,GAGX/5B,YACU6P,EACAkmB,GADA,KAAAlmB,qBAAAA,EACA,KAAAkmB,kBAAAA,EAJD,KAAAiE,MAAO,EAOhBjoB,WACMtR,KAAKu5B,MACHv5B,KAAKs1B,kBAAkBnB,UAAUpyB,SAAW/B,KAAKoP,qBAAqBomB,cACxEx1B,KAAKu5B,MAAO,GAKlBC,SACEx5B,KAAKs1B,kBAAkBT,OAAO9yB,S,kCAjBrBu3B,IAAe,uD,qCAAfA,GAAe,uOCV5B,gCACE,wDAAsB,2CAAS,EAAAE,Y,sBAC7B,gDACF,0CACF,iDACA,qB,MAJ2C,uG,gZCEvC,mCAAmC,iGACjC,e,sBACF,oB,MADE,+F,yDAOF,mCAAmC,kGACjC,e,sBACF,oB,MADE,+F,uBAKJ,wCACE,e,sBACF,qB,MADE,oH,yDA0CI,gCACE,gEAEE,iHAA0B,wFAF5B,oBASA,gEACE,eACF,oBACF,gD,mDATI,yEACA,qDAFA,0CAA0B,gBAA1B,CAA0B,oCAOrB,wEACL,mF,yDAMV,gCACE,wDACE,0DACE,8DAAuB,e,sBAAuB,oBAC9C,+DAKE,wGAAwB,qGAL1B,oBAQF,+CACA,4DACE,gEAA4B,gB,uBAA4B,oBACxD,gEAIE,uGAAuB,0GAJzB,oBAOF,+CACA,4DACE,gEAAwB,gB,uBAAyB,oBACjD,gEAGE,wGAAwB,uGAH1B,oBAOF,+CACA,4DACE,gEAA4B,gB,uBAA4B,oBACxD,gEAGE,wGAAwB,0GAH1B,oBAOF,+CACF,6CACF,2C,qCAzC6B,4EAOrB,gEAI0B,kFAM1B,qEAIsB,+EAKtB,kEAAgC,kFAKN,kFAK1B,qEAAmC,sF,yDAM3C,gCACE,wDACE,0DACE,4DACE,gEAAoB,e,uBAAqB,oBACzC,kEAKE,mHAA4B,wFAL9B,oBAQA,kEAME,mHAA4B,yFAA5B,CAA4B,uFAN9B,oBAUF,iDACA,8DACE,kEAAuB,sBAAG,oBAC1B,kEAGE,wGAAwB,sG,uBAH1B,oBAQF,iDACA,8DACE,kEAAuB,sBAAG,oBAC1B,kEAGE,wGAAwB,sG,uBAH1B,oBAQF,iDACA,8DACE,kEAAqB,sBAAG,oBACxB,kEAGE,wGAAwB,mG,uBAH1B,oBAQF,iDACA,8DACE,kEAAqB,2BAAQ,oBAC7B,kEAGE,wGAAwB,oG,uBAH1B,oBAQF,iDACF,+CACF,6CACA,0DACE,4DACE,8DACE,kEAAwB,gB,uBAAyB,oBACjD,kEAKE,wGAAwB,sGAL1B,oBAQF,iDACA,8DACE,kEAAyB,gB,uBAAyB,oBAClD,kEAKE,wGAAwB,uGAL1B,oBAQF,iDACA,8DACE,kEAAuB,gB,uBAA2B,oBAClD,kEAGE,wGAAwB,mGAH1B,oBAMF,iDACF,+CACF,6CACF,oD,qCArG4B,2EAMlB,8DASA,8DAYA,mFAA+C,+BAD/C,mEAYA,mFAA+C,+BAD/C,mEAYA,iFAA6C,4BAD7C,iEAYA,iFAA6C,6BAD7C,2EAUsB,gFAOtB,iEAIuB,+EAOvB,kEAIqB,iFAKrB,+DC9ML,MAAMC,WAAmC,GAG9Cl6B,YACEsX,EACAzH,EACA1H,EACQ9H,EACAwO,GAER0E,MAAM+D,EAA2BzH,EAAsB1H,EAAa3F,QAH5D,KAAAnC,aAAAA,EACA,KAAAwO,SAAAA,EAKJkD,W,gHACE,EAAMA,SAAQ,WACpB,MAAMooB,QAA0B15B,KAAKJ,aAAa+5B,uBACzB,MAArBD,IACF15B,KAAK45B,YAAcF,EAAkBG,QAEvC75B,KAAKo4B,WAAiC,MAApBp4B,KAAK45B,eAGzBV,SACEpmB,MAAMomB,SACNl5B,KAAK45B,YAAYE,MAAM3J,SAAWnwB,KAAKmwB,SACvCnwB,KAAKwM,QAGPA,QACExM,KAAKoO,SAAS+pB,Q,kCA7BLsB,IAA0B,8I,qCAA1BA,GAA0B,+mFDhBvC,gCACE,qDACE,0DACA,6DAGF,0CACA,oDACE,0DAAoB,gB,uBAAsB,oBAC5C,2CACA,uDACE,+DAGF,2CACF,yCACA,uDACE,kEAGA,uDACE,oD,gCACF,2CACA,uDACE,0DACE,+DAKE,2CAAS,EAAAR,gBAET,gB,uBACF,oBACA,+DAKE,2CAAS,EAAAlC,UAET,gB,uBACF,oBACF,6CACF,2CACA,uDACE,0DACE,0DACE,8DAAsB,gB,uBAA8B,oBACpD,uDACF,+CACF,6CACF,2CACA,wDACE,yDACE,gB,uBACF,oBACA,0DACE,4DACE,gEAAoC,gB,uBAAmB,oBACvD,iEAcF,+CACF,6CACF,2CACA,6DA6CA,sEA0GF,yCACA,sB,MAnOiB,wDACyC,uDAKlC,4EAGmC,uDAM/B,gHAIM,sGAW1B,gHASA,0GAOsB,qFAOxB,kGAIsC,yEAC0B,+DAiBlD,wEA6CH,wE,gTElHV,MAAMgD,GAIXzoB,WACEtR,KAAKg6B,mBAAqBhwB,OAAOkE,KAAK+rB,WAAW,sBACjDj6B,KAAKk6B,iBAAmBlwB,OAAOkE,KAAK+rB,WAAW,aAGjDE,YACEvwB,EAAWwwB,aACT,4E,uBCfA,8BACE,0D,sBACE,uDAAiE,e,sBACnE,oBACF,+C,MAH0B,gGAC2C,wF,kCDE9DL,K,qCAAAA,GAAoB,6KERjC,+BACE,mDAAuB,eAAwB,oBAC/C,wDAAgD,2CAAS,EAAAI,eACvD,mDAAG,eAAsB,oBAC3B,0CACF,yCACA,sB,MALyB,+DAElB,+D,kBCKA,MAAME,GAGX96B,YAAoB+1B,GAAA,KAAAA,kBAAAA,EAFpB,KAAAgF,gBAA0B,EAI1BhpB,WACEtR,KAAKs6B,gBAAkBt6B,KAAKs1B,kBAAkBjB,SAAStyB,S,kCAN9Cs4B,IAAa,6B,qCAAbA,GAAa,opBFR1B,+BACE,wDACA,qDACE,oDACE,2DAKA,yDACE,2D,uBACE,wDAAwD,gB,uBAC1D,oBACF,+CACA,0DACE,2D,uBACE,wDAAwD,gB,uBAC1D,oBACF,+CACA,0DACE,2D,uBACE,wDAA4D,gB,uBAC9D,oBACF,+CACA,0DACE,4D,uBACE,yDAAuD,gB,uBACzD,oBACF,+CACF,6CACF,2CACF,yCACA,sB,MA5BqC,2DAMP,8FACoC,6FAIrC,4FACqC,0FAIhC,+FACoC,+FAIrC,gGACgC,gG,gbG4BjD,mCAAoD,eAAO,qB,yBAArB,6BAAc,6C,yDARtD,mCAIE,kHAGA,uEAAyB,e,sBAA2B,oBACpD,0EACF,sD,qFAPE,qDACA,uDACA,iCAAwB,6BAGhB,kDAAiB,sFACH,4D,yDAIxB,mCAOE,mJ,sBAEA,6DACF,sD,KAJE,qF,yDA7CN,gCAKE,mEAGE,qH,sBAGA,2DACF,oDACA,gEACE,qEAAmC,gB,uBAAiC,oBACpE,sEAIE,6F,uBAJF,oBASA,sEACE,gB,uBACF,oBACA,0EAUF,qDACA,kEACE,0EAWF,qDACF,mD,8DA1CI,6FAKO,2EAA4B,oFAEjC,0EACA,0DAGA,iGADA,iCAKK,wEACL,gIAGC,8EAaA,+E,0BA1CT,gCACE,mEAoDF,0D,kCAjDuB,+DAAoB,mCCJnD,MAAM,GAA4B,kBAM3B,MAAME,GAKXh7B,YACUK,EACA8H,EACAjI,EACA41B,EACAvf,EACA1G,GALA,KAAAxP,aAAAA,EACA,KAAA8H,YAAAA,EACA,KAAAjI,OAAAA,EACA,KAAA41B,mBAAAA,EACA,KAAAvf,OAAAA,EACA,KAAA1G,qBAAAA,EAVV,KAAAorB,gBAAoC,GAa9BlpB,W,0CACJ,MAAMmpB,QAAqBz6B,KAAKJ,aAAa86B,kBAC7C,GAAID,EACF,IAAK,MAAME,KAAOxyB,OAAOpJ,KAAK07B,GAC5Bz6B,KAAKw6B,gBAAgB1lB,KAAK,CAAE6lB,IAAKA,EAAKC,iBAAiB,UAIrD56B,KAAK66B,kBAEX76B,KAAKq1B,mBAAmBh0B,UAAU,IAA4ByS,IAC5D9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,OAAQhnB,EAAQrJ,SACd,IAAK,aACL,IAAK,gBACgC,MAA/BzK,KAAK+6B,wBACPh5B,OAAOwjB,aAAavlB,KAAK+6B,wBAE3B/6B,KAAK+6B,uBAAyBh5B,OAAO2c,YACnC,IAAY,gDAAM1e,KAAK66B,sBACvB,iBAUZj5B,cACE5B,KAAKq1B,mBAAmBxzB,YAAY,IAGhCm5B,S,0CACJh7B,KAAKw6B,gBAAgB1lB,KAAK,CAAE6lB,IAAK,GAAIC,iBAAiB,OAGlDK,UAAU33B,G,0CACdtD,KAAKw6B,gBAAgBU,OAAO53B,EAAG,MAG3BiN,S,0CACJ,MAAMkqB,EAAyC,GAC/C,IAAK,MAAMxzB,KAAUjH,KAAKw6B,gBACxB,GAAIvzB,EAAO0zB,KAAsB,KAAf1zB,EAAO0zB,IAAY,CACnC,MAAMQ,EAAcn5B,EAAM+b,YAAY9W,EAAO0zB,KAC7C,IAAKQ,EAMH,YALAn7B,KAAKoP,qBAAqBsB,UACxB,QACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,+BAAgC1J,EAAO0zB,MAI9DF,EAAaU,GAAe,WAG1Bn7B,KAAKJ,aAAaw7B,gBAAgBX,GACxCz6B,KAAKP,OAAOY,SAAS,CAAC,sBAGxBg7B,gBAAgBC,EAAe5mB,GAC7B,OAAO4mB,EAGTC,eAAet0B,GACbA,EAAO2zB,iBAAmB3zB,EAAO2zB,gBAG7BC,kB,0CACJ,MAAMvwB,QAAaV,EAAWQ,UAAU,CAAE0B,WAAY,WACtD,GAAIxB,EAAM,CACR,MAAMkxB,EAAS,IAAIC,IAAInxB,EAAKrF,KAAKuF,GAAQxI,EAAM+b,YAAYvT,EAAIpK,QAC/Do7B,EAAOE,OAAO,MACd17B,KAAK27B,YAAc52B,MAAM9B,KAAKu4B,QCjHpC,IAAYI,GCAAC,G,kCFwBCtB,IAAwB,6K,qCAAxBA,GAAwB,y3CDxBrC,kCAAY,8CAAY,EAAAhqB,YACtB,sDACE,uDACE,uDACE,4DAA0B,yBAAqD,oBAC/E,4DAAM,gB,uBAAmB,oBAC3B,+CACF,6CACA,wDACE,4DAAoB,gB,uBAA8B,oBACpD,6CACA,yDACE,8DAAmC,gB,uBAAmB,oBACxD,6CACF,2CACA,yDACE,0DACE,4DACE,0EAsDA,iEAIE,2CAAS,EAAAyqB,YAGT,yDAAqE,gB,uBACvE,oBACF,+CACA,4DACE,gB,uBACF,oBACF,6CACF,2CACF,yCACA,sB,MAnFc,yEAIY,mFAGe,yEAMlB,6DA6DwD,6FAIvE,mH,8QEnFR,SAAYY,GACV,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DACA,0EAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEACA,0EAEA,sDACA,8DAEA,kEACA,4DACA,8DACA,8EACA,gFAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,kFAtEF,CAAYA,KAAAA,GAAS,KCArB,SAAYC,GACV,yDACA,uCACA,6CACA,6BACA,+BACA,6CACA,iCACA,iCACA,qCACA,iDACA,gEAXF,CAAYA,KAAAA,GAAU,KCEf,MAAeC,ICAf,MAAeC,ICEf,MAAeC,I,2SCYf,MAAM,GAiBXz8B,YACY6Z,EACA1R,EACA0H,EACA6sB,EACAC,EACFvV,EACE9d,EACF0M,EACA4mB,EACAC,GATE,KAAAhjB,cAAAA,EACA,KAAA1R,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAA6sB,cAAAA,EACA,KAAAC,aAAAA,EACF,KAAAvV,cAAAA,EACE,KAAA9d,IAAAA,EACF,KAAA0M,WAAAA,EACA,KAAA4mB,wBAAAA,EACA,KAAAC,YAAAA,EA1BA,KAAA9sB,QAAU,IAAI,EAAAC,aAGxB,KAAA8sB,kBAA4B,EAE5B,KAAAC,WAAat8B,KAAKo8B,YAAYG,MAAM,CAClCC,OAAQ,CAAC,QACTC,OAAQ,CAAC,MAGX,KAAAC,cAAgB,CACd,CAAEp6B,KAAM,QAASixB,MAAO,QACxB,CAAEjxB,KAAM,OAAQixB,MAAO,OACvB,CAAEjxB,KAAM,oBAAqBixB,MAAO,mBAgBhCjiB,W,gDACEtR,KAAK28B,yBAGPA,sB,0CACJ38B,KAAKq8B,uBAAyBr8B,KAAK2mB,cAAciW,oBAC/Cf,GAAWgB,4BAET78B,KAAKq8B,kBACPr8B,KAAKs8B,WAAWQ,aAIhBC,sBACF,MAAuB,mBAAhB/8B,KAAKw8B,OAGRjsB,S,0CACJ,GAAIvQ,KAAKq8B,iBAMP,YALAr8B,KAAKoP,qBAAqBsB,UACxB,QACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,sCAMvB,WAD8B3Q,KAAKg9B,iBAEjC,OAGF,MAAMP,EAASz8B,KAAKs8B,WAAWxJ,IAAI,UAAUS,MAC7C,UACQvzB,KAAKm8B,wBAAwBc,WAAWR,GAC9C,MAAO79B,GAEP,YADAoB,KAAKoP,qBAAqBsB,UAAU,QAAS1Q,KAAK0H,YAAYiJ,EAAE,iBAAkB/R,EAAEkV,SAItF,IACE9T,KAAKuW,YAAcvW,KAAKk9B,gBACxB,MAAMxyB,QAAa1K,KAAKuW,YACxBvW,KAAKm9B,aAAazyB,GAClB1K,KAAK4Q,cACC5Q,KAAKo9B,eACXp9B,KAAKs8B,WAAWxJ,IAAI,UAAUuK,SAAS,IACvC,MAAOz+B,GACPoB,KAAKuV,WAAWK,MAAMhX,OAIpBo+B,gB,0CACJ,OAAIh9B,KAAK+8B,sBACM/8B,KAAKoP,qBAAqB+M,WACrC,MACEnc,KAAK0H,YAAYiJ,EAAE,2BACnB,MACA3Q,KAAK0H,YAAYiJ,EAAE,+BACrB3Q,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,eACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB,WACA,SAGW3Q,KAAKoP,qBAAqB+M,WACrCnc,KAAK0H,YAAYiJ,EAAE,qBACnB3Q,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,eACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB,cAKIC,QACR5Q,KAAKsP,QAAQwB,OAGLosB,gBACR,OAAOl9B,KAAKi8B,cAAcqB,UAAUt9B,KAAKw8B,QAGjCe,YAAY5oB,GACpB,IAAI5J,EAAY/K,KAAKw8B,OASrB,MARoB,mBAAhBx8B,KAAKw8B,SAEL7nB,EADY,MAAVA,EACO,YAEA,aAAeA,EAE1B5J,EAAY,QAEP/K,KAAKi8B,cAAcsB,YAAY5oB,EAAQ5J,GAGhCqyB,e,gDACRp9B,KAAKk8B,aAAasB,QAAQ5B,GAAU6B,6BAGxCjB,aACF,OAAOx8B,KAAKs8B,WAAWxJ,IAAI,UAAUS,MAG/B4J,aAAaO,GACnB,MAAM/wB,EAAW3M,KAAKu9B,cACtBv9B,KAAKoP,qBAAqBuuB,SAAS39B,KAAK6I,IAAK60B,EAAK,CAAEtyB,KAAM,cAAgBuB,I,kCAzIjE,IAAe,uLAwBTmgB,QAAM,6F,qCAxBZ,GAAe,8B,IChBhB8Q,G,aAAZ,SAAYA,GACV,uCACA,iBAFF,CAAYA,KAAAA,GAAgB,K,qUCA5B,gCACE,uDAA4B,e,sBAAyB,oBACrD,kDAUA,uDAAoC,e,uBAA8B,oBACpE,mD,kCAZ8B,6EAM1B,0DAKkC,oF,uBAalC,iCACE,mDACA,e,sBACF,qB,MAH6C,gCAE3C,iG,yDAbN,gCACE,qDACE,yDAAuB,e,sBAAmC,oBAC1D,0DAGE,sGAGA,e,uBACF,oBACA,6DAIF,2CAEA,yDACE,2DAA8B,gB,uBAA+B,oBAC7D,sDAUA,2DAAoC,gB,uBAA8B,oBACpE,2CACF,kD,qCA7B2B,uFAKrB,kEAEA,iGAEkD,qDAOtB,qFAM5B,0DAKkC,qFChBjC,MAAM,GASXr+B,YACUI,EACAw8B,GADA,KAAAx8B,oBAAAA,EACA,KAAAw8B,wBAAAA,EAVV,KAAAxe,kBAA4B,EAC5B,KAAAkgB,mBAA6B,EAC7B,KAAAC,UAAoB,EAEpB,KAAArB,OAAS,IAAI,EAAAsB,YAAY,IASnBzsB,W,0CACJtR,KAAK2d,uBAAyB3d,KAAKL,oBAAoBie,sBACvD5d,KAAKg+B,eAAeh+B,KAAKy8B,OAAOlJ,OAEhCvzB,KAAKy8B,OAAOwB,aAAa58B,WAAWo7B,GAAWz8B,KAAKg+B,eAAevB,QAG/DyB,a,0CACJ,GAAIl+B,KAAK2d,iBAAkB,CACzB3d,KAAK69B,mBAAoB,EACzB,UACQ79B,KAAKm8B,wBAAwB+B,aACnCl+B,KAAK89B,UAAW,E,QAEhB99B,KAAK69B,mBAAoB,OAK/BM,WAAW91B,GACTrI,KAAKy8B,OAAOY,SAASh1B,GAGvB+1B,iBAAiBC,GACfr+B,KAAKs+B,SAAWD,EAGlBE,kBAAkBF,IAIlBG,iBAAkBC,GAChBz+B,KAAK69B,kBAAoBY,EACrBA,EACFz+B,KAAKy8B,OAAOK,UAEZ98B,KAAKy8B,OAAOiC,SAIRV,eAAevB,GACA,MAAjBz8B,KAAKs+B,UAITt+B,KAAKs+B,SAAS,CACZlzB,KAAMpL,KAAK2d,iBAAmBigB,GAAiBe,IAAMf,GAAiBgB,eACtEnC,OAAQA,K,0BCxFd,gCACE,qDACE,yDAA4B,e,sBAAyB,oBACrD,oDAUF,0CACF,mD,kCAZgC,6EAM1B,2D,uBAkBF,gCACE,mDACA,e,sBACF,qB,MAH6C,gCAE3C,iG,yDAbN,gCACE,qDACE,yDAAuB,e,sBAAmC,oBAC1D,0DAGE,sGAGA,e,uBACF,oBACA,6DAIF,2CAEA,yDACE,2DAA8B,gB,uBAA+B,oBAC7D,sDAUF,2CACF,kD,qCA5B2B,uFAKrB,kEAEA,iGAEkD,qDAOtB,qFAM5B,2D,kCDZO,IAA6B,uD,qCAA7B,GAA6B,6EAb7B,CACT,CACEoC,QAAS,EAAAC,kBACTC,OAAO,EACPC,YAAa,OAEhB,+rBDpBH,4CAcA,iEAgCA,qB,MA9Ce,4CAcA,+D,gCCOD,EACV,KAAAC,SAAQ,OAAQ,EACd,KAAAC,YAAW,SAAU,EAAC,KAAAC,OAAM,CAAEC,QAAS,KAAM,KAAAC,SAAQ,SAAS,KAAAF,OAAM,CAAEC,QAAS,aED9E,MAAME,WAAsC,I,uBCJ/C,wC,sBACE,e,sBACF,qB,MAF4B,gFAC1B,0H,0BAQM,mCAA0D,eAAY,qB,yBAA9B,iCAAkB,kD,oFDLzDA,MAA6B,GAA7BA,K,wCAAAA,GAA6B,6EAb7B,CACT,CACET,QAAS,EAAAC,kBACTC,OAAO,EACPC,YAAaM,MAEhB,utBDfH,4CAeA,iEA+BA,qB,MA9Ce,4CAeA,+D,yJCCD,EACV,KAAAL,SAAQ,OAAQ,EACd,KAAAC,YAAW,SAAU,EAAC,KAAAC,OAAM,CAAEC,QAAS,KAAM,KAAAC,SAAQ,SAAS,KAAAF,OAAM,CAAEC,QAAS,aEC9E,MAAMG,WAAwB,GACnChgC,YACE6Z,EACA1R,EACA0H,EACA6sB,EACAC,EACAvV,EACQlnB,EACR8V,EACA4mB,EACAC,GAEAtpB,MACEsG,EACA1R,EACA0H,EACA6sB,EACAC,EACAvV,EACA5kB,OACAwT,EACA4mB,EACAC,GAfM,KAAA38B,OAAAA,EAmBAmR,QACRkC,MAAMlC,QACN5Q,KAAKP,OAAOY,SAAS,CAAC,oB,kCA7Bbk/B,IAAe,8R,qCAAfA,GAAe,2qBDnB5B,gCAAM,8CAAY,EAAAhvB,YAChB,sDACE,uDACE,uDACE,4DAA6C,wBAAkC,oBAC/E,4DAAM,gB,uBAAmB,oBAC3B,+CACF,6CACA,wDACE,4DAAoB,gB,uBAA0B,oBAChD,6CACA,yDACE,8DACE,gB,uBACF,oBACF,6CACF,2CACA,yDACE,oEAIA,4DACE,4DACE,8DACE,kEAAoB,gB,uBAAyB,oBAC7C,mEACE,wEACF,mDACF,iDACA,qFACA,iDACF,+CACA,4DACE,yDAAG,gB,uBAA8B,oBACnC,+CACF,6CACF,2CACF,yCACA,sB,MAvC4B,0CAKd,yEAIY,gFAGe,oEACjC,oGAKoE,6DAO9C,+EAEI,6DAOvB,uF,gSE7BJ,MAAMivB,GAKXjgC,YAAY6zB,GAJZ,KAAAp0B,GAAa,KACb,KAAAsD,KAAe,KACf,KAAAm9B,aAAqB,KAGdrM,IAILpzB,KAAKhB,GAAKo0B,EAAEp0B,GACZgB,KAAKy/B,aAAerM,EAAEqM,eCRnB,MAAeC,I,2SCEf,MAAM,GAWXngC,YACYogC,EACAj4B,EACA0H,EACFmG,GAHE,KAAAoqB,cAAAA,EACA,KAAAj4B,YAAAA,EACA,KAAA0H,qBAAAA,EACF,KAAAmG,WAAAA,EAbA,KAAAqqB,cAAgB,IAAI,EAAArwB,aACpB,KAAAswB,gBAAkB,IAAI,EAAAtwB,aAEhC,KAAAuwB,UAAoB,EACpB,KAAAC,OAAqB,IAAIP,GAYnBluB,W,gDACEtR,KAAK2J,UAGP4G,S,0CACJ,GAAwB,MAApBvQ,KAAK+/B,OAAOz9B,MAAqC,KAArBtC,KAAK+/B,OAAOz9B,KAM1C,OALAtC,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kBAEd,EAGT,IACE,MAAMovB,QAAe//B,KAAK2/B,cAAc1jB,QAAQjc,KAAK+/B,QASrD,OARA//B,KAAKuW,YAAcvW,KAAK2/B,cAAcK,eAAeD,SAC/C//B,KAAKuW,YACXvW,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE3Q,KAAK8/B,SAAW,eAAiB,gBAEtD9/B,KAAK4/B,cAAc9uB,KAAK9Q,KAAK+/B,SACtB,EACP,MAAOnhC,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGH88B,S,0CAQJ,WAPwB17B,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,4BACnB3Q,KAAK0H,YAAYiJ,EAAE,gBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAKigC,cAAgBjgC,KAAK2/B,cAAcO,iBAAiBlgC,KAAK+/B,OAAO/gC,UAC/DgB,KAAKigC,cACXjgC,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBACxE3Q,KAAK6/B,gBAAgB/uB,KAAK9Q,KAAK+/B,QAC/B,MAAOnhC,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGO+K,O,0CAGd,GAFA3J,KAAK8/B,SAA4B,MAAjB9/B,KAAKmgC,SAEjBngC,KAAK8/B,SAAU,CACjB9/B,KAAK8/B,UAAW,EAChB9/B,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,cAChC,MAAMovB,QAAe//B,KAAK2/B,cAAc7M,IAAI9yB,KAAKmgC,UACjDngC,KAAK+/B,aAAeA,EAAO9mB,eAE3BjZ,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,iB,kCAnFzB,IAAsB,2G,qCAAtB,GAAsB,yG,oWCoB/B,gCACE,0DACE,kEAKE,mGAIA,8DACE,gEACE,6DACA,6DACF,qDACA,gEAAM,gB,uBAA2B,oBACnC,mDACF,iDACF,+CACF,6C,4DAZM,kEAK2C,sDACW,uDAE9C,iF,yDA/BhB,iCACE,wDACE,0DACE,4DACE,gEAAkB,e,uBAAmB,oBACrC,kEAIE,gHAJF,oBAOF,iDACF,+CACF,6CACA,8DAqBF,2C,qCAhC0B,wEAKhB,2DAAyB,4BAMV,sDCdpB,MAAMyvB,WAA+B,GAC1C7gC,YACEogC,EACAj4B,EACA0H,EACQ3P,EACAK,EACRyV,GAEAzC,MAAM6sB,EAAej4B,EAAa0H,EAAsBmG,GAJhD,KAAA9V,OAAAA,EACA,KAAAK,MAAAA,EAMJwR,W,0CACJtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC3DA,EAAOwf,WACTngC,KAAKmgC,SAAWxf,EAAOwf,gBAEnBngC,KAAK2J,eAIT4G,S,sGACJ,eAAU,EAAMA,OAAM,cACpBvQ,KAAKP,OAAOY,SAAS,CAAC,cACf,MAMLq7B,S,sGACJ,MAAM2E,QAAkB,EAAM3E,OAAM,WAIpC,OAHI2E,GACFrgC,KAAKP,OAAOY,SAAS,CAAC,aAEjBggC,M,kCAnCED,IAAsB,qL,qCAAtBA,GAAsB,+6B,GAAA,MDhBnC,kCAAY,8CAAY,EAAA7vB,YACtB,sDACE,uDACE,uDAAyB,e,sBAAqB,oBAChD,6CACA,wDACE,4DAAoB,gBAAW,oBACjC,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAmB,oBACjD,sDACF,+CACF,6CACF,2CACA,gEAqCF,yCACA,sB,iCArDkC,8CAGH,yEAGL,kDAGe,wDAC3B,sDAAwB,yEACa,uDAIvC,qD,2LEfA+vB,GCAAC,G,gWCwBN,mCAGE,8HAIA,eACF,oB,4BADE,2E,0BATN,gCACE,wDACE,gEASF,4CACF,2C,kCALoB,wD,uBAMpB,gCACE,mDAAG,e,sBAAwB,oBAC7B,2C,MADK,6ECzBA,MAAMC,GAGXjhC,YAAoBogC,EAAsClgC,GAAtC,KAAAkgC,cAAAA,EAAsC,KAAAlgC,OAAAA,EAEpD6R,W,0CACJtR,KAAKwtB,cAAgBxtB,KAAK2/B,cAAcc,kBAEpCzgC,KAAKwtB,QAAQnqB,OAAS,IACxBrD,KAAKwtB,QAAUxtB,KAAKwtB,QAAQpoB,MAAM,EAAGpF,KAAKwtB,QAAQnqB,OAAS,OAI/Dq9B,eAAeX,GACb//B,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAE6/B,SAAUJ,EAAO/gC,MAG3E2hC,YACE3gC,KAAKP,OAAOY,SAAS,CAAC,iB,kCAlBbmgC,IAAgB,8D,qCAAhBA,GAAgB,gpBDX7B,gCACE,qDACE,qDACE,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDACE,0DAAoB,gB,uBAAsB,oBAC5C,2CACA,uDACE,4DAGE,2CAAS,EAAAG,e,uBAGT,oDACF,6CACF,2CACF,yCACA,uDACE,0DAaA,2DAGF,yCACA,sB,MAnCY,yEAIY,2EAOlB,gGAO6B,uEAaV,0E,yFFnCzB,SAAYL,GACV,kBACA,gBACA,cACA,cACA,gCALF,CAAYA,KAAAA,GAAS,KCArB,SAAYC,GACV,uBACA,mBACA,+BACA,qBACA,6CACA,qBANF,CAAYA,KAAAA,GAAY,KGAjB,MAAeK,I,iUCsBd,yB,sBACA,yB,0BAeI,mCAA8D,eAAY,qB,yBAAhC,mCAAoB,kD,0BAgB9D,mCACE,eACF,qB,yBAFgD,mCAC9C,uF,yDAXV,+BACE,0DACE,4DACE,gEAA4B,e,sBAA6B,oBACzD,kEAGE,oHAA4B,gGAG5B,wEAGF,mDACF,iDACF,+CACA,4DAAwB,gB,uBAAiC,oBAC3D,6C,sCAdkC,iFAI1B,8DAGsB,qEAMJ,uF,yDAjC5B,gCACE,uDACE,0DACE,4DACE,gEAA6B,e,uBAAuC,oBACpE,mEAGE,oHAA6B,gGAG7B,wEACF,mDACF,iDACF,+CACA,4DAAwB,gB,uBAA2C,oBACrE,6CACA,8DAkBA,yDACE,4DACE,8DACE,kEAAkB,gB,uBAAkC,oBACpD,kEAGE,+GAA+B,wGAHjC,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAsC,oBAChE,6CACA,yDACE,4DACE,8DACE,kEAAuC,gB,uBAA0C,oBACjF,kEAGE,uHAAuC,gHAHzC,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAuC,oBACjE,6CACA,yDACE,4DACE,8DACE,kEAA0C,gB,uBAExC,oBACF,kEAGE,8HAA8C,uHAHhD,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAqD,oBAC/E,6CACA,yDACE,4DACE,8DACE,kEAA0B,gB,uBAAqC,oBAC/D,kEAGE,yHAAyC,2GAH3C,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAyC,oBACnE,8CACF,qD,qCAzFqC,6FAI3B,+DAGsB,+DAIJ,iGAER,+DAqBM,wFAKhB,mEAIkB,4FAKmB,iGAKrC,2EAIkB,6FAKsB,wGAOxC,kFAIkB,2GAKM,4FAKxB,sEAIkB,gG,sBAYtB,yB,sBACA,yB,0BAkEI,mCAA2D,eAAY,qB,yBAAhC,mCAAoB,kD,yDA9DrE,gCACE,uDACE,0DACE,4DACE,gEAA2B,e,uBAAsC,oBACjE,kEAGE,4GAA4B,kGAH9B,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAA0C,oBACpE,6CACA,yDACE,4DACE,8DACE,kEAAgC,gB,uBAA2C,oBAC3E,kEAGE,iHAAiC,uGAHnC,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAA+C,oBACzE,6CACA,yDACE,4DACE,8DACE,kEAAqB,gB,uBAA6B,oBAClD,kEAGE,iHAAiC,mGAHnC,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAiC,oBAC3D,6CACA,yDACE,4DACE,8DACE,kEAAmB,gB,uBAAkC,oBACrD,kEAGE,sHAAsC,wGAHxC,oBAMF,iDACF,+CACA,4DAAwB,gB,uBAAsC,oBAChE,6CACA,yDACE,4DACE,8DACE,kEAAmB,gB,uBAAoB,oBACvC,mEAAgC,0GAAmB,sFACjD,wEACF,mDACF,iDACF,+CACA,4DAAwB,gB,uBAAwB,oBAClD,6CACF,oD,qCAhEmC,4FAKzB,6DAIkB,gGAKY,kGAK9B,kEAIkB,qGAKC,oFAKnB,8DAIkB,uFAKD,yFAKjB,mEAIkB,4FAKD,2EACa,qDACR,4DAIJ,+E,sBAYtB,yB,sBACA,yB,0BAkCI,mCACE,eACF,qB,yBAFoD,mCAClD,uF,yDA/BZ,gCACE,uDACE,0DACE,4DACE,gEAAsB,e,uBAAuC,oBAC7D,kEAGE,qHAAqC,6GAHvC,oBAMF,iDACF,+CACA,4DACE,gB,uBACA,4BAAG,gB,uBAAsB,oBACxB,gB,uBACH,oBACF,6CACA,yDACE,4DACE,8DACE,kEAA6B,gB,uBAAwC,oBACrE,mEAGE,8HAAuC,4GAIvC,wEAGF,mDACF,iDACF,+CACA,4DAAwB,gB,uBAA4C,oBACtE,6CACF,oD,qCAlC8B,6FAKpB,wEAKJ,4HACG,4EACF,yGAM8B,+FAI3B,yEAAuC,wCAIjB,yEAMJ,mGChPvB,MAAMC,GAuBXthC,YACUG,EACAE,EACAkhC,EACRp5B,GAHQ,KAAAhI,iBAAAA,EACA,KAAAE,aAAAA,EACA,KAAAkhC,YAAAA,EAzBV,KAAA9jB,gBAAiB,EACjB,KAAA+jB,qBAAsB,EACtB,KAAAC,0BAA2B,EAC3B,KAAAC,2BAA4B,EAE5B,KAAAC,qBAAsB,EACtB,KAAAC,wBAAyB,EACzB,KAAAC,6BAA8B,EAC9B,KAAAC,oCAAqC,EACrC,KAAAC,eAAgB,EAChB,KAAAC,oBAAqB,EACrB,KAAAC,oBAAqB,EAGrB,KAAAC,gBAAkBlB,GAAa1X,OAI/B,KAAA6Y,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,aAAuB,EAQrB5hC,KAAK6hC,aAAe,CAClB,CAAEv/B,KAAMoF,EAAYiJ,EAAE,WAAY4iB,MAAO+M,GAAUwB,QACnD,CAAEx/B,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAO+M,GAAUyB,OACjD,CAAEz/B,KAAMoF,EAAYiJ,EAAE,QAAS4iB,MAAO+M,GAAU0B,MAChD,CAAE1/B,KAAM,OAAQixB,MAAO+M,GAAU2B,MACjC,CAAE3/B,KAAMoF,EAAYiJ,EAAE,iBAAkB4iB,MAAO+M,GAAU4B,gBAE3DliC,KAAKmiC,gBAAkB,CACrB,CAAE7/B,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAOgN,GAAa1X,QACzD,CAAEvmB,KAAMoF,EAAYiJ,EAAE,QAAS4iB,MAAOgN,GAAavN,MACnD,CAAE1wB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAOgN,GAAa6B,YACzD,CAAE9/B,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAa8B,mBACpD,CAAE//B,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAa+B,OACpD,CAAEhgC,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAagC,QAEtDviC,KAAKwiC,sBAAwB,CAC3B,CAAElgC,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAO,MACvC,CAAEjxB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAO,IAC5C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,iBAAkB4iB,MAAO,IAC/C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,iBAAkB4iB,MAAO,IAC/C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,aAAc4iB,MAAO,IAC3C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAO,KAC5C,CAAEjxB,KAAMoF,EAAYiJ,EAAE,eAAgB4iB,MAAO,MAE/CvzB,KAAKyiC,0BAA4B,CAC/B,CAAEngC,KAAMoF,EAAYiJ,EAAE,yBAA0B4iB,OAAO,GACvD,CAAEjxB,KAAMoF,EAAYiJ,EAAE,wBAAyB4iB,OAAO,IAIpDjiB,W,gDACJtR,KAAKghC,+BAAiChhC,KAAKJ,aAAa8iC,8BAExD1iC,KAAKihC,0BACqD,QAAvD,QAAMjhC,KAAKJ,aAAa+iC,sCAA+B,SAE1D3iC,KAAKohC,kCAAoCphC,KAAKJ,aAAagjC,iCAE3D5iC,KAAKqhC,yCACGrhC,KAAKJ,aAAaijC,wCAE1B7iC,KAAKmhC,6BAA+BnhC,KAAKJ,aAAakjC,4BAEtD9iC,KAAKshC,oBAAsBthC,KAAKJ,aAAamjC,6BAC7C/iC,KAAKuhC,yBAA2BvhC,KAAKJ,aAAaojC,kCAElDhjC,KAAKkhC,4BAA8BlhC,KAAK8gC,YAAYmC,qBAEpDjjC,KAAKgd,qBAAuBhd,KAAKJ,aAAaqd,oBAE9Cjd,KAAK+gC,0BAA4B/gC,KAAKJ,aAAasjC,yBAEnDljC,KAAKmjC,YAAcnjC,KAAKJ,aAAawjC,WAErC,MAAM3B,QAAwBzhC,KAAKJ,aAAayjC,qBAChDrjC,KAAKyhC,gBAAqC,MAAnBA,EAA0BlB,GAAa1X,OAAS4Y,EAEvEzhC,KAAKsjC,qBAAuBtjC,KAAKJ,aAAa2jC,uBAG1CC,6B,gDACExjC,KAAKJ,aAAa6jC,+BAA+BzjC,KAAKohC,gCAGxDsC,oC,gDACE1jC,KAAKJ,aAAa+jC,sCACtB3jC,KAAKqhC,uCAIHuC,+B,gDACE5jC,KAAKJ,aAAaikC,0BAA0B7jC,KAAKmhC,wBACvDnhC,KAAKN,iBAAiBQ,KAAK,0BAGvB4jC,qB,gDACE9jC,KAAKJ,aAAamkC,uBAAuB/jC,KAAKkhC,wBAGhD8C,2B,gDACEhkC,KAAKJ,aAAaqkC,4BAA4BjkC,KAAKghC,6BAGrDkD,kC,gDACElkC,KAAKJ,aAAaukC,6BAA6BnkC,KAAKihC,8BAGtDmD,uB,gDACEpkC,KAAKJ,aAAasd,kBAAkBld,KAAKgd,mBAG3CqnB,4B,gDACErkC,KAAKJ,aAAa0kC,uBAAuBtkC,KAAK+gC,qBACpD/gC,KAAKN,iBAAiBQ,KAAK,0BAGvBqkC,kB,gDACEvkC,KAAKJ,aAAa4kC,2BAA2BxkC,KAAKshC,kBAGpDmD,uB,gDACEzkC,KAAKJ,aAAa8kC,gCAAgC1kC,KAAKuhC,uBAGzDoD,Y,gDACE3kC,KAAKJ,aAAaglC,SAAS5kC,KAAKmjC,OACtCphC,OAAO2c,YAAW,IAAM3c,OAAOqM,SAASC,UAAU,QAG9Cw2B,sB,gDACE7kC,KAAKJ,aAAaklC,mBAAmB9kC,KAAKyhC,oBAG5CsD,qB,gDACE/kC,KAAKJ,aAAaolC,kBAAkBhlC,KAAKsjC,oB,kCA/ItCzC,IAAgB,2G,qCAAhBA,GAAgB,6nEDd7B,gCACE,qDACE,qDACE,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDACE,0DAAoB,gB,uBAAsB,oBAC5C,2CACA,kDACF,yCACA,uDACE,uDACE,sDACE,8DAGE,2EAGA,8CACA,iCACA,+DACF,+CACF,6CACF,2CACA,uEA8FA,wDACE,sDACE,8DAGE,2EAGA,8CACA,iCACA,+DACF,+CACF,6CACF,2CACA,uEAqEA,wDACE,sDACE,8DAGE,6EAGA,+CACA,iCACA,+DACF,+CACF,6CACF,2CACA,sEAuCF,yCACA,sB,MA9PY,0EAIY,4EAWhB,mEAGI,yDACA,wDAIK,wDAoGT,kEAGI,yDACA,wDAIK,wDA2ET,mEAGI,0DACA,yDAIK,2D,ogBEjNV,MAAM,GAKXthC,YACYmI,EACA0H,EACAiH,EACFd,EACE3V,GAJA,KAAA8H,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAiH,WAAAA,EACF,KAAAd,WAAAA,EACE,KAAA3V,aAAAA,EATZ,KAAAqlC,WAAqB,EACrB,KAAAC,MAAgB,GAWV5zB,W,0CACJtR,KAAKilC,gBAAkBjlC,KAAKJ,aAAaulC,yBAGrCC,U,0CACJ,IACEplC,KAAKqlC,eAAiBrlC,KAAKqW,WAAWivB,6BAChCtlC,KAAKqlC,eACXrlC,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,oBACxE3Q,KAAKilC,gBAAkBjlC,KAAKJ,aAAaulC,sBACzC,MAAOvmC,GACPoB,KAAKuV,WAAWK,MAAMhX,OAIpB2mC,W,iDACoBvlC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,wBACnB3Q,KAAK0H,YAAYiJ,EAAE,mBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKoP,qBAAqB2I,UAAU,sDAIlCytB,S,iDACoBxlC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKoP,qBAAqB2I,UAAU,qD,yDC3CtC,gCACE,uDAA4B,e,sBAAsC,oBAClE,qDAAG,e,sBAAkC,oBACrC,0DACE,0DACE,yDACA,gB,uBACF,oBACA,0DACE,yDACA,gB,uBACF,oBACA,0DACE,yDACA,gB,uBACF,oBACA,0DACE,yDACA,gB,uBACF,oBACA,0DACE,yDACA,gB,uBACF,oBACA,0DACE,yDACA,gB,uBACF,oBACF,+CACA,yDAA4B,gBAAiB,oBAC7C,+DAA6D,oGAC3D,yDAAG,gB,uBAA8B,oBACnC,+CACA,kEAIE,mGAKA,+DAAoC,gB,uBAA6B,oBACjE,uDAKF,+CACF,sD,4DAhD8B,2FACzB,uFAIC,uHAIA,uHAIA,uHAIA,oHAIA,uHAIA,sHAGwB,wDAEvB,oFAOH,wDAA+B,iCAIzB,sDAA8B,mFAGlC,wD,yDAKN,gCACE,uDAA4B,e,sBAAmC,oBAC/D,wDAAuB,e,sBAAyC,oBAChE,8DAA6D,kGAC3D,yDAAG,gB,uBAA4B,oBACjC,+CACF,sD,MAL8B,uFACL,6FAElB,kF,kCD3DE,IAAgB,oI,qCAAhB,KEMN,MAAM0tB,WAAyB,GAGpClmC,YACEmI,EACA0H,EACAiH,EACAzW,EACA2V,EACQmwB,GAER5yB,MAAMpL,EAAa0H,EAAsBiH,EAAYd,EAAY3V,GAFzD,KAAA8lC,aAAAA,EAKR,MAAMC,EAAW3lC,KAAK0lC,aAAajzB,UAAUzS,KAAKklC,MAAO,KACzDllC,KAAK4lC,YAAcl+B,EAAYiJ,EAAE,eAAgBg1B,GAC7C3lC,KAAK4lC,YAAYn/B,QAAQ,YAAc,IACzCzG,KAAK4lC,YAAc5lC,KAAK4lC,YAAYlhC,QAAQ,UAAWihC,K,kCAjBhDF,IAAgB,4K,qCAAhBA,GAAgB,swBDf7B,gCACE,qDACE,qDACE,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDACE,0DAAoB,gB,uBAAgC,oBACtD,2CACA,kDACF,yCACA,uDACE,uDACE,uEAkDA,sEAOF,2CACF,yCACA,sB,MArEY,yEAIY,qFAML,wDAkDA,wD,8EEhEPI,G,aAAZ,SAAYA,GACV,yBACA,iBACA,yCACA,2CACA,uCACA,qCACA,uCACA,mCACA,mCACA,qCACA,wCACA,oCACA,kCACA,8BACA,wCACA,sCACA,kBACA,sCACA,wCACA,4CACA,0CArBF,CAAYA,KAAAA,GAAU,K,eCGf,MAAMC,GAcXvmC,cAPiB,KAAAwmC,WAAa,IAAIC,GAAA,EACjB,KAAAC,SAAW,IAAID,GAAA,EACf,KAAAE,UAAY,IAAIF,GAAA,EAChB,KAAAG,QAAU,IAAIH,GAAA,EACd,KAAAI,SAAW,IAAIJ,GAAA,EAI9BhmC,KAAKqmC,UAAYrmC,KAAK+lC,WAAWO,eACjCtmC,KAAKumC,QAAUvmC,KAAKimC,SAASK,eAC7BtmC,KAAKwmC,SAAWxmC,KAAKkmC,UAAUI,eAC/BtmC,KAAKymC,OAASzmC,KAAKmmC,QAAQG,eAC3BtmC,KAAK0mC,QAAU1mC,KAAKmmC,QAAQG,eAG9B/M,OACEv5B,KAAKmmC,QAAQQ,OAGfC,QACE5mC,KAAKomC,SAASO,OAGhBn6B,MAAMq6B,GACJ7mC,KAAK8mC,WAAaD,EAClB7mC,KAAKimC,SAASU,KAAKE,GAGrBE,SACE/mC,KAAKkmC,UAAUS,KAAK3mC,KAAK8mC,YAG3BE,QAAQh2B,GACNhR,KAAK+lC,WAAWY,KAAK31B,GAGvBi2B,kBACE,OAAOjnC,KAAKwmC,SAASxlC,MAAK,EAAAumB,GAAA,MAAS2f,a,4CCzBhC,MAAMC,GAWX5nC,YACU6nC,EACAC,EACAr2B,EACAs2B,EACDC,GAJC,KAAAH,aAAAA,EACA,KAAAC,GAAAA,EACA,KAAAr2B,GAAAA,EACA,KAAAs2B,iBAAAA,EACD,KAAAC,SAAAA,EAGTC,kBACExnC,KAAKynC,mBAAmBznC,KAAK0nC,oBACM,MAA/B1nC,KAAK2nC,wBACP3nC,KAAK2nC,uBAAuB3nC,KAAK4nC,aAAaC,UAEhD7nC,KAAKqnC,GAAGS,gBAER9nC,KAAKunC,SAASP,QAAQhnC,KAAKgR,GAAGE,eAC9BlR,KAAK+nC,UAAY/nC,KAAKsnC,iBAAiBh8B,OACrCtL,KAAKgR,GAAGE,cAAcoiB,cAAc,kBAEuB,MAAzDtzB,KAAKgR,GAAGE,cAAcoiB,cAAc,mBACtCtzB,KAAK+nC,UAAUC,qCAInBP,mBAAmBQ,GACjB,MAAMC,EAAmBloC,KAAKonC,aAAae,wBAAwBF,GAEnEjoC,KAAKooC,gBAAgBtR,QACrB92B,KAAK4nC,aAAe5nC,KAAKooC,gBAAgBC,gBAAgBH,GAG3DtmC,cACM5B,KAAK4nC,cACP5nC,KAAK4nC,aAAaU,UAEpBtoC,KAAK+nC,UAAUO,UAGjB97B,QACExM,KAAKunC,SAAS/6B,QAGhB+7B,WACE,MAAMC,EAAcxoC,KAAKgR,GAAGE,cAAcoiB,cAAc,kBACxDkV,MAAAA,GAAAA,EAAax2B,S,kCAvDJm1B,IAAqB,gM,qCAArBA,GAAqB,kD,GAAA,K,sBAGG,EAAAsB,kB,4JALxB,4E,kBClBN,MAAMC,GACXnpC,YAAoBopC,EAAmCC,GAAnC,KAAAD,gBAAAA,EAAmC,KAAAC,kBAAAA,EAGvD9V,IAAIrR,EAAYonB,EAAqBC,G,MACnC,OAAwC,QAAjC,EAAA9oC,KAAK4oC,kBAAkB9V,IAAIrR,UAAM,QAAIzhB,KAAK2oC,gBAAgB7V,IAASrR,EAAOonB,I,2SCU9E,MAAME,GAAb,cAEE,KAAAC,qBAA+B,GAI1B,MAAMC,GAOX1pC,YACU2pC,EACAC,EACAC,GAFA,KAAAF,yBAAAA,EACA,KAAAC,eAAAA,EACA,KAAAC,SAAAA,EATA,KAAAC,UAAmD,GAIrD,KAAAC,iBAA6D,IAAIniC,IAOvEoC,SAASmI,iBAAiB,SAAUxQ,IAChB,WAAdA,EAAMoT,KAAoBtU,KAAKupC,WAAa,GAC9CvpC,KAAKwpC,SAAS3B,SAASr7B,WAKzB+8B,iBACF,OAAOvpC,KAAKqpC,UAAUhmC,OAGZmmC,eACV,OAAOxpC,KAAKqpC,UAAUrpC,KAAKupC,WAAa,GAGpCE,YACJxB,EACAyB,EACA/B,EAAiD,M,0CAEjD,MAAOJ,EAAUoC,GAAqB3pC,KAAK4pC,aAAa3B,EAAe,MAAM,GAO7E,OANA0B,EAAkB9B,SAASF,uBAAyBA,EAEpD+B,EAAiBG,OAAOF,EAAkBG,gBAEpCvC,EAASlB,UAAUrlC,MAAK,EAAAumB,GAAA,MAAS2f,YAEhC,CAACK,EAAUoC,EAAkB9B,SAASD,aAAaC,aAG5Dtb,KAAK0b,EAA0B8B,G,MAC7B,IAAiC,QAA3B,EAAAA,MAAAA,OAAM,EAANA,EAAQf,2BAAmB,YAAchpC,KAAKupC,WAAa,EAC/D,OAGF,MAAOhC,EAAUyC,GAAKhqC,KAAK4pC,aAAa3B,EAAe8B,GAAQ,GAE/D,OAAOxC,EAGT0C,iCACEhC,EACAiB,GAEAlpC,KAAKspC,iBAAiB9hC,IAAIygC,EAAeiB,GAG3Cf,wBAA2BF,GACzB,OAAIjoC,KAAKspC,iBAAiB1T,IAAIqS,GACrBjoC,KAAKspC,iBAAiBxW,IAAImV,GAAeE,wBAAwBF,GAGnEjoC,KAAKkpC,yBAAyBf,wBAAwBF,GAGrD2B,aACR3B,EACA8B,EACAG,GAEA,MAAO3C,EAAUK,GAAgB5nC,KAAKmqC,qBAAqBJ,GAG3D,GAFAnC,EAAaC,SAASH,mBAAqBO,EAEvCiC,EAAa,CACflqC,KAAKmpC,eAAeiB,WAAWxC,EAAakC,UAC5C,MAAMO,EAAWzC,EAAakC,SAAkCQ,UAAU,GAC1E/gC,SAASuE,KAAKC,YAAYs8B,GAmB5B,OAhBA9C,EAASf,SAASxlC,MAAK,EAAAumB,GAAA,MAASlmB,WAAU,KACpC6oC,GACFlqC,KAAKmpC,eAAeoB,WAAW3C,EAAakC,UAE9ClC,EAAaU,UAEbtoC,KAAKqpC,UAAUmB,MACXxqC,KAAKupC,WAAa,GACpBvpC,KAAKwpC,SAAS3B,SAASU,cAI3BvoC,KAAKyqC,cAAclD,GAEnBvnC,KAAKqpC,UAAUv0B,KAAK8yB,GAEb,CAACL,EAAUK,GAGV6C,cAAclD,GACtB,IAAImD,EAAwB,KAG5BnD,EAASlB,UAAUrlC,MAAK,EAAAumB,GAAA,MAASlmB,WAAW2P,IAC1CzH,SAASuE,KAAK6D,UAAUC,IAAI,cAE5B,MAAM+4B,EAAuB35B,EAAGsiB,cAAc,UACxCsX,EAAWD,EAAQrX,cAAc,iBAEvCoX,EAAWnhC,SAASC,cAAc,OAClCkhC,EAASG,UAAY,sBACrBH,EAASvL,MAAM2L,OAAS,GAAG9qC,KAAKupC,gBAChCoB,EAAQI,QAAQL,GAEhBE,EAASl5B,iBAAiB,SAAU9S,IAClCA,EAAEosC,qBAEJJ,EAASzL,MAAM2L,OAAS,GAAG9qC,KAAKupC,gBAEhC,MAAM0B,EAASlmC,MAAM9B,KACnB+N,EAAGQ,iBAAiB,oDAEtB,IAAK,MAAM05B,KAAgBD,EACzBC,EAAax5B,iBAAiB,SAAUxQ,IACtCqmC,EAAS/6B,cAMf+6B,EAAShB,QAAQvlC,MAAK,EAAAumB,GAAA,MAASlmB,WAAU,KACvCkmC,EAASR,SAEe,IAApB/mC,KAAKupC,YACPhgC,SAASuE,KAAK6D,UAAU3F,OAAO,iBAK3Bm+B,qBACRJ,GAEA,MAAMxC,EAAW,IAAIzB,GAEf7gC,EAAM,IAAIkmC,QAChBlmC,EAAIuC,IAAIuhC,GAAagB,GACrB9kC,EAAIuC,IAAIs+B,GAAUyB,GAMlB,MAAO,CAACA,EAHNvnC,KAAKkpC,yBAAyBf,wBAAwBhB,IAClB77B,OAAO,IAAIo9B,GAAc1oC,KAAKopC,SAAUnkC,M,kCAvJrEgkC,IAAY,sG,wCAAZA,GAAY,QAAZA,GAAY,O,2SCZlB,MAAM,GAMX1pC,YACUgoC,EACAnuB,EACAzZ,EACAC,GAHA,KAAA2nC,SAAAA,EACA,KAAAnuB,cAAAA,EACA,KAAAzZ,oBAAAA,EACA,KAAAC,aAAAA,EATV,KAAAga,IAAM,GACN,KAAAwxB,SAAU,EACV,KAAAC,qBAAsB,EACtB,KAAAC,yBAA0B,EASpBh6B,W,0CACJtR,KAAKsrC,wBAA0BtrC,KAAKqrC,4BAC1BrrC,KAAKL,oBAAoBie,0BAGrC2tB,mBACEvrC,KAAKorC,SAAWprC,KAAKorC,QAGjB76B,S,0CACAvO,EAAMmS,mBAAmBnU,KAAK4Z,MAChC5Z,KAAKunC,SAAS/6B,OAAM,GAGtB,MAAM4N,QAAYpa,KAAKJ,aAAaya,aAC9BC,QAAsBta,KAAKJ,aAAa2a,mBACxCvH,QAAchT,KAAKJ,aAAa8d,WAChC5B,QAAe9b,KAAKoZ,cAAc2C,WAAW/b,KAAK4Z,IAAK5G,EAAOoH,EAAKE,GACnEhG,QAAYtU,KAAKoZ,cAAcmD,SAC/BivB,QAAwBxrC,KAAKoZ,cAAc6C,QAAQ3H,EAAIA,IAAKwH,GAClE,GAAI9b,KAAKqrC,oBAAqB,CAC5B,MAAMI,QAAezrC,KAAKoZ,cAAc6C,QAAQjc,KAAK4Z,WAC/C5Z,KAAKJ,aAAa8rC,gBAAgBD,EAAOjzB,uBACzCxY,KAAKJ,aAAaoc,yBAAyBwvB,cAE3CxrC,KAAKJ,aAAa+rC,yBAAyBH,EAAgBhzB,iBAGnExY,KAAKunC,SAAS/6B,OAAM,O,yDCVhB,gCACE,gEACE,kEAIE,wHAJF,oBAMA,8DAAM,e,sBAA0C,oBAClD,kDACF,iD,qCAJM,mEAEI,+F,kCDvCL,IAAe,4G,qCAAf,K,8DEJN,MAAMo/B,WAAwB,I,oFAAxBA,MAAe,GAAfA,K,wCAAAA,GAAe,8hCDP5B,+BACE,qDACE,0DAAkC,8CAAY,EAAAr7B,YAC5C,yDACE,yDACE,gB,uBACF,oBACA,6DACE,+DACE,iEACE,mEACE,uEAAiB,gB,uBAAkB,oBACnC,wEAKE,+DALF,oBASF,uDACA,oEACE,yEAME,2CAAS,EAAAg7B,sB,uBAGT,iEAKF,yDACF,uDACF,qDACF,mDACF,iDACA,kEAWF,+CACA,4DACE,iEACE,8DAAM,gB,uBAAiB,oBACzB,iDACA,iEACE,gB,uBACF,oBACF,+CACF,6CACF,2CACF,yCACA,sB,MA5DU,iHAMuB,yEAGf,iFAGA,iCAWA,wGAEA,2CAKE,8FAOW,oEAcf,uEAGN,0G,4gBE3CH,MAAM,GAuBXhsC,YACU68B,EACAzV,EACAjf,GAFA,KAAA00B,YAAAA,EACA,KAAAzV,cAAAA,EACA,KAAAjf,YAAAA,EAnBV,KAAAmkC,KAAO7rC,KAAKo8B,YAAYG,MAAM,CAC5BuP,aAAc,CAAC,MACfC,OAAQ/rC,KAAKo8B,YAAYG,MAAM,CAC7ByP,MAAO,CAAC,MACRC,QAAS,CAAC,UAVVz8B,iBACF,OAAOxP,KAAK6rC,KAAK/Y,IAAI,gBAAgBS,QAAU,GAA2B2Y,aA2BtE56B,W,0CACJ,SAAUtR,KAAK2mB,cAAciW,oBAAoBf,GAAWsQ,qBAAsB,CAChF,MAAMC,QAA2BpsC,KAAK2mB,cAAc0lB,OAAOxQ,GAAWsQ,qBAEtEnsC,KAAKosC,mBAAqBA,EAAmB,GAC7CpsC,KAAKssC,wBAA0BxmC,KAAKmH,MAAMjN,KAAKosC,mBAAmB1hC,KAAKuhC,QAAU,IACjFjsC,KAAKusC,0BAA4BvsC,KAAKosC,mBAAmB1hC,KAAKuhC,QAAU,GAExEjsC,KAAKwsC,cAAgBxsC,KAAKwsC,cAAcvrC,QACrC0P,GACCA,EAAE4iB,OAASvzB,KAAKosC,mBAAmB1hC,KAAKuhC,UACvCt7B,EAAE4iB,MAAQ,GAAK5iB,EAAE4iB,QAAU,GAA2B2Y,eAC5C,MAAXv7B,EAAE4iB,QAENvzB,KAAKysC,kBAGPzsC,KAAK6rC,KAAK5N,aAAa58B,WAAiBkyB,GAAU,mCAChDvzB,KAAKs+B,SAASt+B,KAAK0sC,gBAAgBnZ,SAIrCvzB,KAAK6rC,KAAK/Y,IAAI,gBAAgBmL,aAAa58B,WAAWkyB,IACpD,GAAIA,IAAU,GAA2B2Y,aACvC,OAGF,MAAMS,EAAU7mC,KAAK8mC,IAAI5sC,KAAK6rC,KAAKtY,MAAMuY,aAAc,GACvD9rC,KAAK6rC,KAAKgB,WAAW,CACnBd,OAAQ,CACNC,MAAOlmC,KAAKmH,MAAM0/B,EAAU,IAC5BV,QAASU,EAAU,YAM3Bn3B,cACExV,KAAKwsC,cAAc13B,KAAK,CACtBxS,KAAMtC,KAAK0H,YAAYiJ,EAAE,UACzB4iB,MAAO,GAA2B2Y,eAItCQ,gBAAgBnZ,GACd,OAAIA,EAAMuY,eAAiB,GAA2BI,aAC7C3Y,EAAMuY,aAGa,GAArBvY,EAAMwY,OAAOC,MAAazY,EAAMwY,OAAOE,QAGhD9N,WAAW5K,GACI,MAATA,IAIAvzB,KAAKwsC,cAAcM,OAAOpjB,GAAMA,EAAE6J,QAAUA,IAC9CvzB,KAAK6rC,KAAKxO,SAAS,CACjByO,aAAc,GAA2BI,aACzCH,OAAQ,CACNC,MAAOlmC,KAAKmH,MAAMsmB,EAAQ,IAC1B0Y,QAAS1Y,EAAQ,MAMvBvzB,KAAK6rC,KAAKgB,WAAW,CACnBf,aAAcvY,KAIlB6K,iBAAiBE,GACft+B,KAAKs+B,SAAWA,EAIlBC,kBAAkBwO,IAGlBvO,iBAAkBC,IAElBuO,SAASC,G,QACP,OAAIjtC,KAAKosC,qBAAmD,QAA7B,EAAuB,QAAvB,EAAApsC,KAAKosC,0BAAkB,eAAE1hC,YAAI,eAAEuhC,SAAUgB,EAAQ1Z,MACvE,CAAE2Z,aAAa,GAGjB,KAGTC,0BAA0B9O,GACxBr+B,KAAKysC,gBAAkBpO,G,0BCzI3B,uCACE,e,sBACF,qB,kCADE,iK,0BAYI,kCAA4D,eAAY,qB,yBAAhC,mCAAoB,kD,uBAGhE,+BACE,wDACE,0DACE,4DACE,gEAAgC,e,uBAAoB,oBACpD,6DAQF,iDACF,+CACA,4DACE,8DACE,kEAAgC,gB,uBAAsB,oBACtD,6DASF,iDACF,+CACF,6CACF,4C,MA1BwC,yEAaA,6EDZjC,GAAA6N,cAAgB,I,kCALZ,IAA0B,6F,qCAA1B,GAA0B,8EEKhC,MAAMkB,WAAmC,I,oFAAnCA,MAA0B,GAA1BA,K,wCAAAA,GAA0B,0EAb1B,CACT,CACEvO,QAAS,EAAAC,kBACTC,OAAO,EACPC,YAAaoO,IAEf,CACEvO,QAAS,EAAAwO,cACTtO,OAAO,EACPC,YAAaoO,MAEhB,4vBDnBH,0CAIA,qDACE,qDACE,yDAA0B,e,sBAA2B,oBACrD,2DAME,iEACF,6CACF,2CACA,2DA+BF,yCACA,sB,MAhD0B,6CAIrB,sDAEyB,+EAOF,6DAGS,yD,kqBE6B3B,mCAAkE,eAAY,qB,yBAAhC,mCAAoB,kD,yDAOtE,gCACE,8DAAuB,e,sBAAmC,oBAC1D,8DAGE,4GAA4B,8FAH9B,oBAMF,8C,qCAPyB,uFAKrB,0D,yDAGJ,gCACE,8DAAkC,e,sBAA0C,oBAC5E,8DAGE,uHAAuC,gHAHzC,oBAOF,8C,qCARoC,8FAKhC,2DAAuB,0C,yDAwC3B,mCAKE,0GAGA,2DAAsB,e,sBAAmC,oBACzD,oDACF,8C,MAFwB,wFC5F9B,MAAME,GAAW,CACf,CAACzH,GAAW0H,iBACV,+GACF,CAAC1H,GAAW2H,kBACV,qFACF,CAAC3H,GAAW4H,gBACV,qGACF,CAAC5H,GAAW6H,eACV,qFACF,CAAC7H,GAAW8H,kBACV,+GACF,CAAC9H,GAAW+H,iBAAkB,qDAOzB,MAAMC,GAeXtuC,YACU6P,EACA1H,EACAlI,EACDE,EACCD,EACA4P,EACA+J,EACAxZ,EACA01B,EACA8R,EACAznC,GAVA,KAAAyP,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAAlI,oBAAAA,EACD,KAAAE,iBAAAA,EACC,KAAAD,OAAAA,EACA,KAAA4P,mBAAAA,EACA,KAAA+J,cAAAA,EACA,KAAAxZ,aAAAA,EACA,KAAA01B,kBAAAA,EACA,KAAA8R,aAAAA,EACA,KAAAznC,oBAAAA,EApBV,KAAAia,IAAe,KAEf,KAAAk0B,WAAqB,EACrB,KAAAtvB,6BAA8B,EAC9B,KAAAuvB,qBAA+B,KAC/B,KAAAC,sBAAuB,EAEvB,KAAAlC,aAA4B,IAAI,EAAA/N,YAAY,MAgBtCzsB,W,gDACJ,MAAM28B,GACHjuC,KAAKoP,qBAAqBomB,cAAgBx1B,KAAKoP,qBAAqBqmB,WAEvEz1B,KAAKwsC,cAAgB,CACnB,CAAElqC,KAAMtC,KAAK0H,YAAYiJ,EAAE,eAAgB4iB,MAAO,GAClD,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,aAAc4iB,MAAO,GAChD,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,eAAgB4iB,MAAO,GAClD,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,kBAAmB4iB,MAAO,IACrD,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,iBAAkB4iB,MAAO,IACpD,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,WAAY4iB,MAAO,IAC9C,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,aAAc4iB,MAAO,MAK9C0a,GACFjuC,KAAKwsC,cAAc13B,KAAK,CAAExS,KAAMtC,KAAK0H,YAAYiJ,EAAE,YAAa4iB,OAAQ,IAG1EvzB,KAAKwsC,cAAc13B,KAAK,CAAExS,KAAMtC,KAAK0H,YAAYiJ,EAAE,aAAc4iB,OAAQ,IACzEvzB,KAAKwsC,cAAc13B,KAAK,CAAExS,KAAMtC,KAAK0H,YAAYiJ,EAAE,SAAU4iB,MAAO,OAEpEvzB,KAAKkuC,oBAAsB,CACzB,CAAE5rC,KAAMtC,KAAK0H,YAAYiJ,EAAE,QAAS4iB,MAAO,QAC3C,CAAEjxB,KAAMtC,KAAK0H,YAAYiJ,EAAE,UAAW4iB,MAAO,WAG/C,IAAIne,QAAgBpV,KAAKR,oBAAoBktC,kBAC9B,MAAXt3B,KACe,IAAbA,GAAmB64B,IACrB74B,GAAW,GAEbpV,KAAK8rC,aAAazO,SAASjoB,IAE7BpV,KAAK+tC,qBAAuB/tC,KAAK8rC,aAAavY,MAC9CvzB,KAAK8rC,aAAa7N,aAAa58B,WAAiBkyB,GAAU,yCAClDvzB,KAAKmuC,iBAAiB5a,QAG9B,MAAM6a,QAAepuC,KAAKJ,aAAayuC,wBACvCruC,KAAKsuB,mBAA+B,MAAV8f,EAAiB,OAASA,EAEpD,MAAM3zB,QAAeza,KAAKR,oBAAoB2d,eAC9Cnd,KAAK4Z,IAAMa,EAAO,IAAMA,EAAO,GAE/Bza,KAAKod,wBAA0Bpd,KAAKoP,qBAAqBgO,oBACzDpd,KAAK8tC,gBAAkB9tC,KAAKR,oBAAoB6d,qBAChDrd,KAAKwe,4BACuD,QAAzD,QAAMxe,KAAKJ,aAAa6e,wCAAiC,SAC5Dze,KAAKguC,6BAA+BhuC,KAAKL,oBAAoBie,0BAGzDuwB,iBAAiBG,G,0CACrB,GAAgB,MAAZA,EAAkB,CAQpB,WAPwBtuC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,oBACnB,KACA3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB,YAIA,YADA3Q,KAAK8rC,aAAazO,SAASr9B,KAAK+tC,sBAK/B/tC,KAAK8rC,aAAayC,OAKvBvuC,KAAK+tC,qBAAuB/tC,KAAK8rC,aAAavY,YAExCvzB,KAAKR,oBAAoBgvC,uBAC7BxuC,KAAK8rC,aAAavY,MAClBvzB,KAAKsuB,oBAE0B,MAA7BtuB,KAAK+tC,sBACP/tC,KAAKN,iBAAiBQ,KAAK,oBAX3BF,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,2BAepE89B,uBAAuBH,G,0CAC3B,GAAiB,WAAbA,EAAuB,CAQzB,WAPwBtuC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,kCACnB3Q,KAAK0H,YAAYiJ,EAAE,uCACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB,YASA,YANA3Q,KAAKkuC,oBAAoB7mC,SAAQ,CAACqnC,EAAaprC,KACzCorC,EAAOnb,QAAUvzB,KAAKsuB,qBACxBtuB,KAAK2uC,4BAA4Bz9B,cAAcqiB,MAC7CjwB,EAAI,KAAOtD,KAAKsuB,uBAOrBtuB,KAAK8rC,aAAayC,OAKvBvuC,KAAKsuB,mBAAqBggB,QACpBtuC,KAAKR,oBAAoBgvC,uBAC7BxuC,KAAK8rC,aAAavY,MAClBvzB,KAAKsuB,qBAPLtuB,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,2BAWpEi+B,Y,0CACJ,GAAI5uC,KAAK4Z,IAAK,CACZ,MAAMi1B,EAAM7uC,KAAKonC,aAAa7a,KAAKqf,GAAiB,CAAE5C,qBAAqB,IAE3E,GAAW,MAAP6F,EAEF,YADA7uC,KAAK4Z,KAAM,GAIb5Z,KAAK4Z,UAAYi1B,EAAI5H,6BAEfjnC,KAAKoZ,cAAc01B,6BACnB9uC,KAAKR,oBAAoBs3B,WAI7BiY,kB,0CACJ,GAAI/uC,KAAK8tC,WAAa9tC,KAAKod,kBAAmB,CAC5C,IAAI4xB,EACJ,IACEA,QAAgBplC,EAAWqlC,kBAAkB,CAAEtgC,YAAa,CAAC,qBAC7D,MAAO/P,GAIP,GAFAswC,QAAQt5B,MAAMhX,GAEVoB,KAAKoP,qBAAqBomB,aAAex1B,KAAKs1B,kBAAkBnB,UAAUpyB,QAQ5E,aAPM/B,KAAKoP,qBAAqB+M,WAC9Bnc,KAAK0H,YAAYiJ,EAAE,uCACnB3Q,KAAK0H,YAAYiJ,EAAE,wCACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,WAEF3Q,KAAK8tC,WAAY,GAKrB,IAAKkB,EAQH,aAPMhvC,KAAKoP,qBAAqB+M,WAC9Bnc,KAAK0H,YAAYiJ,EAAE,qCACnB3Q,KAAK0H,YAAYiJ,EAAE,sCACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,WAEF3Q,KAAK8tC,WAAY,GAInB,MAAMqB,EAAY,UAAU,CAC1BtwB,YAAY,EACZC,gBAAgB,EAChBswB,UAAWpvC,KAAK0H,YAAYiJ,EAAE,gBAC9B6mB,KAAMx3B,KAAK0H,YAAYiJ,EAAE,oBACzB8Z,KAAM,OACN4kB,SAAU,iEACVrwB,kBAAkB,EAClBC,iBAAkBjf,KAAK0H,YAAYiJ,EAAE,UACrCuO,mBAAmB,EACnBowB,mBAAmB,UAGftvC,KAAKJ,aAAa2vC,gCAA+B,SACjDvvC,KAAKoZ,cAAco2B,kBAEnB/wC,QAAQgxC,KAAK,CACjBN,EAAUxwC,MAAYkoC,GAAW,mCAC3BA,EAAO6I,UAAY,4BACrB1vC,KAAK8tC,WAAY,QACX9tC,KAAKJ,aAAa2vC,+BAA+B,YAG3DvvC,KAAKoP,qBACFugC,wBACAhxC,MAAMkoC,IACL7mC,KAAK8tC,UAAYjH,EAEjB,cACuB,IAAnB7mC,KAAK8tC,WACP9tC,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,6BACnB3Q,KAAK0H,YAAYiJ,EAAE,gCAIxBi/B,OAAOhxC,IAENoB,KAAK8tC,WAAY,kBAIjB9tC,KAAKJ,aAAaiwC,mBAAmB,YACrC7vC,KAAKJ,aAAakd,oBAAmB,MAIzCgzB,6B,gDACE9vC,KAAKJ,aAAamwC,+BAA+B/vC,KAAKwe,gCAGxDwxB,O,gDACEhwC,KAAKR,oBAAoBwwC,MAAK,MAGhC9zB,S,iDACoBlc,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKN,iBAAiBQ,KAAK,aAIzB+vC,iB,iDACoBjwC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,oCACnB3Q,KAAK0H,YAAYiJ,EAAE,wBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB/G,EAAWwwB,aAAa,sEAItB8V,U,iDACoBlwC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,4BACnB3Q,KAAK0H,YAAYiJ,EAAE,gBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB/G,EAAWwwB,aAAa,+DAItB+V,Q,iDACoBnwC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,wBACnB3Q,KAAK0H,YAAYiJ,EAAE,YACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB/G,EAAWwwB,aAAa,kEAItBtqB,W,0CACJ,MAAM1P,EAAMJ,KAAKqP,mBAAmBwI,iBACpCjO,EAAWwwB,aAAah6B,MAG1BgwC,SACExmC,EAAWwwB,aAAa,mDAG1BiW,SACErwC,KAAKP,OAAOY,SAAS,CAAC,YAGxBiwC,OACE1mC,EAAWwwB,aAAa,+BAG1BmW,QACE,MAAMC,GAAO,IAAIzjC,MAAO0jC,cAClBC,EAAcnnC,SAASonC,eAC3B3wC,KAAK0H,YAAYiJ,EAAE,WAAa,KAAO/G,EAAWgnC,yBAE9CjyB,EAAMpV,SAASC,cAAc,OACnCmV,EAAIC,UACF,0KAEA4xB,EACA,OACF7xB,EAAI5Q,YAAY2iC,GAEhB,UAAU,CACR7xB,YAAY,EACZC,gBAAgB,EAChBC,KAAMJ,EACNO,mBAAmB,EACnBF,kBAAkB,EAClBC,iBAAkBjf,KAAK0H,YAAYiJ,EAAE,WAInCkgC,c,0CACJ,MAAMA,QAAoB7wC,KAAKoZ,cAAc03B,qBACrC9wC,KAAKJ,aAAaqoB,aAEpByB,EAAIngB,SAASC,cAAc,KACjCkgB,EAAEqnB,UAAY/wC,KAAK0H,YAAYiJ,EAAE,2BAA6B,IAC9D,MAAMgC,EAAKpJ,SAASC,cAAc,KAClCmJ,EAAGo+B,UAAYF,EAAYxrC,KAAK,KAChC,MAAMsZ,EAAMpV,SAASC,cAAc,OACnCmV,EAAI5Q,YAAY2b,GAChB/K,EAAI5Q,YAAY4E,UAEK,UAAU,CAC7BkM,YAAY,EACZC,gBAAgB,EAChBC,KAAMJ,EACNK,kBAAkB,EAClBC,iBAAkBjf,KAAK0H,YAAYiJ,EAAE,SACrCuO,mBAAmB,EACnB8xB,kBAAmBhxC,KAAK0H,YAAYiJ,EAAE,gBAG7B4iB,OACTvzB,KAAKoP,qBAAqB2I,UAAU,6DAIxCk5B,OACE,MAAM3gB,EAAatwB,KAAKoP,qBAAqB4f,YAC7CplB,EAAWwwB,aAAckT,GAAiBhd,K,kCA9WjCud,IAAiB,0S,qCAAjBA,GAAiB,qD,GAAA,K,sBACmB,EAAAqD,Y,m1DD1CjD,gCACE,qDACE,wDACF,0CACA,oDACE,wDAAoB,gB,uBAAuB,oBAC7C,2CACA,kDACF,yCACA,uDACE,uDACE,wDAAuB,gB,uBAAqB,oBAC5C,yDACE,yDACE,6DAAsB,gB,uBAAsB,oBAC5C,sDACF,+CACA,0DACE,6DAAsB,gB,uBAAmB,oBACzC,sDACF,+CACA,0DACE,6DAAsB,gB,uBAA8B,oBACpD,sDACF,+CACF,6CACF,2CACA,uDACE,wDAAuB,gB,uBAAuB,oBAC9C,yDACE,gFAKA,+CACA,4DACE,gEAAgC,gB,uBAAiC,oBACjE,oEAKE,oDAAiB,EAAAzC,uBAAA,MAEjB,sEACF,iDACF,+CACA,4DACE,gEAAiB,gB,uBAA4B,oBAC7C,gEAAgC,4CAAU,EAAAG,cAAV,CAAsB,+CAAtD,oBACF,+CACA,+DASA,+DAUA,+DAKE,2CAAS,EAAAoB,UAET,6DAAsB,gB,uBAAsB,oBAC5C,sDACF,gDACA,iEAKE,2CAAS,EAAAE,aAET,+DAAsB,iB,wBAA2B,oBACjD,wDACF,gDACF,8CACF,4CACA,yDACE,0DAAuB,iB,wBAAsB,oBAC7C,2DACE,4DACE,+DACE,kEACE,6DACF,oDACA,mEACG,6BAAG,iB,wBAAgC,oBAAI,oBAE5C,kDACA,8DAAM,0BAA0E,oBAClF,gDACA,oEAWA,iEAKE,2CAAS,EAAAW,iBAET,+DAAsB,iB,wBAAgC,oBACtD,wDACF,gDACA,iEAKE,2CAAS,EAAA30B,YAET,+DAAsB,iB,wBAAqB,oBAC3C,wDACF,gDACF,8CACF,4CACA,yDACE,0DAAuB,iB,wBAAoB,oBAC3C,2DACE,iEAKE,2CAAS,EAAAk0B,YAET,+DAAsB,iB,wBAA0B,oBAChD,wDACF,gDACA,iEAKE,2CAAS,EAAAC,YAET,+DAAsB,iB,wBAA0B,oBAChD,wDACF,gDACA,iEAKE,2CAAS,EAAAvgC,cAET,+DAAsB,iB,wBAA0B,oBAChD,wDACF,gDACF,8CACF,4CACA,yDACE,0DAAuB,iB,wBAAoB,oBAC3C,2DACE,4DACE,+DAAsB,iB,wBAAsB,oBAC5C,wDACF,gDACA,iEAKE,2CAAS,EAAAygC,WAET,+DAAsB,iB,wBAAoB,oBAC1C,wDACF,gDACA,iEAKE,2CAAS,EAAAJ,WAET,+DAAsB,iB,wBAAuB,oBAC7C,wDACF,gDACA,iEAKE,2CAAS,EAAAG,UAET,+DAAsB,iB,wBAA2B,oBACjD,wDACF,gDACA,iEAKE,2CAAS,EAAAW,UAET,+DAAsB,iB,wBAA4B,oBAClD,wDACF,gDACF,8CACA,4DAAwB,iB,wBAAgC,oBAC1D,4CACF,0CACA,uB,MA7NwB,8EAMG,4EAGG,4EAIA,yEAIA,oFAMH,8EAGnB,mEAA+B,8BAMC,uFAK9B,kEAGsB,mEAIP,kFACsC,mDAEQ,8DASA,8DAiBzC,4EAUA,kFAMH,8EAQX,wFAWP,iEAYqB,uFAUA,4EAMH,4EASG,iFAUA,iFAUA,iFAMH,4EAGG,6EAUA,2EAUA,8EAUA,kFAUA,mFAIF,yF,sRE/NhBE,GCAAC,GCAAC,GCAAC,GCGAC,GAMAC,GAUAC,G,uSCTL,MAAMC,GAIXnyC,YACU4jB,EACA/T,EACA1H,GAFA,KAAAyb,YAAAA,EACA,KAAA/T,qBAAAA,EACA,KAAA1H,YAAAA,EANV,KAAAiqC,SAAW,KASLrgC,W,gDACEtR,KAAK4xC,iBAGPC,O,0CACJ7xC,KAAK8xC,YAAc9xC,KAAKmjB,YAAYC,UAAS,UACvBpjB,KAAK8xC,oBAEnB9xC,KAAK4xC,cACX5xC,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,qBAExE3Q,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,qBAIpEihC,c,0CACJ,MAAMG,QAAa/xC,KAAKmjB,YAAY6uB,cAElChyC,KAAK2xC,SADK,MAARI,EACcA,EAAKE,qBAAuB,IAAMF,EAAKG,qBAEvClyC,KAAK0H,YAAYiJ,EAAE,a,kCA9B5B+gC,IAAa,iF,qCAAbA,GAAa,0d,GAAA,MCV1B,gCACE,qDACE,qDACE,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDACE,0DAAoB,gB,uBAAmB,oBACzC,2CACA,kDACF,yCACA,uDACE,uDACE,8DAGE,2CAAS,EAAAG,UAKT,6DAAiC,gB,uBAA2B,oBAC5D,qDACF,6CACA,wDAAwC,gB,uBAAsC,oBAChF,2CACF,yCACA,sB,kCAxBY,yEAIY,yEAWlB,yDAA4B,8BAGtB,sDAA2B,iFACU,uDAEL,qG,gENzB5C,SAAYV,GACV,mBACA,2BAFF,CAAYA,KAAAA,GAAkB,KCA9B,SAAYC,GACV,qBACA,+BACA,mBACA,2BAJF,CAAYA,KAAAA,GAAU,KCAtB,SAAYC,GACV,yBACA,2BACA,6BAHF,CAAYA,KAAAA,GAA0B,KCAtC,SAAYC,GACV,yBADF,CAAYA,KAAAA,GAAc,KIInB,MAAea,KHDtB,SAAYZ,GACV,6BACA,6BAFF,CAAYA,KAAAA,GAAa,KAMzB,SAAYC,GACV,yCACA,6BACA,2BACA,qBACA,uBACA,yBANF,CAAYA,KAAAA,GAAY,KAUxB,SAAYC,GACV,uBACA,iCACA,6BACA,6BACA,6BACA,qBACA,uBACA,iCACA,2BACA,2BACA,uBACA,uBACA,mBACA,6BACA,yCACA,uCACA,+BACA,6BACA,6BAnBF,CAAYA,KAAAA,GAAgB,KIfrB,MAAMW,GACX7yC,YAAqB8yC,EAAsCC,GAAtC,KAAAD,YAAAA,EAAsC,KAAAC,SAAAA,EAEvDC,c,MACF,OAAoB,QAAb,EAAAvyC,KAAKsyC,gBAAQ,QAAItyC,KAAKqyC,aAW1B,SAASG,GAAkBxzC,EAAkBuzC,GAClD,MAAO,CAACvtC,EAAqBqtC,KACS,MAAhCrtC,EAAUytC,qBACZztC,EAAUytC,mBAAqB,IAAItrC,KAGrCnC,EAAUytC,mBAAmBjrC,IAAIxI,EAAI,IAAIozC,GAAeC,EAAaE,K,2bCjBlE,MAAMG,WAAiBP,GAgB5B5yC,YAAYqG,GACVkN,QAfF,KAAA6/B,eAAyB,KAEzB,KAAAC,SAAmB,KAEnB,KAAAC,QAAkB,KAElB,KAAA/zC,KAAe,KAGP,KAAAg0C,OAAiB,KACjB,KAAAC,QAAkB,KAClB,KAAAC,UAAoB,KAOxBC,iBACF,OAAoB,MAAbjzC,KAAKlB,KAAe,IAAIo0C,OAAOlzC,KAAKlB,KAAKuE,QAAU,KAGxD8vC,mBACF,OAAsB,MAAfnzC,KAAKo5B,OAAiB,IAAI8Z,OAAOlzC,KAAKo5B,OAAO/1B,QAAU,KAI5D+vC,YACF,OAAOpzC,KAAK8yC,OAEVM,UAAM7f,GACRvzB,KAAK8yC,OAASvf,EACdvzB,KAAKgzC,UAAY,KAIf5Z,aACF,OAAOp5B,KAAK+yC,QAEV3Z,WAAO7F,GACTvzB,KAAK+yC,QAAUxf,EACfvzB,KAAKgzC,UAAY,KAGfK,eACF,GAAsB,MAAlBrzC,KAAKgzC,YACPhzC,KAAKgzC,UAAYhzC,KAAKozC,MACH,MAAfpzC,KAAKo5B,QAAkBp5B,KAAKo5B,OAAO/1B,QAAU,GAAG,CAC5B,MAAlBrD,KAAKgzC,WAAwC,KAAnBhzC,KAAKgzC,UACjChzC,KAAKgzC,WAAa,KAElBhzC,KAAKgzC,UAAY,GAInB,MAAMM,EACJtzC,KAAKo5B,OAAO/1B,QAAU,GAAgD,MAA3CrD,KAAKo5B,OAAOjwB,MAAM,IAAInD,OAAO,WAAqB,EAAI,EACnFhG,KAAKgzC,WAAa,IAAMhzC,KAAKo5B,OAAOz1B,OAAO3D,KAAKo5B,OAAO/1B,OAASiwC,GAGpE,OAAOtzC,KAAKgzC,UAGVO,iBACF,IAAKvzC,KAAK4yC,WAAa5yC,KAAK6yC,QAC1B,OAAO,KAGT,IAAIW,EAAuB,MAAjBxzC,KAAK4yC,UAAoB,IAAM5yC,KAAK4yC,UAAUxtC,OAAO,GAAK,KAEpE,OADAouC,GAAO,OAAyB,MAAhBxzC,KAAK6yC,QAAkB7yC,KAAKyzC,WAAWzzC,KAAK6yC,SAAW,QAChEW,EAGDC,WAAWjD,GACjB,OAAuB,IAAhBA,EAAKntC,OAAe,KAAOmtC,EAAOA,GA1E3C,IADCgC,GAAkB,mB,gEAGnB,IADCA,GAAkB,YAAmB,mB,0DAGtC,IADCA,GAAkB,WAAkB,kB,yDAGrC,IADCA,GAAkB,QAAe,gB,sDAsBlC,IADCA,GAAkB,U,sFAUnB,IADCA,GAAkB,W,khBCnCd,MAAMkB,WAAqBvB,GAwChC5yC,YAAY+D,GACVwP,QAvCF,KAAAjH,MAAgB,KAEhB,KAAA8nC,WAAqB,KAErB,KAAAC,SAAmB,KAEnB,KAAAC,SAAmB,KAEnB,KAAAC,SAAmB,KAEnB,KAAAC,KAAe,KAEf,KAAA18B,MAAgB,KAEhB,KAAA28B,WAAqB,KAErB,KAAAC,QAAkB,KAElB,KAAAC,QAAkB,KAElB,KAAAlhC,MAAgB,KAEhB,KAAAmhC,MAAgB,KAEhB,KAAAC,IAAc,KAEd,KAAAlkB,SAAmB,KAEnB,KAAAmkB,eAAyB,KAEzB,KAAAC,cAAwB,KAGhB,KAAAC,WAAqB,KACrB,KAAAC,UAAoB,KACpB,KAAAxB,UAAoB,KAQxByB,gBACF,OAAOz0C,KAAKu0C,WAEVE,cAAUlhB,GACZvzB,KAAKu0C,WAAahhB,EAClBvzB,KAAKgzC,UAAY,KAIf0B,eACF,OAAO10C,KAAKw0C,UAEVE,aAASnhB,GACXvzB,KAAKw0C,UAAYjhB,EACjBvzB,KAAKgzC,UAAY,KAGfK,eAcF,OAbsB,MAAlBrzC,KAAKgzC,WAAwC,MAAlBhzC,KAAKy0C,WAAsC,MAAjBz0C,KAAK00C,WAC5D10C,KAAKgzC,UAAY,GACK,MAAlBhzC,KAAKy0C,YACPz0C,KAAKgzC,UAAYhzC,KAAKy0C,WAEH,MAAjBz0C,KAAK00C,WACgB,KAAnB10C,KAAKgzC,YACPhzC,KAAKgzC,WAAa,KAEpBhzC,KAAKgzC,WAAahzC,KAAK00C,WAIpB10C,KAAKgzC,UAIV2B,eACF,GACgB,MAAd30C,KAAK6L,OACa,MAAlB7L,KAAKy0C,WACc,MAAnBz0C,KAAK2zC,YACY,MAAjB3zC,KAAK00C,SACL,CACA,IAAIpyC,EAAO,GAaX,OAZkB,MAAdtC,KAAK6L,QACPvJ,GAAQtC,KAAK6L,MAAQ,KAED,MAAlB7L,KAAKy0C,YACPnyC,GAAQtC,KAAKy0C,UAAY,KAEJ,MAAnBz0C,KAAK2zC,aACPrxC,GAAQtC,KAAK2zC,WAAa,KAEP,MAAjB3zC,KAAK00C,WACPpyC,GAAQtC,KAAK00C,UAERpyC,EAAKgE,OAGd,OAAO,KAGLsuC,kBACF,IAAIC,EAAU70C,KAAK4zC,SAanB,OAZK5xC,EAAMmS,mBAAmBnU,KAAK6zC,YAC5B7xC,EAAMmS,mBAAmB0gC,KAC5BA,GAAW,MAEbA,GAAW70C,KAAK6zC,UAEb7xC,EAAMmS,mBAAmBnU,KAAK8zC,YAC5B9xC,EAAMmS,mBAAmB0gC,KAC5BA,GAAW,MAEbA,GAAW70C,KAAK8zC,UAEXe,EAGLC,uBACF,GAAiB,MAAb90C,KAAK+zC,MAA8B,MAAd/zC,KAAKqX,OAAoC,MAAnBrX,KAAKg0C,WAClD,OAAO,KAET,MAAMD,EAAO/zC,KAAK+zC,MAAQ,IACpB18B,EAAQrX,KAAKqX,MACb28B,EAAah0C,KAAKg0C,YAAc,IACtC,IAAIe,EAAehB,EAKnB,OAJK/xC,EAAMmS,mBAAmBkD,KAC5B09B,GAAgB,KAAO19B,GAEzB09B,GAAgB,KAAOf,EAChBe,GArIT,IADCvC,GAAkB,U,uDAGnB,IADCA,GAAkB,e,4DAGnB,IADCA,GAAkB,a,0DAGnB,IADCA,GAAkB,a,0DAGnB,IADCA,GAAkB,a,0DAGnB,IADCA,GAAkB,QAAe,Y,sDAGlC,IADCA,GAAkB,SAAgB,iB,uDAGnC,IADCA,GAAkB,cAAqB,iB,4DAGxC,IADCA,GAAkB,Y,yDAGnB,IADCA,GAAkB,Y,yDAGnB,IADCA,GAAkB,U,uDAGnB,IADCA,GAAkB,U,uDAGnB,IADCA,GAAkB,Q,qDAGnB,IADCA,GAAkB,a,0DAGnB,IADCA,GAAkB,mB,gEAGnB,IADCA,GAAkB,kB,+DAcnB,IADCA,GAAkB,c,0FAUnB,IADCA,GAAkB,a,yFA2BnB,IADCA,GAAkB,a,8gBC9Ed,MAAMwC,WAAkB7C,GAW7B5yC,YAAY01C,GACVniC,QAVF,KAAAod,SAAmB,KAEnB,KAAAC,SAAmB,KAEnB,KAAA+kB,qBAA8B,KAC9B,KAAAC,KAAe,KACf,KAAAC,KAAuB,KACvB,KAAAC,mBAA8B,KAIvBJ,IAILj1C,KAAKk1C,qBAAuBD,EAAEC,qBAC9Bl1C,KAAKq1C,mBAAqBJ,EAAEI,oBAG1B1a,UACF,OAAO36B,KAAKs1C,QAAUt1C,KAAKo1C,KAAK,GAAGza,IAAM,KAGvC4a,qBACF,OAAwB,MAAjBv1C,KAAKmwB,SAAmB,WAAa,KAG1CkjB,eACF,OAAOrzC,KAAKkwB,SAGVslB,gBACF,OAAOx1C,KAAKs1C,SAAWt1C,KAAKo1C,KAAKK,MAAMC,GAAMA,EAAEF,YAG7CG,cACF,OAAQ3zC,EAAMmS,mBAAmBnU,KAAKm1C,MAGpCp9B,gBACF,GAAI/X,KAAKs1C,QAAS,CAChB,MAAM3a,EAAM36B,KAAKo1C,KAAKQ,MAAMF,GAAMA,EAAEF,YACpC,GAAW,MAAP7a,EACF,OAAOA,EAAI5iB,UAGf,OAAO,KAGLu9B,cACF,OAAoB,MAAbt1C,KAAKo1C,MAAgBp1C,KAAKo1C,KAAK/xC,OAAS,GAlDjD,IADCmvC,GAAkB,a,0DAGnB,IADCA,GAAkB,a,0DCRd,MAAMqD,WAAuB1D,GAGlC5yC,YAAYu2C,GACVhjC,QAHF,KAAA1H,KAAuB,KAIhB0qC,IAIL91C,KAAKoL,KAAO0qC,EAAE1qC,MAGZioC,eACF,OAAO,MCHJ,MAAM0C,GAwBXx2C,YAAYqG,G,MAvBZ,KAAA5G,GAAa,KACb,KAAAg3C,eAAyB,KACzB,KAAA7V,SAAmB,KACnB,KAAA79B,KAAe,KACf,KAAA2zC,MAAgB,KAChB,KAAA7qC,KAAmB,KACnB,KAAA8qC,UAAW,EACX,KAAAC,qBAAsB,EACtB,KAAAC,MAAO,EACP,KAAAC,cAAe,EAEf,KAAAvc,MAAQ,IAAIkb,GACZ,KAAA9kC,SAAW,IAAIwjC,GACf,KAAA4C,KAAO,IAAI5D,GACX,KAAA6D,WAAa,IAAIV,GACjB,KAAAW,YAAgC,KAChC,KAAAC,OAAsB,KACtB,KAAAC,gBAAyC,KACzC,KAAAC,cAA0B,KAC1B,KAAAlX,aAAqB,KACrB,KAAAmX,YAAoB,KACpB,KAAAC,SAA+B1F,GAAmB2F,KAG3ClxC,IAIL5F,KAAKhB,GAAK4G,EAAE5G,GACZgB,KAAKg2C,eAAiBpwC,EAAEowC,eACxBh2C,KAAKmgC,SAAWv6B,EAAEu6B,SAClBngC,KAAKk2C,SAAWtwC,EAAEswC,SAClBl2C,KAAKm2C,oBAAsBvwC,EAAEuwC,oBAC7Bn2C,KAAKo2C,KAAOxwC,EAAEwwC,KACdp2C,KAAKq2C,aAAezwC,EAAEywC,aACtBr2C,KAAKoL,KAAOxF,EAAEwF,KACdpL,KAAK+2C,UAAYnxC,EAAEmxC,UACnB/2C,KAAK22C,cAAgB/wC,EAAE+wC,cACvB32C,KAAKy/B,aAAe75B,EAAE65B,aACtBz/B,KAAK42C,YAAchxC,EAAEgxC,YAErB52C,KAAK62C,SAAqB,QAAV,EAAAjxC,EAAEixC,gBAAQ,QAAI1F,GAAmB2F,MAGvCpiC,WACV,OAAQ1U,KAAKoL,MACX,KAAKgmC,GAAW4F,MACd,OAAOh3C,KAAK85B,MACd,KAAKsX,GAAW6F,WACd,OAAOj3C,KAAKu2C,WACd,KAAKnF,GAAW8F,KACd,OAAOl3C,KAAKs2C,KACd,KAAKlF,GAAW+F,SACd,OAAOn3C,KAAKkQ,SAKhB,OAAO,KAGLmjC,eACF,OAAOrzC,KAAK0U,KAAK2+B,SAGf+D,yBACF,OAAOp3C,KAAK02C,iBAAmB12C,KAAK02C,gBAAgBrzC,OAAS,EAG3Dg0C,qBACF,OAAOr3C,KAAKw2C,aAAex2C,KAAKw2C,YAAYnzC,OAAS,EAGnDi0C,wBACF,GAAIt3C,KAAKq3C,eACP,IAAK,IAAI/zC,EAAI,EAAGA,EAAItD,KAAKw2C,YAAYnzC,OAAQC,IAC3C,GAA+B,MAA3BtD,KAAKw2C,YAAYlzC,GAAGgR,IACtB,OAAO,EAIb,OAAO,EAGLijC,gBACF,OAAOv3C,KAAKy2C,QAAUz2C,KAAKy2C,OAAOpzC,OAAS,EAGzCm0C,kCACF,OAAIx3C,KAAKoL,OAASgmC,GAAW4F,OAAuB,MAAdh3C,KAAK85B,OAET,MAAvB95B,KAAK85B,MAAM3J,UAA4C,KAAxBnwB,KAAK85B,MAAM3J,SAD5C,KAIFnwB,KAAK85B,MAAMob,qBAGhBuC,gBACF,OAA2B,MAApBz3C,KAAK42C,YAGVnE,yBACF,OAAOzyC,KAAK0U,KAAK+9B,mBAGnBiF,iBAAiB14C,G,MACf,MAAMwzC,EAA2C,QAAvB,EAAAxyC,KAAKyyC,0BAAkB,eAAE3f,IAAI9zB,GACvD,GAAyB,MAArBwzC,EACF,OAAO,KAGIxyC,KAAK0U,KAClB,OAAO1U,KAAK0U,KAAK89B,EAAkBH,aAGrCsF,mBAAmB34C,G,MACjB,OAAsC,QAA/B,EAAAgB,KAAKyyC,mBAAmB3f,IAAI9zB,UAAG,eAAEuzC,SC7H5C,MAAMqF,GAAqB,CACzB,WACA,UACA,SACA,SACA,UACA,SACA,SAEA,SACA,SACA,YACA,YACA,iBAGK,MAAMC,GAWXt4C,YAAYm2C,GAVZ,KAAAvsC,MAAsB,KAGd,KAAA2uC,KAAe,KACf,KAAAC,QAAkB,KAClB,KAAAC,UAAoB,KACpB,KAAAC,MAAgB,KAChB,KAAAC,WAAsB,KAIvBxC,IAIL11C,KAAKmJ,MAAQusC,EAAEvsC,OAGbwxB,UACF,OAAO36B,KAAK83C,KAEVnd,QAAIpH,GACNvzB,KAAK83C,KAAOvkB,EACZvzB,KAAK+3C,QAAU,KACf/3C,KAAKk4C,WAAa,KAGhBjxC,aAQF,OAPoB,MAAhBjH,KAAK+3C,SAA+B,MAAZ/3C,KAAK26B,MAC/B36B,KAAK+3C,QAAU/1C,EAAMgF,UAAUhH,KAAK26B,KACf,KAAjB36B,KAAK+3C,UACP/3C,KAAK+3C,QAAU,OAIZ/3C,KAAK+3C,QAGV3xC,eACF,OAAIpG,KAAKmJ,QAAUo3B,GAAa8B,kBACvB,MAEa,MAAlBriC,KAAKg4C,WAAiC,MAAZh4C,KAAK26B,MACjC36B,KAAKg4C,UAAYh2C,EAAM+b,YAAY/d,KAAK26B,KACjB,KAAnB36B,KAAKg4C,YACPh4C,KAAKg4C,UAAY,OAIdh4C,KAAKg4C,WAGV3xC,WACF,OAAIrG,KAAKmJ,QAAUo3B,GAAa8B,kBACvB,MAES,MAAdriC,KAAKi4C,OAA6B,MAAZj4C,KAAK26B,MAC7B36B,KAAKi4C,MAAQj2C,EAAMm2C,QAAQn4C,KAAK26B,KACb,KAAf36B,KAAKi4C,QACPj4C,KAAKi4C,MAAQ,OAIVj4C,KAAKi4C,OAGVG,oBACF,OAAwB,MAAjBp4C,KAAKoG,SAAmBpG,KAAKoG,SAAWpG,KAAK26B,IAGlD0d,gBACF,OAAoB,MAAbr4C,KAAKqG,KAAerG,KAAKqG,KAAOrG,KAAK26B,IAG1C2d,gBACF,OACc,MAAZt4C,KAAK26B,MAC4B,IAAhC36B,KAAK26B,IAAIl0B,QAAQ,YACiB,IAAjCzG,KAAK26B,IAAIl0B,QAAQ,aAChBzG,KAAK26B,IAAIl0B,QAAQ,OAAS,GAAKzE,EAAM0E,eAAeT,KAAKjG,KAAK26B,MAIjE6a,gBACF,GAAuB,MAAnBx1C,KAAKk4C,WACP,OAAOl4C,KAAKk4C,WAEd,GAAgB,MAAZl4C,KAAK26B,KAAe36B,KAAKmJ,QAAUo3B,GAAa8B,kBAAmB,CACrE,MAAM1H,EAAM36B,KAAK+X,UACjB,IAAK,IAAIzU,EAAI,EAAGA,EAAIs0C,GAAmBv0C,OAAQC,IAC7C,GAA2C,IAAvCq3B,EAAIl0B,QAAQmxC,GAAmBt0C,IAEjC,OADAtD,KAAKk4C,YAAa,EACXl4C,KAAKk4C,WAKlB,OADAl4C,KAAKk4C,YAAa,EACXl4C,KAAKk4C,WAGVngC,gBACF,OAAO/X,KAAK26B,IAAIl0B,QAAQ,OAAS,GAAKzE,EAAM0E,eAAeT,KAAKjG,KAAK26B,KACjE,UAAY36B,KAAK26B,IACjB36B,KAAK26B,KCpHN,MAAe4d,ICVf,MAAeC,ICKf,MAAeC,ICPf,MAAeC,ICIf,MAAeC,I,ICJVC,G,uSCsCL,MAAM,GA4CXr5C,YACYs5C,EACAlZ,EACAj4B,EACA0H,EACA0pC,EACAl5C,EACAm5C,EACAr5C,EACAw8B,EACAvV,EACFpR,EACEyjC,EACFC,GAZE,KAAAJ,cAAAA,EACA,KAAAlZ,cAAAA,EACA,KAAAj4B,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAA0pC,aAAAA,EACA,KAAAl5C,aAAAA,EACA,KAAAm5C,kBAAAA,EACA,KAAAr5C,iBAAAA,EACA,KAAAw8B,aAAAA,EACA,KAAAvV,cAAAA,EACF,KAAApR,WAAAA,EACE,KAAAyjC,wBAAAA,EACF,KAAAC,oBAAAA,EAxDD,KAAAC,WAAqB,EACrB,KAAA/Y,SAAmB,KAInB,KAAA6V,eAAyB,KACxB,KAAAmD,cAAgB,IAAI,EAAA5pC,aACpB,KAAA6pC,gBAAkB,IAAI,EAAA7pC,aACtB,KAAA8pC,iBAAmB,IAAI,EAAA9pC,aACvB,KAAA+pC,YAAc,IAAI,EAAA/pC,aAClB,KAAAgqC,kBAAoB,IAAI,EAAAhqC,aACxB,KAAAiqC,cAAgB,IAAI,EAAAjqC,aACpB,KAAAkqC,kBAAoB,IAAI,EAAAlqC,aACxB,KAAAmqC,mBAAqB,IAAI,EAAAnqC,aAEnC,KAAAuwB,UAAoB,EAGpB,KAAApS,YAAgC,GAMhC,KAAA7T,cAAwB,EACxB,KAAA8/B,gBAA0B,EAC1B,KAAAC,cAAwB,EACxB,KAAAC,WAAazI,GAMb,KAAA0I,iBAA0B,GAE1B,KAAAC,YAAc,IAAIhtC,KAClB,KAAAitC,eAAgB,EAChB,KAAAnD,UAAoB,EACpB,KAAAoD,gBAA0B,EAoBxBj6C,KAAKk6C,YAAc,CACjB,CAAE53C,KAAMoF,EAAYiJ,EAAE,aAAc4iB,MAAO6d,GAAW4F,OACtD,CAAE10C,KAAMoF,EAAYiJ,EAAE,YAAa4iB,MAAO6d,GAAW8F,MACrD,CAAE50C,KAAMoF,EAAYiJ,EAAE,gBAAiB4iB,MAAO6d,GAAW+F,UACzD,CAAE70C,KAAMoF,EAAYiJ,EAAE,kBAAmB4iB,MAAO6d,GAAW6F,aAE7Dj3C,KAAKm6C,iBAAmB,CACtB,CAAE73C,KAAM,MAAQoF,EAAYiJ,EAAE,UAAY,MAAO4iB,MAAO,MACxD,CAAEjxB,KAAM,OAAQixB,MAAO,QACvB,CAAEjxB,KAAM,aAAcixB,MAAO,cAC7B,CAAEjxB,KAAM,mBAAoBixB,MAAO,QACnC,CAAEjxB,KAAM,WAAYixB,MAAO,YAC3B,CAAEjxB,KAAM,cAAeixB,MAAO,eAC9B,CAAEjxB,KAAM,MAAOixB,MAAO,OACtB,CAAEjxB,KAAM,UAAWixB,MAAO,WAC1B,CAAEjxB,KAAM,WAAYixB,MAAO,YAC3B,CAAEjxB,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAO,UAEzCvzB,KAAKo6C,oBAAsB,CACzB,CAAE93C,KAAM,MAAQoF,EAAYiJ,EAAE,UAAY,MAAO4iB,MAAO,MACxD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,WAAY4iB,MAAO,KACnD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,YAAa4iB,MAAO,KACpD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,SAAU4iB,MAAO,KACjD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,SAAU4iB,MAAO,KACjD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,OAAQ4iB,MAAO,KAC/C,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,QAAS4iB,MAAO,KAChD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,QAAS4iB,MAAO,KAChD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,UAAW4iB,MAAO,KAClD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,aAAc4iB,MAAO,KACrD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,WAAY4iB,MAAO,MACnD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,YAAa4iB,MAAO,MACpD,CAAEjxB,KAAM,QAAUoF,EAAYiJ,EAAE,YAAa4iB,MAAO,OAEtDvzB,KAAKq6C,qBAAuB,CAC1B,CAAE/3C,KAAM,MAAQoF,EAAYiJ,EAAE,UAAY,MAAO4iB,MAAO,MACxD,CAAEjxB,KAAMoF,EAAYiJ,EAAE,MAAO4iB,MAAO7rB,EAAYiJ,EAAE,OAClD,CAAErO,KAAMoF,EAAYiJ,EAAE,OAAQ4iB,MAAO7rB,EAAYiJ,EAAE,QACnD,CAAErO,KAAMoF,EAAYiJ,EAAE,MAAO4iB,MAAO7rB,EAAYiJ,EAAE,OAClD,CAAErO,KAAMoF,EAAYiJ,EAAE,MAAO4iB,MAAO7rB,EAAYiJ,EAAE,QAEpD3Q,KAAKmiC,gBAAkB,CACrB,CAAE7/B,KAAMoF,EAAYiJ,EAAE,yBAA0B4iB,MAAO,MACvD,CAAEjxB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAOgN,GAAa1X,QACzD,CAAEvmB,KAAMoF,EAAYiJ,EAAE,QAAS4iB,MAAOgN,GAAavN,MACnD,CAAE1wB,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAOgN,GAAa6B,YACzD,CAAE9/B,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAa8B,mBACpD,CAAE//B,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAa+B,OACpD,CAAEhgC,KAAMoF,EAAYiJ,EAAE,SAAU4iB,MAAOgN,GAAagC,QAEtDviC,KAAKs6C,0BAA4B,CAC/B,CAAEh4C,KAAMoF,EAAYiJ,EAAE,gCAAiC4iB,MAAO,MAC9D,CAAEjxB,KAAMoF,EAAYiJ,EAAE,yBAA0B4iB,OAAO,GACvD,CAAEjxB,KAAMoF,EAAYiJ,EAAE,wBAAyB4iB,OAAO,IAIpDjiB,W,gDACEtR,KAAK2J,UAGPA,O,0CAIJ,GAHI3J,KAAK85C,iBAAiBz2C,SACxBrD,KAAK85C,iBAAmB,UAEhB95C,KAAK2mB,cAAciW,oBAAoBf,GAAW0e,mBAC1Dv6C,KAAKg6C,eAAgB,MAChB,CACL,MAAMQ,QAAgBx6C,KAAKJ,aAAa8d,WACxC1d,KAAK85C,iBAAiBhlC,KAAK,CAAExS,KAAMk4C,EAASjnB,MAAO,cAGlCvzB,KAAKi5C,oBAAoB5M,UACvClb,KAAKnvB,EAAMy4C,gBAAgBz6C,KAAK0H,YAAa,SAASL,SAASqzC,IAC9DA,EAAEC,SAAWD,EAAEhnC,SAAW29B,GAA2BuJ,WACvD56C,KAAK85C,iBAAiBhlC,KAAK,CAAExS,KAAMo4C,EAAEp4C,KAAMixB,MAAOmnB,EAAE17C,QAGnDgB,KAAKg6C,gBACRh6C,KAAKg2C,eAAiBh2C,KAAK85C,iBAAiB,GAAGvmB,OAGjDvzB,KAAK66C,2BAA6B76C,KAAK86C,kBAEvC96C,KAAKi6C,qBAAuBj6C,KAAKg5C,wBAAwB2B,aAGrD1gC,O,0CACJja,KAAK8/B,SAA4B,MAAjB9/B,KAAK+6C,SACjB/6C,KAAK8/B,UACP9/B,KAAK8/B,UAAW,EACZ9/B,KAAKk5C,WACPl5C,KAAKk5C,WAAY,EACjBl5C,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,YAEhC3Q,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,aAGlC3Q,KAAK6L,MAAQ7L,KAAK0H,YAAYiJ,EAAE,WAGlC,MAAM+oB,QAA+B15B,KAAKJ,aAAa+5B,uBAOvD,GANyB,MAArBD,IACF15B,KAAK65B,OAASH,EAAkBG,OAChC75B,KAAK22C,cAAgBjd,EAAkBid,qBAEnC32C,KAAKJ,aAAao7C,qBAAqB,MAE1B,MAAfh7C,KAAK65B,OACP,GAAI75B,KAAK8/B,SAAU,CACjB,MAAMjG,QAAe75B,KAAKi7C,aAC1Bj7C,KAAK65B,aAAeA,EAAO5gB,UAGvBjZ,KAAKk5C,YACPl5C,KAAK65B,OAAOv3B,MAAQ,MAAQtC,KAAK0H,YAAYiJ,EAAE,SAEb,MAA9B3Q,KAAK65B,OAAOmc,gBAA2Bh2C,KAAKg6C,gBAC9Ch6C,KAAK65B,OAAOmc,eAAiBh2C,KAAKg2C,sBAItCh2C,KAAK65B,OAAS,IAAIkc,GAClB/1C,KAAK65B,OAAOmc,eAAwC,MAAvBh2C,KAAKg2C,eAAyB,KAAOh2C,KAAKg2C,eACvEh2C,KAAK65B,OAAOsG,SAAWngC,KAAKmgC,SAC5BngC,KAAK65B,OAAOzuB,KAAoB,MAAbpL,KAAKoL,KAAegmC,GAAW4F,MAAQh3C,KAAKoL,KAC/DpL,KAAK65B,OAAOC,MAAQ,IAAIkb,GACxBh1C,KAAK65B,OAAOC,MAAMsb,KAAO,CAAC,IAAIyC,IAC9B73C,KAAK65B,OAAOyc,KAAO,IAAI5D,GACvB1yC,KAAK65B,OAAO3pB,SAAW,IAAIwjC,GAC3B1zC,KAAK65B,OAAO0c,WAAa,IAAIV,GAC7B71C,KAAK65B,OAAO0c,WAAWnrC,KAAOkmC,GAAe4J,QAC7Cl7C,KAAK65B,OAAOgd,SAAW1F,GAAmB2F,KAI3B,MAAf92C,KAAK65B,QAAoB75B,KAAK8/B,UAAiC,MAArBpG,IAA6B15B,KAAKk5C,kBACxEl5C,KAAKm7C,sBAEa,MAAtBn7C,KAAK22C,eACL32C,KAAK22C,cAActzC,OAAS,GAC5BrD,KAAK0tB,YAAYrqB,OAAS,GAE1BrD,KAAK0tB,YAAYrmB,SAASzB,IACpB5F,KAAK22C,cAAclwC,QAAQb,EAAE5G,KAAO,IACrC4G,EAAUyzB,SAAU,OAM7Br5B,KAAKwtB,cAAgBxtB,KAAK2/B,cAAcc,kBAEpCzgC,KAAK8/B,UAAY9/B,KAAKo7C,mBAAqBp7C,KAAK+6C,UAClD/6C,KAAKk8B,aAAasB,QAAQ5B,GAAUyf,oBAAqBr7C,KAAK+6C,UAEhE/6C,KAAKo7C,iBAAmBp7C,KAAK+6C,SAC7B/6C,KAAK62C,SAAW72C,KAAK65B,OAAOgd,WAAa1F,GAAmB2F,QAGxDvmC,S,0CACJ,GAAIvQ,KAAK65B,OAAO4d,UACd,OAAOz3C,KAAKs7C,UAGd,GAAwB,MAApBt7C,KAAK65B,OAAOv3B,MAAqC,KAArBtC,KAAK65B,OAAOv3B,KAM1C,OALAtC,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kBAEd,EAGT,KACI3Q,KAAK8/B,UAAY9/B,KAAKk5C,aACvBl5C,KAAKg6C,eACwB,MAA9Bh6C,KAAK65B,OAAOmc,eAOZ,OALAh2C,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kCAEd,EAIL3Q,KAAK8/B,WAAY9/B,KAAKk5C,WACxBl5C,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,OACN,MAA1Bh3C,KAAK65B,OAAOC,MAAMsb,MACgB,IAAlCp1C,KAAK65B,OAAOC,MAAMsb,KAAK/xC,QACW,MAAjCrD,KAAK65B,OAAOC,MAAMsb,KAAK,GAAGza,KAAiD,KAAlC36B,KAAK65B,OAAOC,MAAMsb,KAAK,GAAGza,MAEpE36B,KAAK65B,OAAOC,MAAMsb,KAAO,MAIrBp1C,KAAK8/B,WAAY9/B,KAAKk5C,WAA4C,MAA9Bl5C,KAAK65B,OAAOmc,iBACpDh2C,KAAK65B,OAAO8c,cACU,MAApB32C,KAAK0tB,YACD,GACA1tB,KAAK0tB,YAAYzsB,QAAQ2E,GAAOA,EAAUyzB,UAASp0B,KAAKW,GAAMA,EAAE5G,MAIpEgB,KAAKk5C,YACPl5C,KAAK65B,OAAO76B,GAAK,MAGnB,MAAM66B,QAAe75B,KAAKu7C,gBAC1B,IAWE,OAVAv7C,KAAKuW,YAAcvW,KAAKw7C,WAAW3hB,SAC7B75B,KAAKuW,YACXvW,KAAK65B,OAAO76B,GAAK66B,EAAO76B,GACxBgB,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE3Q,KAAK8/B,WAAa9/B,KAAKk5C,UAAY,aAAe,cAEvEl5C,KAAKm5C,cAAcroC,KAAK9Q,KAAK65B,QAC7B75B,KAAKN,iBAAiBQ,KAAKF,KAAK8/B,WAAa9/B,KAAKk5C,UAAY,eAAiB,gBACxE,EACP,MAAOt6C,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGTo8B,SACMh7B,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,QAIN,MAA1Bh3C,KAAK65B,OAAOC,MAAMsb,OACpBp1C,KAAK65B,OAAOC,MAAMsb,KAAO,IAG3Bp1C,KAAK65B,OAAOC,MAAMsb,KAAKtgC,KAAK,IAAI+iC,KAGlC5c,UAAUN,GACR,GAAI36B,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,OAAmC,MAA1Bh3C,KAAK65B,OAAOC,MAAMsb,KAC7D,OAGF,MAAM9xC,EAAItD,KAAK65B,OAAOC,MAAMsb,KAAK3uC,QAAQk0B,GACrCr3B,GAAK,GACPtD,KAAK65B,OAAOC,MAAMsb,KAAKla,OAAO53B,EAAG,GAIrC+3B,gBAAgBC,EAAe5mB,GAC7B,OAAO4mB,EAGTmgB,SACEz7C,KAAKs5C,YAAYxoC,KAAK9Q,KAAK65B,QAG7B2c,cACEx2C,KAAKu5C,kBAAkBzoC,KAAK9Q,KAAK65B,QAGnCsW,QACEnwC,KAAKw5C,cAAc1oC,KAAK9Q,KAAK65B,QAG/B6hB,kBACE17C,KAAKy5C,kBAAkB3oC,KAAK9Q,KAAK65B,QAG7B6B,S,0CAUJ,WATwB17B,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EACf3Q,KAAK65B,OAAO4d,UAAY,oCAAsC,0BAEhEz3C,KAAK0H,YAAYiJ,EAAE,cACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAKigC,cAAgBjgC,KAAK27C,qBACpB37C,KAAKigC,cACXjgC,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE3Q,KAAK65B,OAAO4d,UAAY,yBAA2B,gBAExEz3C,KAAKo5C,gBAAgBtoC,KAAK9Q,KAAK65B,QAC/B75B,KAAKN,iBAAiBQ,KACpBF,KAAK65B,OAAO4d,UAAY,2BAA6B,iBAEvD,MAAO74C,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGH08C,U,0CACJ,IAAKt7C,KAAK65B,OAAO4d,UACf,OAAO,EAUT,WAPwBz3C,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,2BACnB3Q,KAAK0H,YAAYiJ,EAAE,eACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAK47C,eAAiB57C,KAAK67C,sBACrB77C,KAAK47C,eACX57C,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,iBACxE3Q,KAAKq5C,iBAAiBvoC,KAAK9Q,KAAK65B,QAChC75B,KAAKN,iBAAiBQ,KAAK,kBAC3B,MAAOtB,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGH0Y,mB,0CACJ,GACuB,MAArBtX,KAAK65B,OAAOC,OACkB,MAA9B95B,KAAK65B,OAAOC,MAAM3J,UAClBnwB,KAAK65B,OAAOC,MAAM3J,SAAS9sB,OAC3B,CAOA,WANwBrD,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,iCACnB3Q,KAAK0H,YAAYiJ,EAAE,qBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,QAGnB,OAAO,EAKX,OADA3Q,KAAK05C,mBAAmB5oC,QACjB,KAGT4L,iBACE1c,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1BtQ,SAASqT,eAAe,iBAAiB5K,QACrChS,KAAK8/B,UAAY9/B,KAAK6Z,cACxB7Z,KAAKk8B,aAAasB,QAAQ5B,GAAUkgB,oCAAqC97C,KAAK+6C,UAI5EgB,mB,0CACJ/7C,KAAK25C,gBAAkB35C,KAAK25C,eACxB35C,KAAK25C,gBACP35C,KAAKk8B,aAAasB,QAAQ5B,GAAUogB,sCAAuCh8C,KAAK+6C,aAIpFkB,iBACEj8C,KAAK45C,cAAgB55C,KAAK45C,aAC1BrwC,SAASqT,eAAe,YAAY5K,QAChChS,KAAK8/B,UAAY9/B,KAAK45C,cACxB55C,KAAKk8B,aAAasB,QAAQ5B,GAAUsgB,oCAAqCl8C,KAAK+6C,UAIlFoB,iBAAiBxhB,GACf,MAAM+a,EAAI/a,EACV+a,EAAEpd,aAA+B,MAAjBod,EAAEpd,aAAoC,MAAbqC,EAAIxxB,SAAyBusC,EAAEpd,YAG1E8jB,qBAAqBzhB,GACnB,MAAM+a,EAAI/a,EACV+a,EAAEpd,YAA+B,MAAjBod,EAAEpd,aAA6Bod,EAAEpd,YAG7C6iB,sB,0CAIJ,GAHiC,MAA7Bn7C,KAAK66C,sBACP76C,KAAK66C,qBAAqBxzC,SAASzB,GAAQA,EAAUyzB,SAAU,IAE/B,MAA9Br5B,KAAK65B,OAAOmc,eAAwB,CACtCh2C,KAAK0tB,YAAc1tB,KAAK66C,qBAAqB55C,QAC1C2E,GAAMA,EAAEowC,iBAAmBh2C,KAAK65B,OAAOmc,iBAE1C,MAAMqG,QAAYr8C,KAAKi5C,oBAAoBnmB,IAAI9yB,KAAK65B,OAAOmc,gBAChD,MAAPqG,IACFr8C,KAAK65B,OAAOsc,oBAAsBkG,EAAIC,cAGxCt8C,KAAK0tB,YAAc,MAIjB6uB,gB,0CACJ,GAAiC,MAA7Bv8C,KAAKw8C,qBACP,OAGF,GACuB,MAArBx8C,KAAK65B,OAAOC,OACkB,MAA9B95B,KAAK65B,OAAOC,MAAM3J,UACa,KAA/BnwB,KAAK65B,OAAOC,MAAM3J,SAElB,OAGFnwB,KAAKw8C,qBAAuBx8C,KAAK84C,aAAa2D,eAAez8C,KAAK65B,OAAOC,MAAM3J,UAC/E,MAAMusB,QAAgB18C,KAAKw8C,qBAC3Bx8C,KAAKw8C,qBAAuB,KAExBE,EAAU,EACZ18C,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,kBAAmB+rC,EAAQz4C,aAGhDjE,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,oBAI5EgsC,kBACE38C,KAAK62C,UAAY72C,KAAK62C,SAClB72C,KAAK62C,SACP72C,KAAK65B,OAAOgd,SAAW1F,GAAmByL,SAE1C58C,KAAK65B,OAAOgd,SAAW1F,GAAmB2F,KAI9BgE,kB,0CAEd,aAD6B96C,KAAK+4C,kBAAkBtY,mBAC9Bx/B,QAAQ2E,IAAOA,EAAEi3C,cAG/B5B,aACR,OAAOj7C,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UAG3BQ,gBACR,OAAOv7C,KAAK64C,cAAc58B,QAAQjc,KAAK65B,QAG/B2hB,WAAW3hB,GACnB,OAAO75B,KAAK64C,cAAc7Y,eAAenG,GAGjC8hB,eACR,OAAO37C,KAAK65B,OAAO4d,UACfz3C,KAAK64C,cAAc3Y,iBAAiBlgC,KAAK65B,OAAO76B,IAChDgB,KAAK64C,cAAciE,qBAAqB98C,KAAK65B,OAAO76B,IAGhD68C,gBACR,OAAO77C,KAAK64C,cAAckE,kBAAkB/8C,KAAK65B,OAAO76B,K,kCA7gB/C,IAAgB,4V,qCAAhB,GAAgB,6aC/BtB,MAAMg+C,GAQXz9C,YAAY6zB,GAPZ,KAAA9wB,KAAe,KACf,KAAAixB,MAAgB,KAChB,KAAAnoB,KAAkB,KAClB,KAAA6xC,UAAoB,EACpB,KAAAC,WAAqB,EACrB,KAAAC,SAAyB,KAGlB/pB,IAILpzB,KAAKoL,KAAOgoB,EAAEhoB,KACdpL,KAAKm9C,SAAW/pB,EAAE+pB,UAGhBC,kBACF,OAAqB,MAAdp9C,KAAKuzB,MAAgB,WAAa,OFzB7C,SAAYqlB,GACV,mBACA,uBACA,yBACA,uBAJF,CAAYA,KAAAA,GAAS,KGiBd,MAAM,GAcXr5C,YAAoBmI,EAAkCw0B,GAAlC,KAAAx0B,YAAAA,EAAkC,KAAAw0B,aAAAA,EATtD,KAAAmhB,aAA0BzE,GAAUliB,KAGpC,KAAA+b,mBAA4B,GAE5B,KAAAoH,WAAazI,GACb,KAAAkM,UAAY1E,GACZ,KAAA2E,UAAY3hB,GAGV57B,KAAKw9C,oBAAsB,CACzB,CAAEl7C,KAAMoF,EAAYiJ,EAAE,cAAe4iB,MAAOqlB,GAAUliB,MACtD,CAAEp0B,KAAMoF,EAAYiJ,EAAE,gBAAiB4iB,MAAOqlB,GAAU6E,QACxD,CAAEn7C,KAAMoF,EAAYiJ,EAAE,iBAAkB4iB,MAAOqlB,GAAU8E,UAE3D19C,KAAK29C,yBAA2B,CAC9Br7C,KAAMtC,KAAK0H,YAAYiJ,EAAE,gBACzB4iB,MAAOqlB,GAAUgF,QAIrBpoC,YAAYC,GACoB,MAA1BA,EAAQooC,iBACV79C,KAAK89C,wBAEAroC,EAAQooC,eAAeE,aAC1B/9C,KAAKg+C,2BAKXC,WAC4B,MAAtBj+C,KAAK65B,OAAO4c,SACdz2C,KAAK65B,OAAO4c,OAAS,IAGvB,MAAMrjB,EAAI,IAAI4pB,GACd5pB,EAAEhoB,KAAOpL,KAAKq9C,aACdjqB,EAAE6pB,UAAW,EAET7pB,EAAEhoB,OAASwtC,GAAUgF,SACvBxqB,EAAE+pB,SAAWn9C,KAAKyyC,mBAAmB,GAAGlf,OAG1CvzB,KAAK65B,OAAO4c,OAAO3hC,KAAKse,GAG1B8qB,YAAYC,GACV,MAAM76C,EAAItD,KAAK65B,OAAO4c,OAAOhwC,QAAQ03C,GACjC76C,GAAK,GACPtD,KAAK65B,OAAO4c,OAAOvb,OAAO53B,EAAG,GAIjC86C,iBAAiBD,GACf,MAAM/qB,EAAI+qB,EACV/qB,EAAE8pB,WAAa9pB,EAAE8pB,UACbl9C,KAAK8/B,UAAY1M,EAAE8pB,WACrBl9C,KAAKk8B,aAAasB,QAAQ5B,GAAUyiB,uCAAwCr+C,KAAK65B,OAAO76B,IAI5Fq8B,gBAAgBC,EAAe5mB,GAC7B,OAAO4mB,EAGTgjB,KAAKp9C,IACH,IAAAq9C,iBAAgBv+C,KAAK65B,OAAO4c,OAAQv1C,EAAMs9C,cAAet9C,EAAMu9C,cAGzDX,wBACN,GAAsC,MAAlC99C,KAAK65B,OAAO4Y,mBACd,OAGF,MAAMpoC,EAAe,GACrBrK,KAAK65B,OAAO4Y,mBAAmBprC,SAAQ,CAACmrC,EAAmBxzC,IACzDqL,EAAQyK,KAAK,CAAExS,KAAMtC,KAAK0H,YAAYiJ,EAAE6hC,EAAkBD,SAAUhf,MAAOv0B,MAE7EgB,KAAKyyC,mBAAqBpoC,EAAQ8mB,KAAKnvB,EAAMy4C,gBAAgBz6C,KAAK0H,YAAa,SAGzEs2C,0BACoB,MAAtBh+C,KAAK65B,OAAO4c,QAAgD,IAA9Bz2C,KAAK65B,OAAO4c,OAAOpzC,SAKf,MAAlCrD,KAAK65B,OAAO4Y,mBAKhBzyC,KAAK65B,OAAO4c,OACTx1C,QAAQmyB,GAAMA,EAAEhoB,OAASwtC,GAAUgF,SACnCv2C,SAAS+rB,GAAOA,EAAE+pB,SAAWn9C,KAAKyyC,mBAAmB,GAAGlf,QANzDvzB,KAAK65B,OAAO4c,OAASz2C,KAAK65B,OAAO4c,OAAOx1C,QAAQmyB,GAAMA,EAAEhoB,OAASwtC,GAAUgF,W,kCA9FpE,IAA4B,uD,qCAA5B,GAA4B,oHCHlC,MAAMc,GAIXn/C,YAAoBo/C,EAAgCzsC,GAAhC,KAAAysC,WAAAA,EAAgC,KAAAzsC,SAAAA,EAH3C,KAAA0sC,WAAY,EACZ,KAAAC,YAAa,EA6Bd,KAAAC,gBAAmB9U,MAxB3B+U,aAAaC,GACXh/C,KAAK8+C,gBAAgBE,EAAG/2C,OAAOoxB,QAAUr5B,KAAK4+C,UAAY5+C,KAAK6+C,YAGjE1gB,WAAW91B,GACLA,IAAQrI,KAAK4+C,UACf5+C,KAAKkS,SAAS+sC,YAAYj/C,KAAK2+C,WAAWztC,cAAe,WAAW,GAEpElR,KAAKkS,SAAS+sC,YAAYj/C,KAAK2+C,WAAWztC,cAAe,WAAW,GAIxEktB,iBAAiBC,GACfr+B,KAAK8+C,gBAAkBzgB,EAGzBE,kBAAkBF,IAIlBG,iBAAkBC,K,yDCNV,kCAIE,oH,sBAJF,oB,6DACE,oDAEA,uDAGA,wEAFA,oC,yDAMF,kCAIE,oH,sBAJF,oB,qFACE,oDACA,iEACA,uDAKA,wEAJA,mCAAqB,iD,0BAcrB,mCAAiE,eAAY,qB,yBAAhC,mCAAoB,kD,yDANnE,mCAGE,uHAGA,qEACF,kD,qFANE,oDACA,uDACA,sCAGsB,mE,yDAI1B,kCAIE,oHAJF,oB,6DACE,oDACA,uDAEA,oC,kCDzDGigB,IAAuB,2E,qCAAvBA,GAAuB,+F,6CAAvB,sB,yFARA,CACT,CACE7f,QAAS,EAAAC,kBACTE,aAAa,IAAAkgB,aAAW,IAAMR,KAC9B3f,OAAO,Q,uHCmEL,gCAIE,iEAME,qJ,sBAGA,yDAKF,kDACF,gD,+CAVI,sGAEA,6CAKE,kG,oHAtFR,gCAOE,+DAGE,2H,sBAGA,uDACF,gDACA,8DAA8C,e,uBAAmB,oBACjE,gEAA+C,gB,uBAAoB,oBACnE,8DACE,kEAIE,8F,uBAJF,oBASA,+BACA,qEASA,+BACA,qEAWA,+BACA,sEAQF,iDACA,6BACA,mEAUA,iEAoBA,8D,uBACE,yDACF,iDACF,+C,8DAxFE,oFAME,6FAIK,sEAAuC,yEACvC,uEAAwC,0EAG3C,qEAEA,sDAGA,yEAFA,kCAWC,oEAYA,sEASA,yGAWF,uEAOA,2GAkBsB,mG,yDA3F7B,gCAAiB,+GACf,+DA8FF,4C,qCA1FkB,6DAAkB,mC,0BAmGhC,mCAAkE,eAAY,qB,yBAAhC,mCAAoB,kD,0BAClE,mCAIE,eACF,qB,kCAHE,4DAEA,wGCxGH,MAAMogB,WAAqC,GAChD5/C,YAAYmI,EAA0Bw0B,GACpCppB,MAAMpL,EAAaw0B,I,kCAFVijB,IAA4B,uD,qCAA5BA,GAA4B,ssEDXzC,+BACE,oDACE,e,sBACF,oBACA,qDACE,wBACA,0DAgGA,yBACA,yDACE,8DAAmC,2CAAS,EAAAlB,cAC1C,sDACA,gB,uBACF,oBACA,6DAA0C,gB,uBAAmB,oBAC7D,8DAA8C,wEAC5C,mEACA,oEAMF,+CACF,6CACF,2CACF,yCACA,sB,MAvHI,gGAIsD,6DAoGlD,2GAEwC,yEACI,4DACtB,mEAEnB,8E,6lBEhGP,wCACE,e,sBACF,qB,MADE,wH,0BAUM,mCAA0D,eAAY,qB,yBAAhC,mCAAoB,kD,yDAH9D,gCACE,gEAAkB,e,sBAAmB,oBACrC,iEAA8B,iHAC5B,sEACF,kDACF,iD,sCAJoB,uEACY,2DACN,4D,yDAkCpB,sCAME,0G,sBAKA,6DAKA,6DAKF,sD,4DAhBE,iFAEA,uDAAqC,sBAMnC,sDAKA,wD,uHAIJ,mCAME,2G,sBAIA,6DAKF,sD,sCAVE,oFAGA,gDAKE,wG,yDAGJ,mCAME,6G,sBAGA,6DACF,sD,KALE,oF,yDArER,6BACE,8DACE,kEAA2B,e,sBAAuB,oBAClD,kEAIE,2HAJF,oBAQF,kDACA,gEACE,kEACE,sEAA2B,gB,uBAAuB,oBAClD,sEAKE,2HALF,oBASF,qDACA,kEACE,0EAsBA,0EAgBA,0EAWF,qDACF,mDACA,gEACE,oEAAuB,gB,uBAAmC,oBAC1D,oEAKE,uHALF,oBASF,mDACF,iD,sCAvF+B,4EAKzB,qEAO2B,6EAIzB,sFAEA,mDAAmC,mCAelC,gEAoBA,gEAgBA,gEAOkB,yFAGrB,6FAGA,+CAA+B,oC,0BAkD/B,mCAA+D,eAAY,qB,yBAAhC,mCAAoB,kD,0BAM/D,mCACE,eACF,qB,yBAF8C,mCAC5C,2F,yDAlDR,6BACE,8DACE,kEAAgC,e,sBAA6B,oBAC7D,kEAIE,gIAJF,oBAMF,kDACA,gEACE,kEACE,sEAAwB,gB,uBAAqB,oBAC7C,sEAKE,wHALF,oBAQF,qDACA,kEACE,uEAME,6G,uBAGA,+DAKF,uDACF,qDACF,mDACA,gEACE,oEAAuB,gB,uBAAoB,oBAC3C,qEAAyC,uHACvC,0EACF,qDACF,mDACA,gEACE,oEAA0B,gB,uBAA8B,oBACxD,qEAA+C,0HAC7C,0EAGF,qDACF,mDACA,gEACE,oEAAyB,gB,uBAA6B,oBACtD,oEAIE,yH,8CAJF,oBAOF,mDACA,gEACE,kEACE,sEAAsB,gB,uBAA2B,oBACjD,sEAKE,sHALF,oBAQF,qDACA,kEACE,uEAME,2G,uBAGA,+DAKF,uDACF,qDACF,mDACF,iD,sCA5FoC,kFAK9B,0EAKwB,2EAItB,wFAEA,gDAUA,wGAEA,kDAKE,4GAMiB,0EACkB,iEACjB,gEAIE,oFACqB,oEACvB,mEAMC,mFAMvB,iJADA,iDAMsB,kFAIpB,sFAEA,8CAUA,wGAEA,gDAKE,yG,0BAWJ,mCACE,eACF,qB,yBAF+C,mCAC7C,2F,yDALR,6BACE,8DACE,kEAAqB,e,sBAAoB,oBACzC,mEAA2C,2HACzC,yEAGF,qDACF,mDACA,gEACE,oEAAyB,gB,uBAAwB,oBACjD,oEAIE,+HAJF,oBAMF,mDACA,gEACE,oEAA0B,gB,uBAAyB,oBACnD,oEAIE,gIAJF,oBAMF,mDACA,gEACE,oEAAwB,gB,uBAAuB,oBAC/C,oEAIE,8HAJF,oBAMF,mDACA,gEACE,oEAAwB,gB,uBAAuB,oBAC/C,oEAIE,8HAJF,oBAOF,mDACA,gEACE,oEAAuB,gB,uBAAsB,oBAC7C,oEAIE,6HAJF,oBAMF,mDACA,gEACE,oEAAmB,gB,uBAAkB,oBACrC,oEAIE,yHAJF,oBAOF,mDACA,gEACE,oEAA8B,gB,uBAA6B,oBAC3D,oEAIE,oIAJF,oBAOF,mDACA,gEACE,oEAA6B,gB,uBAA4B,oBACzD,oEAIE,mIAJF,oBAOF,mDACA,gEACE,oEAAqB,gB,uBAAoB,oBACzC,oEAIE,2HAJF,oBAOF,mDACA,gEACE,oEAAqB,gB,uBAAoB,oBACzC,sEAIE,2HAJF,oBAMF,oDACA,kEACE,sEAAwB,iB,wBAAuB,oBAC/C,sEAIE,8HAJF,oBAMF,oDACA,kEACE,sEAAwB,iB,wBAAuB,oBAC/C,sEAIE,8HAJF,oBAMF,oDACA,kEACE,sEAAwB,iB,wBAAuB,oBAC/C,sEAIE,8HAJF,oBAMF,oDACA,kEACE,sEAAoB,iB,wBAAuB,oBAC3C,sEAIE,0HAJF,oBAMF,oDACA,kEACE,sEAAqB,iB,wBAA4B,oBACjD,sEAIE,2HAJF,oBAMF,oDACA,kEACE,sEAA0B,iB,wBAA4B,oBACtD,sEAIE,gIAJF,oBAMF,oDACA,kEACE,uEAAuB,iB,wBAAsB,oBAC7C,uEAIE,6HAJF,oBAMF,oDACF,kD,sCArKyB,yEACsB,qEACnB,oEAMC,8EAKvB,yEAIwB,+EAKxB,0EAIsB,6EAKtB,wEAIsB,6EAKtB,wEAKqB,4EAKrB,uEAIiB,wEAKjB,mEAK4B,mFAK5B,8EAK2B,kFAK3B,6EAKmB,0EAKnB,qEAKmB,0EAKnB,qEAIsB,8EAKtB,wEAIsB,8EAKtB,wEAIsB,8EAKtB,wEAIkB,8EAKlB,oEAImB,mFAKnB,qEAIwB,mFAKxB,0EAIqB,6EAKrB,wE,0BA6CE,mCAAoD,eAAO,qB,yBAArB,6BAAc,6C,yDARtD,oCAIE,kHAGA,uEAAyB,e,sBAA2B,oBACpD,0EACF,sD,qFAPE,qDACA,oEACA,iCAAmB,6BAGX,kDAAiB,sFACH,4D,0BAYtB,mCAA8D,eAAY,qB,yBAAhC,mCAAoB,kD,yDAIhE,mCAOE,mJ,sBAEA,8DACF,sD,KAJE,qF,yDA1DN,iCAKE,oEAGE,yH,sBAGA,4DACF,oDACA,gEACE,sEAA6B,gB,uBAAiC,oBAC9D,uEAIE,6F,uBAJF,oBAUA,uEACE,gB,uBACF,oBACA,2EAUA,uEACE,gB,uBACF,oBACA,wEAGE,+FAAqB,qHAIrB,4EACF,uDACF,qDACA,kEACE,0EAWA,uEAME,gI,uBAEA,gEACF,uDACF,qDACF,mD,8DAjEI,6FAKO,qEAAsB,oFAE3B,oEAEA,4DAGA,iGAFA,iCAAmB,qCAMd,0EACL,gIAGC,8EASI,0EACL,oIAGA,yEACA,8DACA,mCAAqB,iEAIC,+DAMrB,8EAcD,sG,0BArER,gCACE,oEA2EF,0D,mCAxEkB,iEAAsB,mC,yDAN5C,gCACE,0DACE,wEA6EA,gEAIE,mGAGA,wDAAqE,e,uBACvE,oBACF,+CACF,6C,sCAvFmB,iEAoFwD,6F,0BAanE,mCACE,eACF,qB,yBAFoD,mCAClD,uF,yDAVV,gCACE,0DACE,4DACE,iEAAgC,e,sBAAsC,oBACtE,mEAGE,qIAEA,wEAGF,mDACF,iDACF,+CACF,6C,sCAZsC,iGAI9B,+EAEsB,0E,0BAYtB,mCAAmD,eAAY,qB,yBAA7B,gCAAiB,kD,yDAOvD,gCACE,iEACE,e,sBACA,+B,sBAME,4DACF,oDACF,mDACA,mEAKE,6GALF,oBAOF,iD,sCAjBI,oHAIE,+FAUF,yD,sBAaF,0B,sBAKA,0B,yDAdF,oCAKE,wGAGA,8DAAsB,e,sBAA0B,oBAChD,gEAKA,gEAKF,gD,sCAXwB,8EAInB,mEAKA,qE,yDAGL,oCAKE,4GAGA,8DAAsB,e,sBAA0B,oBAChD,wDACF,gD,MAFwB,+E,0BAmCpB,mCAA+D,eAAY,qB,yBAAhC,mCAAoB,kD,yDAdvE,gCACE,yDACE,e,sBACF,oBACA,0DACE,4DACE,kEAA4B,gB,uBAA8B,oBAC1D,oEAIE,2HAAmC,iGAGnC,wEACF,mDACF,iDACF,+CACF,6C,sCAhBI,qGAI8B,mFAK1B,qEAGsB,iE,uBAS5B,gCACE,6DACE,e,sBACF,oBACF,+C,MAFI,oH,yDAIF,gCAKE,iEAAgC,eAAY,oBAC5C,iEAGE,iGAHF,oBAMF,gD,sCAPS,wEAAyB,iDAE9B,uEAGA,gEADA,sC,0BAVN,gCACE,gEAaF,+C,mCAXkB,4D,0BAZpB,gCACE,yDACE,e,sBACF,oBACA,8DAKA,8DAeF,6C,mCAtBI,uGAEwB,gFAKA,+E,yDAgB5B,iCACE,2DACE,oEAKE,mGAIA,+DACE,iEACE,8DACA,8DACF,qDACA,gEAAM,gB,uBAAyB,oBACjC,mDACF,iDACF,+CACF,6C,4DAZM,kEAK2C,sDACW,uDAE9C,+E,yDAhnBhB,iCACE,mEAGA,wDACE,yDACE,e,sBACF,oBACA,2DACE,kEAMA,8DACE,kEAAkB,gB,uBAAmB,oBACrC,kEAAyC,gHAAzC,oBACF,iDACA,6BACA,mEA0FA,6BACA,mEA+FA,6BACA,oEAwKF,+CACF,6CACA,8DA0FA,8DAgBA,0DACE,4DACE,8DACE,kEAAoB,gB,uBAAqB,oBACzC,mEAAoC,oHAClC,wEACF,mDACF,iDACA,8DACE,kEAAsB,gB,uBAAuB,oBAC7C,kEAAqD,oHAArD,oBACF,iDACA,kEAoBA,qEAoBA,oEAWF,+CACF,6CACA,0DACE,2DACE,gEAAmB,gB,uBAAoB,oBACzC,+CACA,4DACE,8DACE,qEAA2C,iHAA2B,oBACxE,iDACF,+CACF,6CACA,uFAKA,6CACA,8DAmBA,8DAyBA,8DAqBF,2C,qCApnB4B,sFAKtB,4GAG8B,sDAOV,yEACuB,2DAGrC,6EA2FA,4EAgGA,gFA0KQ,6EA0FA,0EAmBQ,2EACgB,+DACZ,uDAIF,6EAC+B,+DAEU,2DA0B9D,sFAoBA,4FASgB,0EAI0B,4DAK/C,qDAAiB,+BAAjB,CAAiB,uBAKD,oEAmBA,8FAyBK,oEC7kBpB,MAAMmB,WAAyB,GAMpC7/C,YACEs5C,EACAlZ,EACAj4B,EACA0H,EACA0pC,EACAl5C,EACAm5C,EACAr5C,EACQI,EACAL,EACA2O,EACR8tB,EACAvV,EACQ2O,EACR2jB,EACAD,EACAzjC,GAEAzC,MACE+lC,EACAlZ,EACAj4B,EACA0H,EACA0pC,EACAl5C,EACAm5C,EACAr5C,EACAw8B,EACAvV,EACApR,EACAyjC,EACAC,GAvBM,KAAAn5C,MAAAA,EACA,KAAAL,OAAAA,EACA,KAAA2O,SAAAA,EAGA,KAAAknB,kBAAAA,EAlBV,KAAA+pB,iBAAkB,EAwCZ/tC,W,0GAgDJ,SA/CM,EAAMA,SAAQ,WAEpBtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAO/D,GANIA,EAAOo6B,WACT/6C,KAAK+6C,SAAWp6B,EAAOo6B,UAErBp6B,EAAOwf,WACTngC,KAAKmgC,SAAWxf,EAAOwf,UAErBxf,EAAO2+B,aAAc,CACvB,MAAMC,EAAav/C,KAAK66C,qBAAqBjF,MAAMhwC,GAAMA,EAAE5G,KAAO2hB,EAAO2+B,eACvD,MAAdC,IACFv/C,KAAK22C,cAAgB,CAAC4I,EAAWvgD,IACjCgB,KAAKg2C,eAAiBuJ,EAAWvJ,gBAGrC,GAAIr1B,EAAOvV,KAAM,CACf,MAAMA,EAAO1H,SAASid,EAAOvV,KAAM,MACnCpL,KAAKoL,KAAOA,EAEdpL,KAAK8/B,UAAYnf,EAAOo6B,SAEA,MAApBp6B,EAAOu4B,YACTl5C,KAAKk5C,UAAiC,SAArBv4B,EAAOu4B,iBAEpBl5C,KAAKia,OAENja,KAAK8/B,WAAY9/B,KAAKk5C,YAEtBl5C,KAAKs1B,kBAAkBjB,SAAStyB,UACjC4e,EAAOre,MACc,MAApBtC,KAAK65B,OAAOv3B,MAAqC,KAArBtC,KAAK65B,OAAOv3B,OAEzCtC,KAAK65B,OAAOv3B,KAAOqe,EAAOre,MAGzBtC,KAAKs1B,kBAAkBjB,SAAStyB,UACjC4e,EAAOga,KAC2B,MAAjC36B,KAAK65B,OAAOC,MAAMsb,KAAK,GAAGza,KAAiD,KAAlC36B,KAAK65B,OAAOC,MAAMsb,KAAK,GAAGza,MAEpE36B,KAAK65B,OAAOC,MAAMsb,KAAK,GAAGza,IAAMha,EAAOga,MAI3C36B,KAAKw/C,uBAAyBx/C,KAAKs1B,kBAAkBhB,QAAQvyB,cAG1D/B,KAAK8/B,SAAU,CAClB,MAAMx1B,QAAaV,EAAWQ,UAAU,CAAE0B,WAAY,WACtD9L,KAAK27B,YACK,MAARrxB,EACI,KACAA,EAAKrJ,QAAQuJ,GAAmB,MAAXA,EAAIpK,KAA2B,KAAZoK,EAAIpK,MAAY6E,KAAKuF,GAAQA,EAAIpK,MAGjF2B,OAAO2c,YAAW,KACX1e,KAAK8/B,WACgB,MAApB9/B,KAAK65B,OAAOv3B,MAAqC,KAArBtC,KAAK65B,OAAOv3B,KAC1CiH,SAASqT,eAAe,iBAAiB5K,QAEzCzI,SAASqT,eAAe,QAAQ5K,WAGnC,QAGCiI,O,wGACE,EAAMA,KAAI,WAChBja,KAAKy/C,8BACHz/C,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,cACzBh3C,KAAKJ,aAAa8iC,kCAGvBnyB,S,sGACJ,eAAU,EAAMA,OAAM,cAChBvQ,KAAKk5C,UACPl5C,KAAKP,OAAOY,SAAS,CAAC,gBAEtBL,KAAKoO,SAAS+pB,QAET,MAMXqe,cAGE,GAFA1jC,MAAM0jC,cAEFx2C,KAAKw/C,uBAAwB,CAC/B,MAAME,EAAiB1/C,KAAKP,OACzBkgD,cAAc,CAAC,gBAAiB,CAAEr/C,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,MACvEiF,WACG27C,EAAiB79C,OAAOqM,SAAS3E,KAAK/E,QAAQ1E,KAAKP,OAAOW,IAAK,IACrEJ,KAAKs1B,kBAAkBT,OAAO9yB,OAAQ69C,EAAiBF,QAEvD1/C,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,MAIlF08C,kBACE5oC,MAAM4oC,kBAC4B,MAA9B17C,KAAK65B,OAAOmc,gBACdh2C,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,MAIlFy8C,SACE3oC,MAAM2oC,SACNz7C,KAAKoO,SAAS+pB,OAGV7gB,mB,0HACJ,MAAM+oB,QAAkB,EAAM/oB,iBAAgB,WAW9C,OAVI+oB,IACFrgC,KAAKJ,aAAao7C,qBAAqB,CACrCnhB,OAAQ75B,KAAK65B,OACb8c,cACsB,MAApB32C,KAAK0tB,YACD,GACA1tB,KAAK0tB,YAAYzsB,QAAQ2E,GAAOA,EAAUyzB,UAASp0B,KAAKW,GAAMA,EAAE5G,OAExEgB,KAAKP,OAAOY,SAAS,CAAC,eAEjBggC,KAGH3E,S,sGACJ,MAAM2E,QAAkB,EAAM3E,OAAM,WAIpC,OAHI2E,GACFrgC,KAAKP,OAAOY,SAAS,CAAC,gBAEjBggC,KAGT9E,eAAeZ,GACb,MAAM+a,EAAI/a,EACV+a,EAAE9a,iBAAmB8a,EAAE9a,gBAGzBilB,wBACE,QACI7/C,KAAK8/B,UAAY9/B,KAAKk5C,YACxBl5C,KAAK85C,mBACJ95C,KAAK85C,iBAAiBz2C,OAAS,IAAMrD,KAAKg6C,gB,kCA3LpCoF,IAAgB,qe,qCAAhBA,GAAgB,2pP,GAAA,MDlC7B,kCAAY,8CAAY,EAAA7uC,YACtB,sDACE,uDACE,4DAAmC,2CAAS,EAAAkrC,YAAU,e,sBAAqB,oBAC7E,6CACA,wDACE,4DAAoB,gBAAW,oBACjC,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAmB,oBACjD,sDACF,+CACF,6CACF,2CACA,iEAsnBF,yCACA,sB,iCAtoBkC,8CAG0B,yEAGlC,kDAGe,wDAC3B,sDAAwB,yEACa,uDAIvC,qD,kmBEEL,MAAM,GAeXl8C,YACYs5C,EACAnxC,EACA0R,EACAhK,EACAiH,EACAxN,EACA0M,EACA3V,GAPA,KAAAi5C,cAAAA,EACA,KAAAnxC,YAAAA,EACA,KAAA0R,cAAAA,EACA,KAAAhK,qBAAAA,EACA,KAAAiH,WAAAA,EACA,KAAAxN,IAAAA,EACA,KAAA0M,WAAAA,EACA,KAAA3V,aAAAA,EArBF,KAAAkgD,qBAAuB,IAAI,EAAAvwC,aAC3B,KAAAwwC,oBAAsB,IAAI,EAAAxwC,aAC1B,KAAAywC,uBAAyB,IAAI,EAAAzwC,aAOvC,KAAA0wC,eAAiD,GACjD,KAAAC,iBAAmD,GACnD,KAAAC,kBAA6B,KAavB7uC,W,gDACEtR,KAAK2J,UAGP4G,S,0CACJ,IAAKvQ,KAAKogD,cAMR,YALApgD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,cAKvB,MAAM0vC,EAAS92C,SAASqT,eAAe,QACjC0jC,EAAQD,EAAOC,MACrB,GAAa,MAATA,GAAkC,IAAjBA,EAAMj9C,OAS3B,GAAIi9C,EAAM,GAAG9sB,KAAO,SAElBxzB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,oBALvB,CAUA,IACE3Q,KAAKuW,YAAcvW,KAAKugD,qBAAqBD,EAAM,IACnDtgD,KAAKwgD,mBAAqBxgD,KAAKuW,YAC/BvW,KAAK65B,aAAe75B,KAAKwgD,aAAavnC,UACtCjZ,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,oBACxE3Q,KAAK8/C,qBAAqBhvC,OAC1B,MAAOlS,GACPoB,KAAKuV,WAAWK,MAAMhX,GAKxByhD,EAAOj1C,KAAO,GACdi1C,EAAOj1C,KAAO,OACdi1C,EAAO9sB,MAAQ,QAhCbvzB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kBAgCnB+qB,OAAO+kB,G,0CACX,GAA0C,MAAtCzgD,KAAKigD,eAAeQ,EAAWzhD,IACjC,OAUF,SAPwBgB,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,gCACnB3Q,KAAK0H,YAAYiJ,EAAE,oBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,WAEF,CAIA,IACE3Q,KAAKigD,eAAeQ,EAAWzhD,IAAMgB,KAAK0gD,uBAAuBD,EAAWzhD,UACtEgB,KAAKigD,eAAeQ,EAAWzhD,IACrCgB,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,sBACxE,MAAMrN,EAAItD,KAAK65B,OAAO2c,YAAY/vC,QAAQg6C,GACtCn9C,GAAK,GACPtD,KAAK65B,OAAO2c,YAAYtb,OAAO53B,EAAG,GAEpC,MAAO1E,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxBoB,KAAKigD,eAAeQ,EAAWzhD,IAAM,KACrCgB,KAAK+/C,oBAAoBjvC,WAGrBjD,SAAS4yC,G,0CACb,MAAM74C,EAAI64C,EACV,GAAI74C,EAAE+4C,YACJ,OAGF,IAAK3gD,KAAK4gD,qBAMR,YALA5gD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,mBACnB3Q,KAAK0H,YAAYiJ,EAAE,wBAKvB,IAAIvQ,EACJ,IAMEA,SALyCJ,KAAKqW,WAAWwqC,kBACvD7gD,KAAK65B,OAAO76B,GACZyhD,EAAWzhD,GACXgB,KAAKmgD,oBAE0B//C,IACjC,MAAOxB,GACP,KAAIA,aAAa6U,GAAqD,MAAnC7U,EAAoBwV,YAEhD,MAAIxV,aAAa6U,EAChB,IAAI5U,MAAOD,EAAoByV,oBAE/BzV,EAJNwB,EAAMqgD,EAAWrgD,IAQrBwH,EAAE+4C,aAAc,EAChB,MAAM/0C,QAAiBk1C,MAAM,IAAIC,QAAQ3gD,EAAK,CAAE4gD,MAAO,cACvD,GAAwB,MAApBp1C,EAAS8H,OAGX,OAFA1T,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,uBACtE/I,EAAE+4C,aAAc,GAIlB,IACE,MAAMM,QAAYr1C,EAASs1C,cACrB5sC,EACc,MAAlBmsC,EAAWnsC,IACPmsC,EAAWnsC,UACLtU,KAAKoZ,cAAcG,UAAUvZ,KAAK65B,OAAOmc,gBAC/CmL,QAAenhD,KAAKoZ,cAAcgoC,iBAAiBH,EAAK3sC,GAC9DtU,KAAKoP,qBAAqBuuB,SAAS39B,KAAK6I,IAAKs4C,EAAQ,KAAMV,EAAW9zC,UACtE,MAAO/N,GACPoB,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBAGxE/I,EAAE+4C,aAAc,KAGFh3C,O,0CACd3J,KAAKwgD,mBAAqBxgD,KAAKi7C,aAC/Bj7C,KAAK65B,aAAe75B,KAAKwgD,aAAavnC,UAEtCjZ,KAAKogD,oBAAsBpgD,KAAKoZ,cAAcioC,YAC9C,MAAMC,QAAyBthD,KAAKJ,aAAaulC,sBAGjD,GAFAnlC,KAAK4gD,qBAAuBU,GAAkD,MAA9BthD,KAAK65B,OAAOmc,eAEvDh2C,KAAK4gD,sBAUH,IAAK5gD,KAAKogD,cAAe,QACNpgD,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,aACnB3Q,KAAK0H,YAAYiJ,EAAE,sBACnB3Q,KAAK0H,YAAYiJ,EAAE,aACnB3Q,KAAK0H,YAAYiJ,EAAE,UACnB,aAGA3Q,KAAKoP,qBAAqB2I,UACxB,kEApB0B,QACN/X,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,uBACnB3Q,KAAK0H,YAAYiJ,EAAE,mBACnB3Q,KAAK0H,YAAYiJ,EAAE,aACnB3Q,KAAK0H,YAAYiJ,EAAE,aAGnB3Q,KAAKoP,qBAAqB2I,UAAU,uDAkB1BwpC,yBAAyBd,EAA4Be,G,0CACnE,MAAM55C,EAAI64C,EACV,GAAsB,MAAlBA,EAAWnsC,MAAe1M,EAAE+4C,aAAuD,MAAxC3gD,KAAKkgD,iBAAiBO,EAAWzhD,IAIhF,IACEgB,KAAKkgD,iBAAiBO,EAAWzhD,IAAMP,QAAQC,UAAUC,MAAK,IAAY,mCAExEiJ,EAAE+4C,aAAc,EAChB,MAAM/0C,QAAiBk1C,MAAM,IAAIC,QAAQN,EAAWrgD,IAAK,CAAE4gD,MAAO,cAClE,GAAwB,MAApBp1C,EAAS8H,OAGX,OAFA1T,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,uBACtE/I,EAAE+4C,aAAc,GAIlB,IAEE,MAAMM,QAAYr1C,EAASs1C,cACrB5sC,EACc,MAAlBmsC,EAAWnsC,IACPmsC,EAAWnsC,UACLtU,KAAKoZ,cAAcG,UAAUvZ,KAAK65B,OAAOmc,gBAC/CmL,QAAenhD,KAAKoZ,cAAcgoC,iBAAiBH,EAAK3sC,GAC9DtU,KAAKwgD,mBAAqBxgD,KAAK64C,cAAc4I,4BAC3CzhD,KAAKwgD,aACLC,EAAW9zC,SACXw0C,EACAK,GAEFxhD,KAAK65B,aAAe75B,KAAKwgD,aAAavnC,UAGtCjZ,KAAKigD,eAAeQ,EAAWzhD,IAAMgB,KAAK0gD,uBAAuBD,EAAWzhD,UACtEgB,KAAKigD,eAAeQ,EAAWzhD,IACrC,MAAM0iD,EAAkB1hD,KAAK65B,OAAO2c,YAAYv1C,QAAQ0gD,GAAOA,EAAG3iD,KAAOyhD,EAAWzhD,KACpF,GAAI0iD,EAAgBr+C,OAAS,EAAG,CAC9B,MAAMC,EAAItD,KAAK65B,OAAO2c,YAAY/vC,QAAQi7C,EAAgB,IACtDp+C,GAAK,GACPtD,KAAK65B,OAAO2c,YAAYtb,OAAO53B,EAAG,GAItCtD,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,oBAErB3Q,KAAKggD,uBAAuBlvC,OAC5B,MAAOlS,GACPoB,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBAGxE/I,EAAE+4C,aAAc,aAEZ3gD,KAAKkgD,iBAAiBO,EAAWzhD,IACvC,MAAOJ,GACPoB,KAAKuV,WAAWK,MAAMhX,OAIhBq8C,aACR,OAAOj7C,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UAG3BwF,qBAAqBqB,GAC7B,OAAO5hD,KAAK64C,cAAcgJ,yBAAyB7hD,KAAKwgD,aAAcoB,GAG9DlB,uBAAuBoB,GAC/B,OAAO9hD,KAAK64C,cAAckJ,2BAA2B/hD,KAAK65B,OAAO76B,GAAI8iD,I,kCA/Q5D,IAAoB,2JAqBdh1B,QAAM,sD,qCArBZ,GAAoB,+K,oWCd3B,mCAAmC,iGACjC,e,sBACF,oB,MADE,kG,yDAEF,mCAAmC,gGACjC,6DAA0B,yBAAqD,oBAC/E,0DAAM,e,sBAAmB,oBAC3B,8C,MADQ,wE,yDAgBN,gCACE,8DACE,eACF,oBACA,gEAA6B,eAAgB,oBAC7C,8DACE,uEAOE,sH,uBAKA,6DAKA,6DAKF,qDACF,mDACF,iD,2EA5BI,sFAE2B,qDAQzB,uGAGA,uDAAqC,sBAKnC,sDAKA,wD,0BA3BZ,gCACE,0DACE,gEA+BF,8CACF,6C,kCAhCoE,mECJjE,MAAMk1B,WAA6B,GAGxCziD,YACEs5C,EACAnxC,EACA0R,EACAhK,EACAiH,EACQjI,EACAtO,EACRF,EACA2V,GAEAzC,MACE+lC,EACAnxC,EACA0R,EACAhK,EACAiH,EACAtU,OACAwT,EACA3V,GAbM,KAAAwO,SAAAA,EACA,KAAAtO,MAAAA,EAgBJwR,W,0CACJtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC/D3gB,KAAK+6C,SAAWp6B,EAAOo6B,eACjB/6C,KAAK2J,YAGb3J,KAAKiiD,yBAA8C,IAAnBrrB,QAAQvzB,UAG1C80B,OACEn4B,KAAKoO,SAAS+pB,OAGhB3rB,QACEzK,OAAOyK,S,kCAxCEw1C,IAAoB,uQ,qCAApBA,GAAoB,wrC,GAAA,MDpBjC,kCAAY,8CAAY,EAAAzxC,YACtB,sDACE,uDACE,+DAGA,+DAIF,6CACA,wDACE,4DAAoB,gB,uBAA0B,oBAChD,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAmB,oBACjD,sDACF,+CACF,6CACF,2CACA,yDACE,6DAmCA,0DACE,2DACE,gB,uBACF,oBACA,4DACE,8DACE,kEAAkB,gB,uBAAmB,oBACrC,6DACF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACF,2CACF,yCACA,sB,iCAzEkC,8CAG0B,qEAGD,sEAMjC,gFAGe,wDAC3B,sDAAwB,yEACa,uDAK7B,4EAqCd,2GAIoB,yEAKpB,2G,yHEjED,MAAe2xC,GAAtB,cACE,KAAAC,gBAA2B,M,2SCGtB,MAAM,GAkBX5iD,YAAsB6iD,GAAA,KAAAA,cAAAA,EAjBb,KAAAC,eAAyB,KACxB,KAAAC,gBAAkB,IAAI,EAAA/yC,aACtB,KAAAgzC,qBAAuB,IAAI,EAAAhzC,aAC3B,KAAAizC,YAAc,IAAI,EAAAjzC,aAClB,KAAAkzC,mBAAqB,IAAI,EAAAlzC,aAEnC,KAAAmzC,QAAkB,EAClB,KAAAn1B,QAAwB,GAExB,KAAAo1B,kBAA4B,KAC5B,KAAA1hD,OAA0C,KAC1C,KAAA2hD,SAAmB,EAET,KAAAC,eAAgB,EAElB,KAAAC,cAAqB,KA6DnB,KAAAC,cAAkDn9C,GAAMA,EAAE6xC,YAAcz3C,KAAK4iD,QAzDjF3oC,KAAKhZ,EAA0C,KAAM2hD,GAAmB,G,0CAC5E5iD,KAAK4iD,QAAUA,IAAW,QACpB5iD,KAAKgjD,YAAY/hD,GACvBjB,KAAK0iD,QAAS,KAGVr0C,OAAOpN,EAA0C,KAAM2hD,GAAmB,G,0CAC9E5iD,KAAK0iD,QAAS,EACd1iD,KAAKutB,QAAU,SACTvtB,KAAKia,KAAKhZ,EAAQ2hD,MAGpBxd,U,gDACEplC,KAAKqO,OAAOrO,KAAKiB,OAAQjB,KAAK4iD,YAGhCI,YAAY/hD,EAA0C,M,0CAC1DjB,KAAKiB,OAASA,QACRjB,KAAKkH,OAAO,SAGdA,OAAOkO,EAAkB,KAAM6tC,G,0CACnCjjD,KAAK6iD,eAAgB,EACK,MAAtB7iD,KAAK8iD,eACPv9B,aAAavlB,KAAK8iD,eAEL,MAAX1tC,GAIJpV,KAAK6iD,eAAgB,EACrB7iD,KAAK8iD,cAAgBpkC,YAAW,IAAY,yCACpC1e,KAAKkjD,SAASD,GACpBjjD,KAAK6iD,eAAgB,MACpBztC,UAPKpV,KAAKkjD,SAASD,MAUxBE,aAAatpB,GACX75B,KAAKsiD,gBAAgBxxC,KAAK+oB,GAG5BupB,iBAAiBvpB,GACf75B,KAAKuiD,qBAAqBzxC,KAAK+oB,GAGjCwpB,YACErjD,KAAKwiD,YAAY1xC,OAGnBwyC,mBACEtjD,KAAKyiD,mBAAmB3xC,OAG1ByyC,cACE,OAAQvjD,KAAK6iD,eAAiB7iD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YAKrDP,SAASD,G,0CACvBjjD,KAAKutB,cAAgBvtB,KAAKoiD,cAAcsB,cACtC1jD,KAAKyjD,WACL,CAACzjD,KAAKiB,OAAQjB,KAAK+iD,eACnBE,O,kCAnFO,IAAgB,6B,qCAAhB,GAAgB,qMCEtB,MAAeU,WAAqB,GCCpC,MAAMC,WAAwC,EAAAC,+BAInDtkD,YACEukD,EACAC,EACAC,EACAC,GAEAnxC,MAAMgxC,EAAUC,EAAaC,GAC7BhkD,KAAKikD,sBAAwBA,EAG/BC,oBACsB,MAAhBlkD,KAAKoV,SACPmQ,aAAavlB,KAAKoV,SAGpBpV,KAAKoV,QAAUsJ,WAAW1e,KAAKikD,sBAAuB,MAkBnD,MAAME,WAAgC,EAAAC,0BAG3C7kD,cACEuT,QASF,KAAAuxC,uBAAyB,KACvB,MAAMC,EAAa/6C,SAAS+pB,cAC1B,oDAEIixB,EAAcD,MAAAA,OAAU,EAAVA,EAAYE,aAEb,MAAfD,GAAuBA,IAAgBvkD,KAAK8jD,WAC9C9jD,KAAK8jD,SAAWS,EAChBvkD,KAAKykD,gBAAgBC,wBACnB1kD,KAAK8jD,SACL9jD,KAAK+jD,YACL/jD,KAAKgkD,eAnBThkD,KAAKykD,gBAAkB,IAAIb,GACzB5jD,KAAK8jD,SACL9jD,KAAK+jD,YACL/jD,KAAKgkD,YACLhkD,KAAKqkD,yB,kCATEF,K,qCAAAA,GAAuB,4FARvB,CACT,CACEtlB,QAAS,EAAA8lB,wBACTC,WATC,SAAiDC,GACtD,OAAOA,EAAcJ,iBASjBK,KAAM,EAAC,IAAA5F,aAAW,IAAMiF,SAE3B,mCCxCI,MAAMY,GAGXxlD,YAAoByR,GAAA,KAAAA,GAAAA,EAEGg0C,UACrBhlD,KAAKgR,GAAGE,cAAc8O,IAAMhgB,KAAKilD,gB,kCANxBF,IAAoB,uC,qCAApBA,GAAoB,qE,2CAApB,gB,+WCJX,0B,kCAAmB,6DAAd,mD,yBACL,sB,kCAAG,6DCaL,MAAMG,GAAoC,CACxCC,KAAM,YACNC,WAAY,kBACZC,KAAM,YACNC,SAAU,gBACV,cAAe,mBACfC,IAAK,WACLC,QAAS,eACTC,SAAU,kBAOL,MAAMC,GASXnmD,YAAY8P,EAAgDzP,GAAA,KAAAA,aAAAA,EAC1DI,KAAKmQ,SAAWd,EAAmBs2C,cAG/BnwC,c,0CAGJxV,KAAK4lD,MAAQ,KACb5lD,KAAK6lD,cAAgB,KACrB7lD,KAAK8lD,qBAAuB9lD,KAAKJ,aAAaqd,qBAC9Cjd,KAAKia,UAGGA,OACR,OAAQja,KAAK65B,OAAOzuB,MAClB,KAAKgmC,GAAW4F,MACdh3C,KAAKyqB,KAAO,YACZzqB,KAAK+lD,eACL,MACF,KAAK3U,GAAW6F,WACdj3C,KAAKyqB,KAAO,kBACZ,MACF,KAAK2mB,GAAW8F,KACdl3C,KAAKyqB,KAAO,kBACZzqB,KAAKgmD,cACL,MACF,KAAK5U,GAAW+F,SACdn3C,KAAKyqB,KAAO,eAOVs7B,eACN,GAAI/lD,KAAK65B,OAAOC,MAAMa,IAAK,CACzB,IAAIsrB,EAAcjmD,KAAK65B,OAAOC,MAAMa,IAChC2d,GAAY,EAmBhB,GAjB6C,IAAzC2N,EAAYx/C,QAAQ,kBACtBzG,KAAKyqB,KAAO,cACZzqB,KAAK4lD,MAAQ,MACiC,IAArCK,EAAYx/C,QAAQ,cAC7BzG,KAAKyqB,KAAO,YACZzqB,KAAK4lD,MAAQ,MAEb5lD,KAAK8lD,eAC2B,IAAhCG,EAAYx/C,QAAQ,QACpBw/C,EAAYx/C,QAAQ,MAAQ,GAE5Bw/C,EAAc,UAAYA,EAC1B3N,GAAY,GACHt4C,KAAK8lD,eACdxN,EAA4C,IAAhC2N,EAAYx/C,QAAQ,SAAiBw/C,EAAYx/C,QAAQ,MAAQ,GAG3EzG,KAAK8lD,cAAgBxN,EACvB,IACEt4C,KAAK4lD,MAAQ5lD,KAAKmQ,SAAW,IAAMnO,EAAM+b,YAAYkoC,GAAe,YACpEjmD,KAAK6lD,cAAgB,uBACrB,MAAOjnD,UAKXoB,KAAK4lD,MAAQ,KAITI,cACN,MAAM5S,EAAQpzC,KAAK65B,OAAOyc,KAAKlD,MAC3BpzC,KAAK8lD,cAAgB1S,KAAS8R,KAChCllD,KAAKyqB,KAAO,oBAAsBy6B,GAAU9R,K,kCAjFrCsS,IAAa,sD,qCAAbA,GAAa,wRD9B1B,+BACE,wDACA,sDACF,wCACA,qB,MAH2D,kEAChB,sE,0CEGpC,MAAMQ,GACwBj1C,QAAQgN,GACzCA,EAAO+sB,mB,kCAFEkb,K,qCAAAA,GAAiB,kE,4CAAjB,mB,oWCLb,gCAEE,gG,sBAMA,8CACF,wC,KAJE,wE,kGAMA,gCAKE,yG,sBAIA,gDACF,0C,sCANE,0EAGA,iF,yDARJ,gCACE,yDAWA,sDAKE,sIAA6C,WAAY,e,sBAGzD,gDACF,0CACA,uDAKE,sIAA6C,WAAY,e,uBAGzD,kDACF,2CACA,wDAKE,kIAAyC,uBAAwB,W,uBAGjE,kDACF,2CACF,kD,qCAnCK,sDASD,kGAEA,gFAQA,mGAEA,wGAQA,4GAEA,2F,yDAKJ,gCACE,sDAKE,mIAA0C,SAAU,kB,sBAGpD,iDACF,0CACA,sDAKE,iIAAwC,eAAgB,oB,sBAGxD,kDACF,2CACF,kD,qCAhBI,gGAEA,4EAQA,sGAEA,4E,yDAKJ,gCACE,sDAKE,6HAAoC,OAAQ,W,sBAG5C,iDACF,0CACF,iD,qCANI,8FAEA,uEC/DG,MAAMC,GASX5mD,YACUmI,EACA0H,EACA8sB,EACA4E,EACAlhC,EACAo5C,GALA,KAAAtxC,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAA8sB,aAAAA,EACA,KAAA4E,YAAAA,EACA,KAAAlhC,aAAAA,EACA,KAAAo5C,wBAAAA,EAdA,KAAAoN,OAAS,IAAI,EAAA72C,aACb,KAAA82C,YAAc,IAAI,EAAA92C,aAEnB,KAAA+2C,UAAW,EAEpB,KAAAzM,WAAazI,GACb,KAAAmV,sBAAuB,EAWjBj1C,W,0CACJtR,KAAKumD,2BAA6BvmD,KAAKJ,aAAaulC,yBAGtDqhB,eACExmD,KAAKqmD,YAAYv1C,KAAK9Q,KAAK65B,QAGvB9C,KAAK8C,EAAoBtG,EAAekzB,EAAqBC,G,0CAE/D1mD,KAAK65B,OAAOgd,WAAa1F,GAAmB2F,MAC5C92C,KAAKg5C,wBAAwB2N,kBAAkBnmD,SAASkmD,YAChD1mD,KAAKg5C,wBAAwB4N,uBAK1B,MAATrzB,GAA4B,SAAVmzB,IAAqB1mD,KAAK6mD,sBAAsBhtB,KAE3DtG,IAAUsG,EAAOC,MAAMqb,OAChC5hB,QAAcvzB,KAAK8gC,YAAYgmB,QAAQvzB,IAGpCsG,EAAOwc,eAIZr2C,KAAKoP,qBAAqB6nB,gBAAgB1D,EAAO,CAAExxB,SACnD/B,KAAKoP,qBAAqBsB,UACxB,OACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE81C,KAGnC,aAAhBA,GAA8C,yBAAhBA,EAChCzmD,KAAKk8B,aAAasB,QAAQ5B,GAAUyiB,uCAAwCxkB,EAAO76B,IAC1D,iBAAhBynD,GACTzmD,KAAKk8B,aAAasB,QAAQ5B,GAAUmrB,4BAA6BltB,EAAO76B,SAI5E6nD,sBAAsBhtB,G,QACpB,OACyB,QAAtB,EAAa,QAAb,EAAAA,MAAAA,OAAM,EAANA,EAAQC,aAAK,eAAE6b,eAAO,WAAe9b,EAAOsc,qBAAuBn2C,KAAKumD,sBAI7ES,OACEhnD,KAAKomD,OAAOt1C,KAAK9Q,KAAK65B,S,uBCvElB,gCACE,sD,sBAKA,8DAAsB,e,sBAAqB,oBAC7C,0D,MAJI,qFAGoB,0E,uBAExB,gCACE,uD,sBAKA,8DAAsB,e,sBAA0B,oBAClD,0D,MAJI,0FAGoB,+E,kCDTnBssB,IAAsB,iK,qCAAtBA,GAAsB,m5BDnBnC,mCAUA,iEA2CA,iEAsBA,+DAYA,qB,MAjFG,mCAIY,6EA2CA,4EAsBA,oF,qHGnER,MAAMc,GAJb,cAKY,KAAA5uB,WAAa,IAAI,EAAA9oB,aACjB,KAAA82C,YAAc,IAAI,EAAA92C,aAClB,KAAA62C,OAAS,IAAI,EAAA72C,aAGd,KAAA+2C,UAAW,EAGpBnD,aAAav9C,GACX5F,KAAKq4B,WAAWvnB,KAAKlL,GAGvB4gD,aAAa5gD,GACX5F,KAAKqmD,YAAYv1C,KAAKlL,GAGxBshD,WAAWthD,GACT5F,KAAKomD,OAAOt1C,KAAKlL,I,kCAlBRqhD,K,qCAAAA,GAAkB,wqBDR/B,kCAEE,2CAAS,EAAA9D,aAAA,YAAT,CAA8B,8BAClB,EAAAqD,aAAA,aAMZ,qDACE,6DACA,uDACE,0DACE,eACA,4CAQA,yEAQF,+CACA,4DAAqB,gBAAqB,oBAC5C,6CACF,2CACA,sEAGE,4CAAU,EAAAU,WAAA,YAAV,CAA6B,iCACd,EAAAV,aAAA,aAGjB,2CACF,yCACA,sB,MAtCE,yCAAA36C,MAAA,wBAEA,+DAGkB,qDAGZ,mFACe,kEAQA,kEASI,4DAIvB,qDAAiB,yB,yaEFb,mCAME,iIAEA,8DACE,gEACE,2DACF,oDACA,iEAAmB,gBAAiB,oBACtC,mDACA,8DAAM,0BAA0E,oBAClF,iD,4BAHuB,wD,0BAjB3B,gCACE,yDACE,e,sBACF,oBACA,0DACE,mEAgBF,8CACF,8C,mCApBI,mGAKgB,8D,yDAqBhB,mCAME,qIAEA,8DACE,gEACE,2DACF,oDACA,iEAAmB,gBAAiB,oBACtC,mDACA,8DAAM,0BAA0E,oBAClF,iD,4BAHuB,wD,0BAjB3B,gCACE,yDACE,e,sBACF,oBACA,0DACE,mEAgBF,8CACF,8C,mCApBI,uGAKgB,kE,0BA/BtB,gCACE,4DAuBA,4DAuBF,oD,kCA9CyB,kFAuBA,2F,sBA0BrB,yB,yDACA,gCACE,uDAAG,e,sBAA4B,oBAC/B,+DAAsB,sGACpB,e,sBACF,oBACF,uD,MAJK,gFAED,wG,0BALN,gCACE,2DACA,uEAMF,6C,mCAP8C,oDAC7B,oD,yDAoBX,2CAKE,gHAAmC,iG,sBAEpC,oB,qCAHC,qEAFA,4BAAY,W,0BAfpB,2DAOE,0DACE,2DACE,eACA,iCAAyB,eAAqD,oBAChF,gDACA,8DACE,8EAQF,iDACF,+CACF,8C,mCAdM,yFACyB,6EAID,gE,0BAxBhC,gCACE,2DASA,oFAwBF,oD,kCAjCyB,4DAapB,4D,gDC3DDs7C,GAAc,mBAMb,MAAMC,WAAyB,GAepC7nD,YACE6iD,EACQtiD,EACAL,EACA2O,EACA0H,EACAuf,EACAgyB,EACAznD,EACA0nD,EACA5/C,EACAi4B,EACAoZ,EACA3pC,EACAypC,GAER/lC,MAAMsvC,GAdE,KAAAtiD,MAAAA,EACA,KAAAL,OAAAA,EACA,KAAA2O,SAAAA,EACA,KAAA0H,OAAAA,EACA,KAAAuf,mBAAAA,EACA,KAAAgyB,kBAAAA,EACA,KAAAznD,aAAAA,EACA,KAAA0nD,WAAAA,EACA,KAAA5/C,YAAAA,EACA,KAAAi4B,cAAAA,EACA,KAAAoZ,kBAAAA,EACA,KAAA3pC,qBAAAA,EACA,KAAAypC,cAAAA,EA1BV,KAAA1Y,SAAmB,KACnB,KAAAmf,aAAuB,KACvB,KAAAl0C,KAAmB,KAGnB,KAAAm8C,kBAAmB,EAGX,KAAAC,iBAAkB,EAClB,KAAAC,iBAAkB,EAClB,KAAAjzB,mBAAqB,8BAmB3Bx0B,KAAKynD,gBACiC,MAAnC1lD,OAAewc,mBACdxc,OAAewc,iBAAiBhY,WAAW,YAG3C+K,W,0CACJtR,KAAKunD,kBAAoBvnD,KAAKoP,qBAAqBqmB,WACnDz1B,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mC,MAQ/D,GAPI3gB,KAAKynD,kBACPznD,KAAKqX,YAAcrX,KAAKJ,aAAa8nD,kCACvB,QAAV,EAAA1nD,KAAKqX,aAAK,eAAEosC,cACdzjD,KAAKyjD,WAAazjD,KAAKqX,MAAMosC,aAI7B9iC,EAAOiiC,QACT5iD,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,SACxC3Q,KAAK2iD,kBAAoB3iD,KAAK0H,YAAYiJ,EAAE,qBACtC3Q,KAAKia,KAAK,MAAM,QACjB,GAAI0G,EAAOvV,KAAM,CAGtB,OAFApL,KAAK2iD,kBAAoB3iD,KAAK0H,YAAYiJ,EAAE,cAC5C3Q,KAAKoL,KAAO1H,SAASid,EAAOvV,KAAM,MAC1BpL,KAAKoL,MACX,KAAKgmC,GAAW4F,MACdh3C,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,UACxC,MACF,KAAKygC,GAAW8F,KACdl3C,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,SACxC,MACF,KAAKygC,GAAW+F,SACdn3C,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,cACxC,MACF,KAAKygC,GAAW6F,WACdj3C,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,qBAKtC3Q,KAAKia,MAAMrU,GAAMA,EAAEwF,OAASpL,KAAKoL,YAClC,GAAIuV,EAAOwf,SAAU,CAG1B,GAFAngC,KAAKmgC,SAA+B,SAApBxf,EAAOwf,SAAsB,KAAOxf,EAAOwf,SAC3DngC,KAAK2iD,kBAAoB3iD,KAAK0H,YAAYiJ,EAAE,gBACvB,MAAjB3Q,KAAKmgC,SAAkB,CACzB,MAAMynB,QAAmB5nD,KAAK2/B,cAAckoB,UAAU7nD,KAAKmgC,UACzC,MAAdynB,GAAyC,MAAnBA,EAAWE,OACnC9nD,KAAK2nD,cAAgBC,EAAWE,KAAKxlD,KACrCtC,KAAK+nD,cACoB,MAAvBH,EAAWI,UAAoBJ,EAAWI,SAAS3kD,OAAS,EACxDukD,EAAWI,SACX,WAGRhoD,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,oBAEpC3Q,KAAKia,MAAMrU,GAAMA,EAAEu6B,WAAangC,KAAKmgC,gBACtC,GAAIxf,EAAO2+B,aAAc,CAC9Bt/C,KAAKs/C,aAAe3+B,EAAO2+B,aAC3Bt/C,KAAK2iD,kBAAoB3iD,KAAK0H,YAAYiJ,EAAE,oBAC5C,MAAMs3C,QAAuBjoD,KAAK+4C,kBAAkB8O,UAAU7nD,KAAKs/C,cAC7C,MAAlB2I,GAAiD,MAAvBA,EAAeH,OAC3C9nD,KAAK2nD,cAAgBM,EAAeH,KAAKxlD,KACzCtC,KAAKkoD,kBACwB,MAA3BD,EAAeD,UAAoBC,EAAeD,SAAS3kD,OAAS,EAChE4kD,EAAeD,SACf,YAEFhoD,KAAKia,MACRrU,GAAyB,MAAnBA,EAAE+wC,eAAyB/wC,EAAE+wC,cAAclwC,QAAQzG,KAAKs/C,eAAiB,SAGlFt/C,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,kBAClC3Q,KAAKia,OAGTja,KAAKynD,iBAAiC,MAAdznD,KAAKqX,OAC/BtV,OAAO2c,YACL,IACE1e,KAAKsnD,WAAW3yB,kBAAkB5yB,OAAQ/B,KAAKqX,MAAMud,QAAS50B,KAAKw0B,qBACrE,SAGEx0B,KAAKJ,aAAauoD,+BAA+B,WAGzDnoD,KAAKq1B,mBAAmBh0B,UAAU8lD,IAAcrzC,IAC9C9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,GACO,kBADChnB,EAAQrJ,QAERqJ,EAAQs0C,cACVrmD,OAAO2c,YAAW,KAChB1e,KAAKolC,YACJ,KAOTplC,KAAKqnD,kBAAkBvf,2BAK7BlmC,cACE5B,KAAKqoD,YACLroD,KAAKq1B,mBAAmBxzB,YAAYslD,IAGtChE,aAAatpB,GACX75B,KAAKsoD,gBAAkBvmD,OAAO2c,YAAW,KAClC1e,KAAKwnD,kBACR10C,MAAMqwC,aAAatpB,GACnB75B,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAUlhB,EAAO76B,OAE3EgB,KAAKwnD,iBAAkB,IACtB,KAGLe,aAAaxoB,GACM,MAAbA,EAAO/gC,IACTgB,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAE6/B,SAAUJ,EAAO/gC,MAIzEwpD,iBAAiBjJ,GACfv/C,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAEg/C,aAAcC,EAAWvgD,MAGzEwnD,aAAa3sB,G,0CACbA,EAAOzuB,OAASgmC,GAAW4F,OAAUnd,EAAOC,MAAM0b,YAI1B,MAAxBx1C,KAAKsoD,iBACPvmD,OAAOwjB,aAAavlB,KAAKsoD,iBAE3BtoD,KAAKwnD,iBAAkB,QACjBxnD,KAAK64C,cAAc4P,uBAAuB5uB,EAAO76B,IACvD4K,EAAWwwB,aAAaP,EAAOC,MAAM/hB,WACjC/X,KAAKsnD,WAAWhzB,QAAQvyB,SAC1B6H,EAAWsrB,WAAWnzB,YAI1BshD,YACE,GAAIrjD,KAAK4iD,QACP,OAAO,EAET9vC,MAAMuwC,YACNrjD,KAAKP,OAAOY,SAAS,CAAC,eAAgB,CACpCC,YAAa,CACX6/B,SAAUngC,KAAKmgC,SACf/0B,KAAMpL,KAAKoL,KACXk0C,aAAct/C,KAAKs/C,gBAKzBnnB,OACGp2B,OAAe2mD,eAAiB,IACjC1oD,KAAKoO,SAAS+pB,OAGhBwwB,gBACE,OACG3oD,KAAKujD,gBACJvjD,KAAK+nD,eAAiB/nD,KAAK+nD,cAAc1kD,QACxCrD,KAAKkoD,mBAAqBloD,KAAKkoD,kBAAkB7kD,QAI1CglD,Y,0CACZroD,KAAKqX,MAAQ,CACXud,QAAS50B,KAAKsnD,WAAW/yB,kBAAkBxyB,OAAQ/B,KAAKw0B,oBACxDivB,WAAYzjD,KAAKyjD,kBAEbzjD,KAAKJ,aAAauoD,+BAA+BnoD,KAAKqX,W,kCAhNnD+vC,IAAgB,8a,qCAAhBA,GAAgB,qsDDpC7B,gCACE,qDACE,0DAAmC,2CAAS,EAAAjvB,UAC1C,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDAAoB,gB,uBAAsB,oBAC1C,uDACE,2DAIE,sEAAwB,2BACf,EAAAjxB,OAAO,Q,uBALlB,oBASA,kDACF,2CACA,uDACE,4DAAmC,2CAAS,EAAAm8C,e,uBAC1C,qDACF,6CACF,2CACF,yCACA,0DACE,oEAgDA,oEAmCF,yCACA,sB,MA3GY,yEAGU,4EAGhB,wFACA,qGAEA,wCAQuD,+FAKpD,2FACQ,4DAgDA,sD,8fE7DV,MAAM,GAYX9jD,YACYw5C,EACA3pC,EACA1H,EACAmxC,EACFtjC,GAJE,KAAAwjC,kBAAAA,EACA,KAAA3pC,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAAmxC,cAAAA,EACF,KAAAtjC,WAAAA,EAfD,KAAAqzC,iBAAkB,EACjB,KAAAC,mBAAqB,IAAI,EAAAt5C,aAKnC,KAAAme,YAAgC,GAY1Bpc,W,gDACEtR,KAAKia,UAGPA,O,0CACJja,KAAKwgD,mBAAqBxgD,KAAKi7C,aAC/Bj7C,KAAK22C,cAAgB32C,KAAK8oD,wBAC1B9oD,KAAK65B,aAAe75B,KAAKwgD,aAAavnC,UACtCjZ,KAAK0tB,kBAAoB1tB,KAAK86C,kBAE9B96C,KAAK0tB,YAAYrmB,SAASzB,GAAQA,EAAUyzB,SAAU,IAC5B,MAAtBr5B,KAAK22C,eACP32C,KAAK0tB,YAAYrmB,SAASzB,IACvBA,EAAUyzB,QAAgC,MAAtBr5B,KAAK22C,eAAyB32C,KAAK22C,cAAclwC,QAAQb,EAAE5G,KAAO,QAKvFuR,S,0CACJ,MAAMw4C,EAAwB/oD,KAAK0tB,YAChCzsB,QAAQ2E,KAASA,EAAUyzB,UAC3Bp0B,KAAKW,GAAMA,EAAE5G,KAChB,GAAKgB,KAAK4oD,iBAAoD,IAAjCG,EAAsB1lD,OAAnD,CAQArD,KAAKwgD,aAAa7J,cAAgBoS,EAClC,IACE/oD,KAAKuW,YAAcvW,KAAKgpD,wBAClBhpD,KAAKuW,YACXvW,KAAK6oD,mBAAmB/3C,OACxB9Q,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,eACxE,MAAO/R,GACPoB,KAAKuV,WAAWK,MAAMhX,SAdtBoB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,2BAefsqC,aACR,OAAOj7C,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UAG3B+N,wBACR,OAAO9oD,KAAKwgD,aAAa7J,cAGXmE,kB,0CAEd,aAD6B96C,KAAK+4C,kBAAkBtY,mBAC9Bx/B,QACnB2E,IAAOA,EAAEi3C,UAAYj3C,EAAEowC,iBAAmBh2C,KAAK65B,OAAOmc,oBAIjDgT,kBACR,OAAOhpD,KAAK64C,cAAcoQ,0BAA0BjpD,KAAKwgD,e,kCA7EhD,IAAoB,sI,qCAApB,GAAoB,mH,kUCM3B,gCACE,4DACE,e,sBACF,oBACF,+C,MAFI,oH,yDAIF,gCAKE,gEAAgC,eAAY,oBAC5C,gEAGE,iGAHF,oBAMF,gD,sCAPS,wEAAyB,iDAE9B,uEAGA,gEADA,sC,0BAVN,gCACE,+DAaF,+C,kCAXkB,4DCXjB,MAAM0I,WAA6B,GACxC3pD,YACEw5C,EACA3pC,EACA1H,EACAmxC,EACQ/4C,EACAsO,EACRmH,GAEAzC,MAAMimC,EAAmB3pC,EAAsB1H,EAAamxC,EAAetjC,GAJnE,KAAAzV,MAAAA,EACA,KAAAsO,SAAAA,EAMJkD,W,0CACJtR,KAAK6oD,mBAAmBxnD,WAAU,KAChCrB,KAAKm4B,UAEPn4B,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC/D3gB,KAAK+6C,SAAWp6B,EAAOo6B,eACjB/6C,KAAKia,eAIfke,OACEn4B,KAAKoO,SAAS+pB,Q,kCAxBL+wB,IAAoB,mN,qCAApBA,GAAoB,2xB,GAAA,MDjBjC,kCAAY,8CAAY,EAAA34C,YACtB,sDACE,uDACE,4DAAmC,2CAAS,EAAA4nB,UAC1C,4DAA0B,yBAAqD,oBAC/E,4DAAM,gB,uBAAmB,oBAC3B,+CACF,6CACA,wDACE,4DAAoB,gB,uBAA0B,oBAChD,6CACA,yDACE,8DACE,+DAA8B,gB,uBAAmB,oBACjD,uDACF,+CACF,6CACF,2CACA,yDACE,0DACE,+DAKA,+DAeF,6CACF,2CACF,yCACA,sB,iCA3CkC,8CAKpB,yEAIY,gFAGe,wDAC3B,sDAAwB,yEACa,uDAMnB,gFAKA,gF,gLEvBzB,MAAegxB,I,oWCElB,kCAGE,mG,sBAIA,mDACF,4C,KAJE,2E,uBAyBJ,gCACE,iDACF,2C,yDAQM,2CAKE,8GAAiC,0F,sBAGnC,gD,4BALE,qEADA,4BAAsB,gB,yDAOxB,gCACE,4DAAuB,e,sBAA2B,oBAClD,iEAAqD,sGACnD,e,sBACF,oBACF,gD,MAJyB,+EAErB,6G,0BAlBR,gCACE,yDACE,e,sBACA,iCAAyB,eAAyB,oBACpD,8CACA,0DACE,4EASA,kEAMF,+CACF,8C,mCApBI,wGACyB,gEAIC,4DAQoB,kE,yDAc9C,2CAKE,8GAAiC,0F,sBAElC,oB,4BAJC,qEADA,4BAAqB,gB,0BAR3B,gCACE,yDACE,e,sBACA,iCAAyB,eAAwB,oBACnD,8CACA,0DACE,4EAQF,+CACF,8C,mCAbI,mGACyB,+DAIA,4D,yDAezB,2CAKE,8GAAiC,0F,sBAElC,oB,4BAJC,qEADA,4BAAyB,gB,0BAR/B,gCACE,yDACE,e,sBACA,iCAAyB,eAA4B,oBACvD,8CACA,0DACE,4EAQF,+CACF,8C,mCAbI,wGACyB,mEAII,gE,0BA/CnC,gCACE,4DAuBA,4DAgBA,4DAgBF,oD,kCAvDyB,yDAuBA,8EAgBA,uFCnD3B,MAAM,GAA4B,sBAM3B,MAAMC,GAiBX7pD,YACU6P,EACAypC,EACAvjB,EACA+zB,EACA3hD,EACAjI,EACAqW,EACAuf,EACAgyB,EACAlkC,EACAi/B,EACAxiD,EACAo5C,GAZA,KAAA5pC,qBAAAA,EACA,KAAAypC,cAAAA,EACA,KAAAvjB,kBAAAA,EACA,KAAA+zB,gBAAAA,EACA,KAAA3hD,YAAAA,EACA,KAAAjI,OAAAA,EACA,KAAAqW,OAAAA,EACA,KAAAuf,mBAAAA,EACA,KAAAgyB,kBAAAA,EACA,KAAAlkC,YAAAA,EACA,KAAAi/B,cAAAA,EACA,KAAAxiD,aAAAA,EACA,KAAAo5C,wBAAAA,EA7BV,KAAAsQ,YAAqB,GAOrB,KAAAn1B,WAAY,EACZ,KAAAozB,kBAAmB,EACnB,KAAA7E,QAAS,EAuBHpxC,W,0CACJtR,KAAKunD,kBAAoBvnD,KAAKoP,qBAAqBqmB,WACnDz1B,KAAKm0B,UAAYn0B,KAAKs1B,kBAAkBnB,UAAUpyB,QAElD/B,KAAKq1B,mBAAmBh0B,UAAU,IAA4ByS,IAC5D9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,OAAQhnB,EAAQrJ,SACd,IAAK,gBACCzK,KAAK0iD,QACP3gD,OAAO2c,YAAW,KAChB1e,KAAKia,SACJ,KAEL,MACF,IAAK,6BACCnG,EAAQnI,SAAW,IACrB3L,KAAKspD,YAAYx0C,KAAK,CACpBy0C,QAASz1C,EAAQ01C,aAAaD,QAC9B/+C,IAAKsJ,EAAQtJ,IACbi/C,QAAS31C,EAAQ21C,UAQzBzpD,KAAKqnD,kBAAkBvf,wBAItB9nC,KAAKmjB,YAAYumC,eAGpB1pD,KAAK2pD,cAAgB5nD,OAAO2c,YAAW,IAAY,mCAC5C1e,KAAK0iD,eACF1iD,KAAKia,YAEZ,WANGja,KAAKia,OASblY,OAAO2c,YAAW,KAChBnV,SAASqT,eAAe,UAAU5K,UACjC,QAGLpQ,cACEG,OAAOwjB,aAAavlB,KAAK2pD,eACzB3pD,KAAKq1B,mBAAmBxzB,YAAY,IAGhCujC,U,gDACEplC,KAAKia,UAGbopC,YACErjD,KAAKP,OAAOY,SAAS,CAAC,eAAgB,CAAEC,YAAa,CAAEgC,KAAMtC,KAAKoG,SAAUu0B,IAAK36B,KAAKI,OAGxF8mD,WAAWrtB,GACT75B,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAUlhB,EAAO76B,MAGrE4qD,WAAW/vB,G,0CACf,GACEA,EAAOgd,WAAa1F,GAAmB2F,aAC/B92C,KAAKg5C,wBAAwB4N,sBAUvC,GALA5mD,KAAK6pD,SAAW,KACQ,MAApB7pD,KAAK8pD,aACP/nD,OAAOwjB,aAAavlB,KAAK8pD,aAGH,MAApB9pD,KAAKspD,aAAmD,IAA5BtpD,KAAKspD,YAAYjmD,OAKjD,IACErD,KAAK6pD,eAAiB7pD,KAAKqpD,gBAAgBU,WAAW,CACpDlwB,OAAQA,EACRyvB,YAAatpD,KAAKspD,YAClBU,IAAKjoD,OAAOwH,SACZ0gD,iBAAiB,IAEE,MAAjBjqD,KAAK6pD,UACP7pD,KAAKoP,qBAAqB6nB,gBAAgBj3B,KAAK6pD,SAAU,CAAE9nD,SAEzD/B,KAAKs1B,kBAAkBhB,QAAQvyB,UAC7B/B,KAAKoP,qBAAqBomB,aAAex1B,KAAKoP,qBAAqBqmB,WACrE7rB,EAAWsrB,WAAWnzB,QAGtB2c,YAAW,IAAM9U,EAAWsrB,WAAWnzB,SAAS,KAGpD,SACA/B,KAAK8V,OAAOglB,KAAI,KACd96B,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBACtE3Q,KAAKqnD,kBAAkBvf,wBAzBzB9nC,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,qBA8B1Eu5C,cAC4B,MAAtBlqD,KAAK8iD,eACPv9B,aAAavlB,KAAK8iD,eAEf9iD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,cAG1CzjD,KAAK8iD,cAAgB/gD,OAAO2c,YAAW,IAAY,mCACjD1e,KAAKP,OAAOY,SAAS,CAAC,eAAgB,CAAEC,YAAa,CAAEmjD,WAAYzjD,KAAKyjD,kBACvE,MAGL0G,WAAWvrD,GAEK,WAAVA,EAAE0V,KAAwC,MAAnBtU,KAAKyjD,YAA0C,KAApBzjD,KAAKyjD,YACzD75C,EAAWsrB,WAAWnzB,QAIZkY,O,0CACZ,MAAMzP,QAAYZ,EAAWwgD,0BAC7B,GAAW,MAAP5/C,EAKF,OAFAxK,KAAKqqD,aAAe,QACpBrqD,KAAK0iD,QAAS,GAHd1iD,KAAKI,IAAMoK,EAAIpK,IAOjBJ,KAAKoG,SAAWpE,EAAM+b,YAAY/d,KAAKI,KACvCJ,KAAKspD,YAAc,GACnB1/C,EAAWe,eAAeH,EAAK,CAC7BC,QAAS,qBACTD,IAAKA,EACLmB,OAAQ,KAGV,MAAM2+C,EAA2B,GAC3BhpB,QAAsBthC,KAAKJ,aAAamjC,6BACxCxB,QAA2BvhC,KAAKJ,aAAaojC,kCAC9C1B,GACHgpB,EAAWx1C,KAAKs8B,GAAW8F,MAExB3V,GACH+oB,EAAWx1C,KAAKs8B,GAAW+F,UAG7B,MAAM5pB,QAAgBvtB,KAAK64C,cAAc0R,sBACvCvqD,KAAKI,IACLkqD,EAAWjnD,OAAS,EAAIinD,EAAa,MAGvCtqD,KAAKqqD,aAAe,GACpBrqD,KAAKwqD,YAAc,GACnBxqD,KAAKyqD,gBAAkB,GAEvBl9B,EAAQlmB,SAASzB,IACf,OAAQA,EAAEwF,MACR,KAAKgmC,GAAW4F,MACdh3C,KAAKqqD,aAAav1C,KAAKlP,GACvB,MACF,KAAKwrC,GAAW8F,KACdl3C,KAAKwqD,YAAY11C,KAAKlP,GACtB,MACF,KAAKwrC,GAAW+F,SACdn3C,KAAKyqD,gBAAgB31C,KAAKlP,OAOhC5F,KAAKqqD,aAAerqD,KAAKqqD,aAAal5B,MAAK,CAACvpB,EAAGC,IAC7C7H,KAAK64C,cAAc6R,8BAA8B9iD,EAAGC,KAEtD7H,KAAK0iD,QAAS,M,kCAvNL0G,IAAmB,2X,qCAAnBA,GAAmB,ojCD/BhC,gCACE,oDAAoB,e,sBAAyB,oBAC7C,qDACE,0DACA,8DASF,2CACA,uDACE,2DAIE,sEAAwB,2BACf,EAAAc,gBADT,CAAwB,8BAGb,EAAAC,WAAA,M,uBAPb,oBASA,kDACF,2CACA,uDACE,4DAAmC,2CAAS,EAAA9G,e,uBAC1C,oDACF,6CACF,2CACF,yCACA,uDACE,2DAGA,oEAyDF,yCACA,sB,MA7FsB,6EAEL,uDAMV,sDAOD,wFACA,gFAEA,wCAQuD,+FAMpC,qDAGR,qD,qaEtBV,MAAM,GA+BX9jD,YACYw5C,EACApZ,EACA//B,GAFA,KAAAm5C,kBAAAA,EACA,KAAApZ,cAAAA,EACA,KAAA//B,aAAAA,EAjCH,KAAA+qD,aAAc,EACd,KAAAC,iBAAkB,EAClB,KAAAC,eAAgB,EAChB,KAAAC,WAAY,EAEX,KAAAC,aAAe,IAAI,EAAAx7C,aACnB,KAAAy7C,mBAAqB,IAAI,EAAAz7C,aACzB,KAAA07C,eAAiB,IAAI,EAAA17C,aACrB,KAAA27C,oBAAsB,IAAI,EAAA37C,aAC1B,KAAA47C,gBAAkB,IAAI,EAAA57C,aACtB,KAAA67C,YAAc,IAAI,EAAA77C,aAClB,KAAA87C,aAAe,IAAI,EAAA97C,aACnB,KAAA+7C,oBAAsB,IAAI,EAAA/7C,aAMpC,KAAAmzC,QAAkB,EAClB,KAAA7I,WAAazI,GACb,KAAAma,aAAuB,EACvB,KAAAC,mBAA6B,EAC7B,KAAAC,eAAyB,EACzB,KAAAC,aAA2B,KAC3B,KAAAC,gBAA0B,EAC1B,KAAAC,iBAA2B,KAC3B,KAAAC,qBAA+B,KAUzB5xC,KAAK6xC,GAAY,G,0CACrB,MAAMC,QAA2B/rD,KAAKJ,aAAaosD,wBAEjDhsD,KAAK+rD,mBADmB,MAAtBA,EACwB,IAAItwB,IAEJ,IAAIA,IAAIswB,SAG9B/rD,KAAKisD,oBACLjsD,KAAK86C,kBAEPgR,IACF9rD,KAAK0iD,QAAS,MAIZ5H,gBAAgB9E,G,0CACpB,IAAKh2C,KAAK4qD,gBACR,OAEF,MAAMl9B,QAAoB1tB,KAAK+4C,kBAAkBtY,kBAE/CzgC,KAAK0tB,YADe,MAAlBsoB,EACiBtoB,EAAYzsB,QAAQ2E,GAAMA,EAAEowC,iBAAmBA,IAE/CtoB,EAErB1tB,KAAKkoD,wBAA0BloD,KAAK+4C,kBAAkBmT,aAAalsD,KAAK0tB,gBAGpEu+B,c,0CACCjsD,KAAK2qD,cAGV3qD,KAAKwtB,cAAgBxtB,KAAK2/B,cAAcc,kBACxCzgC,KAAK+nD,oBAAsB/nD,KAAK2/B,cAAcusB,mBAGhDC,YACEnsD,KAAKosD,kBACLpsD,KAAKurD,aAAc,EACnBvrD,KAAK+qD,aAAaj6C,OAGpBu7C,kBACErsD,KAAKosD,kBACLpsD,KAAKwrD,mBAAoB,EACzBxrD,KAAKgrD,mBAAmBl6C,OAG1Bw7C,cACEtsD,KAAKosD,kBACLpsD,KAAKyrD,eAAgB,EACrBzrD,KAAKirD,eAAen6C,OAGtBy7C,WAAWnhD,GACTpL,KAAKosD,kBACLpsD,KAAK0rD,aAAetgD,EACpBpL,KAAKkrD,oBAAoBp6C,KAAK1F,GAGhCm9C,aAAaxoB,GACX//B,KAAKosD,kBACLpsD,KAAK2rD,gBAAiB,EACtB3rD,KAAK4rD,iBAAmB7rB,EAAO/gC,GAC/BgB,KAAKmrD,gBAAgBr6C,KAAKivB,GAG5BY,YACE3gC,KAAKorD,YAAYt6C,OAGnB07C,WAAWzsB,GACT//B,KAAKqrD,aAAav6C,KAAKivB,GAGzByoB,iBAAiBjJ,GACfv/C,KAAKosD,kBACLpsD,KAAK6rD,qBAAuBtM,EAAWvgD,GACvCgB,KAAKsrD,oBAAoBx6C,KAAKyuC,GAGhC6M,kBACEpsD,KAAKurD,aAAc,EACnBvrD,KAAKwrD,mBAAoB,EACzBxrD,KAAKyrD,eAAgB,EACrBzrD,KAAK0rD,aAAe,KACpB1rD,KAAK2rD,gBAAiB,EACtB3rD,KAAK4rD,iBAAmB,KACxB5rD,KAAK6rD,qBAAuB,KAGxBY,SAASC,EAAuCC,EAAW,I,0CAC/D,GAAmB,MAAfD,EAAS1tD,GACX,OAEF,MAAMA,EAAK2tD,EAAWD,EAAS1tD,GAC3BgB,KAAK4sD,YAAYF,EAAUC,GAC7B3sD,KAAK+rD,mBAAmBrwB,OAAO18B,GAE/BgB,KAAK+rD,mBAAmBn6C,IAAI5S,SAExBgB,KAAKJ,aAAaitD,sBAAsB7sD,KAAK+rD,uBAGrDa,YAAYF,EAAuCC,EAAW,IAC5D,OAAO3sD,KAAK+rD,mBAAmBn2B,IAAI+2B,EAAWD,EAAS1tD,K,kCA/I9C,IAAkB,kF,qCAAlB,GAAkB,qZ,iUCY3B,yB,yDACA,gCACE,qDACA,qDAAG,e,sBAA4B,oBAC/B,6DAAsB,sGACpB,e,uBACF,oBACF,sD,MAJK,gFAED,qG,0BANN,gCACE,yDACA,oEAOF,2C,kCAR8C,oDAC7B,oD,yDAeX,2CAIE,gHAAmC,iG,sBAGrC,gD,4BAJE,qEADA,6B,0BARN,gCACE,yDACE,e,sBACA,iCAAyB,eAA4B,oBACvD,8CACA,0DACE,4EAQF,+CACF,8C,mCAbI,uGACyB,mEAII,gE,yDA+E7B,mCAME,iIAEA,8DACE,gEACE,2DACF,oDACA,iEAAmB,gBAAiB,oBACtC,mDACA,iEAA4B,gBAAsC,oBAClE,8DAAM,0BAAuD,oBAC/D,iD,oDAJuB,uDAEO,4E,0BApBlC,gCACE,yDACE,e,sBACA,iCAAyB,eAAiB,oBAC5C,8CACA,0DACE,qEAiBF,+CACF,8C,mCAtBI,qGACyB,wDAKT,8D,yDAuBhB,mCAME,qIAEA,8DACE,gEAAkB,yBAAgD,oBAClE,iEAAmB,eAAgC,oBACrD,kDACA,iEAA4B,gBAE1B,oBACF,8DAAM,0BAAuD,oBAC/D,iD,oDANuB,sDAEO,gF,0BAlBlC,gCACE,yDACE,e,sBACA,iCAAyB,eAA8B,oBACzD,8CACA,0DACE,qEAiBF,+CACF,8C,mCAtBI,yGACyB,qEAKM,kE,yDAuB/B,2CAIE,gHAAmC,iG,sBAGrC,gD,4BAJE,qEADA,6B,0BARN,gCACE,yDACE,e,sBACA,gCAAwB,eAA4B,oBACtD,8CACA,0DACE,4EAQF,+CACF,8C,mCAbI,wGACwB,mEAIK,gE,yDASjC,gCACE,yDACE,e,sBACA,iCAAyB,eAAkB,oBAC7C,8CACA,0DACE,iEAKE,wGAEA,gEACE,kEAAkB,0BAA2C,oBAC7D,mEAAmB,gB,uBAAoB,oBACzC,mDACA,iEAA4B,gBAAkB,oBAC9C,8DAAM,0BAAuD,oBAC/D,iDACF,+CACF,6C,sCAnBI,mGACyB,yDAYF,0EAEO,0D,yDApKpC,gCACE,4DAgBA,wDACE,yDACE,e,sBACA,iCAAyB,oBAAC,oBAC5B,+CACA,4DACE,iEAKE,kIAEA,gEACE,kEAAkB,0BAA2C,oBAC7D,mEAAmB,gB,uBAAwB,oBAC7C,mDACA,iEAA4B,gBAA2C,oBACvE,8DAAM,0BAAuD,oBAC/D,iDACA,iEAKE,iIAEA,gEACE,kEAAkB,0BAAiD,oBACnE,mEAAmB,gB,uBAAuB,oBAC5C,mDACA,iEAA4B,gBAA0C,oBACtE,8DAAM,0BAAuD,oBAC/D,iDACA,iEAKE,qIAEA,gEACE,kEAAkB,0BAA6C,oBAC/D,mEAAmB,gB,uBAA2B,oBAChD,mDACA,iEAA4B,gBAA8C,oBAC1E,8DAAM,0BAAuD,oBAC/D,iDACA,iEAKE,uIAEA,gEACE,kEAAkB,0BAAiD,oBACnE,mEAAmB,gB,uBAA6B,oBAClD,mDACA,iEAA4B,gBAAgD,oBAC5E,8DAAM,0BAAuD,oBAC/D,iDACF,+CACF,6CACA,8DAyBA,8DAyBA,8DAgBA,8DAsBF,qD,qCAxKyB,4DAkBnB,oGAauB,+EAEO,kFAYP,8EAEO,iFAYP,kFAEO,qFAYP,oFAEO,uFAKX,4FAyBA,0FAyBA,gEAgBA,0D,uBAwBvB,gCACE,qDAAG,e,sBAA4B,oBACjC,6C,MADK,iF,yDAUC,2CAIE,gHAAmC,iG,sBAGrC,kD,4BAJE,qEADA,6B,0BAVR,wDAME,0DACE,4DACE,4EAQF,gDACF,8CACF,6C,mCAT2C,gE,0BAb7C,gCACE,0DAGA,oFAmBF,oD,kCAtByB,wEAOpB,yECvLP,MAAM,GAAc,qBAMb,MAAM8tD,WAA2B,GAkCtCvtD,YACEw5C,EACApZ,EACQkZ,EACAp5C,EACAqW,EACAuf,EACAgyB,EACAvnD,EACAwnD,EACAnkC,EACA/T,EACAgzC,EACAh0C,EACA2+C,GAERj6C,MAAMimC,EAAmBpZ,EAAeotB,GAbhC,KAAAlU,cAAAA,EACA,KAAAp5C,OAAAA,EACA,KAAAqW,OAAAA,EACA,KAAAuf,mBAAAA,EACA,KAAAgyB,kBAAAA,EACA,KAAAvnD,MAAAA,EACA,KAAAwnD,WAAAA,EACA,KAAAnkC,YAAAA,EACA,KAAA/T,qBAAAA,EACA,KAAAgzC,cAAAA,EACA,KAAAh0C,SAAAA,EACA,KAAA2+C,oBAAAA,EAjCV,KAAAC,aAAe,IAAI7lD,IACnB,KAAA8lD,iBAAmB,IAAI9lD,IACvB,KAAA+lD,WAAa,IAAI/lD,IAGjB,KAAAgmD,gBAAiB,EACjB,KAAAtK,eAAgB,EAChB,KAAA0E,kBAAmB,EACnB,KAAA6F,aAAe,EAIP,KAAA5F,iBAAkB,EAClB,KAAA6F,iBAAmB,IACnB,KAAAvK,cAAqB,KACrB,KAAAwK,aAAc,EACd,KAAAC,qBAAsB,EACtB,KAAAC,WAA2B,KAmBjCxtD,KAAKqtD,iBAAmB,IAlDtBI,0BACF,OAC0B,MAAxBztD,KAAK0tD,iBACL1tD,KAAK0tD,gBAAgBrqD,OAASrD,KAAKqtD,kBACP,IAA5BrtD,KAAK0tB,YAAYrqB,OAIjBsqD,kBACF,OAAO3tD,KAAK+nD,cAAc1kD,QAAUrD,KAAKytD,oBAAsB,EAAI,GA4C/Dn8C,W,0CACJtR,KAAKunD,kBAAoBvnD,KAAKoP,qBAAqBqmB,WACnDz1B,KAAKmtD,iBACHntD,KAAKsnD,WAAWnzB,UAAUpyB,SAAW/B,KAAKoP,qBAAqBomB,mBAE3Dx1B,KAAK+sD,oBAAoB5E,+BAA+B,MAE9DnoD,KAAKq1B,mBAAmBh0B,UAAU,IAAcyS,IAC9C9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,GACO,kBADChnB,EAAQrJ,QAEZ1I,OAAO2c,YAAW,KAChB1e,KAAKia,SACJ,KAMPja,KAAKqnD,kBAAkBvf,wBAI3B,MAAM8lB,QAA2B5tD,KAAK6tD,eACtC7tD,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mC,MAC/D3gB,KAAKqX,YAAcrX,KAAK+sD,oBAAoBe,oCAC9B,QAAV,EAAA9tD,KAAKqX,aAAK,eAAEosC,YACdzjD,KAAKyjD,WAAazjD,KAAKqX,MAAMosC,WACpB9iC,EAAO8iC,aAChBzjD,KAAKyjD,WAAa9iC,EAAO8iC,WACzBzjD,KAAKoO,SAAS2/C,aAAa,UAGxB/tD,KAAKmjB,YAAYumC,eAGpB1pD,KAAK2pD,cAAgB5nD,OAAO2c,YAAW,KAChC1e,KAAK0iD,QACR1iD,KAAKia,SAEN,KANHja,KAAKia,OASFja,KAAKmjB,YAAYumC,iBAAkBkE,GACtC7rD,OAAO2c,YAAW,KAAK,MAAC,OAAA1e,KAAKsnD,WAAW3yB,kBAAkB5yB,OAAkB,QAAV,EAAA/B,KAAKqX,aAAK,eAAEud,WAAU,WAK9FhzB,cAC4B,MAAtB5B,KAAK2pD,eACP5nD,OAAOwjB,aAAavlB,KAAK2pD,eAEC,MAAxB3pD,KAAKsoD,iBACPvmD,OAAOwjB,aAAavlB,KAAKsoD,iBAE3BtoD,KAAKqoD,YACLroD,KAAKq1B,mBAAmBxzB,YAAY,IAGhCoY,O,gLACE,EAAMA,KAAI,WAAC,SACXja,KAAKguD,cACPhuD,KAAKytD,qBAAuBztD,KAAK+nD,cAAc1kD,OAAS,IAE1DrD,KAAK+nD,cAAgB/nD,KAAK+nD,cAAc3iD,MAAM,EAAGpF,KAAK+nD,cAAc1kD,OAAS,IAG/E,EAAMq/C,QAAS,KAGXsL,c,0CACJhuD,KAAKwtD,iBAAmBxtD,KAAK64C,cAAcpY,kBACtCzgC,KAAKutD,sBACRvtD,KAAKutD,qBAAuBvtD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,aAEnEzjD,KAAKotD,aAAeptD,KAAKwtD,WAAWvsD,QAAQ2E,GAAMA,EAAE6xC,YAAWp0C,aACzDrD,KAAKkH,OAAO,MAClB,IAAI+mD,EAAgC,KAChCP,EAAgC,KACpC,MAAMV,EAAe,IAAI7lD,IACnB8lD,EAAmB,IAAI9lD,IACvB+lD,EAAa,IAAI/lD,IAEvBnH,KAAKutB,QAAQlmB,SAASzB,IAChBA,EAAE6xC,YAGF7xC,EAAEswC,WACmB,MAAnB+X,IACFA,EAAkB,IAEpBA,EAAgBn5C,KAAKlP,IAGL,MAAdA,EAAEu6B,WACmB,MAAnButB,IACFA,EAAkB,IAEpBA,EAAgB54C,KAAKlP,IAGnBsnD,EAAWt3B,IAAIhwB,EAAEwF,MACnB8hD,EAAW1lD,IAAI5B,EAAEwF,KAAM8hD,EAAWp6B,IAAIltB,EAAEwF,MAAQ,GAEhD8hD,EAAW1lD,IAAI5B,EAAEwF,KAAM,GAGrB4hD,EAAap3B,IAAIhwB,EAAEu6B,UACrB6sB,EAAaxlD,IAAI5B,EAAEu6B,SAAU6sB,EAAal6B,IAAIltB,EAAEu6B,UAAY,GAE5D6sB,EAAaxlD,IAAI5B,EAAEu6B,SAAU,GAGR,MAAnBv6B,EAAE+wC,eACJ/wC,EAAE+wC,cAActvC,SAAS6mD,IACnBjB,EAAiBr3B,IAAIs4B,GACvBjB,EAAiBzlD,IAAI0mD,EAAOjB,EAAiBn6B,IAAIo7B,GAAS,GAE1DjB,EAAiBzlD,IAAI0mD,EAAO,UAMpCluD,KAAKiuD,gBAAkBA,EACvBjuD,KAAK0tD,gBAAkBA,EACvB1tD,KAAKktD,WAAaA,EAClBltD,KAAKgtD,aAAeA,EACpBhtD,KAAKitD,iBAAmBA,KAGpB/lD,OAAOkO,EAAkB,M,0CAC7BpV,KAAK6iD,eAAgB,EACK,MAAtB7iD,KAAK8iD,eACPv9B,aAAavlB,KAAK8iD,eAEpB,MAAMqL,EAAiBvoD,IAAmBA,EAAE6xC,UAC5C,GAAe,MAAXriC,EAOF,OANApV,KAAKstD,YAActtD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,iBACxDzjD,KAAKutB,cAAgBvtB,KAAKoiD,cAAcsB,cACtC1jD,KAAKyjD,WACL0K,EACAnuD,KAAKwtD,aAITxtD,KAAK6iD,eAAgB,EACrB7iD,KAAK8iD,cAAgBpkC,YAAW,IAAY,mCAC1C1e,KAAKstD,YAActtD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YACnDzjD,KAAKutD,qBAAwBvtD,KAAKstD,YAGrCttD,KAAKutB,cAAgBvtB,KAAKoiD,cAAcsB,cACtC1jD,KAAKyjD,WACL0K,EACAnuD,KAAKwtD,kBALDxtD,KAAKguD,cAQbhuD,KAAK6iD,eAAgB,MACpBztC,MAGCm3C,WAAWnhD,G,8GACf,EAAMmhD,WAAU,UAACnhD,GACjBpL,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAE8K,KAAMA,QAGtDm9C,aAAaxoB,G,kHACjB,EAAMwoB,aAAY,UAACxoB,GACnB//B,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAE6/B,SAAUJ,EAAO/gC,IAAM,aAGvEwpD,iBAAiBjJ,G,0HACrB,EAAMiJ,iBAAgB,UAACjJ,GACvBv/C,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAEg/C,aAAcC,EAAWvgD,SAGzEstD,c,gHACJ,EAAMA,YAAW,WACjBtsD,KAAKP,OAAOY,SAAS,CAAC,YAAa,CAAEC,YAAa,CAAEsiD,SAAS,QAGzDO,aAAatpB,G,0CACjB75B,KAAKsoD,gBAAkBvmD,OAAO2c,YAAW,KAClC1e,KAAKwnD,iBACRxnD,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAUlhB,EAAO76B,MAE3EgB,KAAKwnD,iBAAkB,IACtB,QAGChB,aAAa3sB,G,0CACbA,EAAOzuB,OAASgmC,GAAW4F,OAAUnd,EAAOC,MAAM0b,YAI1B,MAAxBx1C,KAAKsoD,iBACPvmD,OAAOwjB,aAAavlB,KAAKsoD,iBAE3BtoD,KAAKwnD,iBAAkB,QACjBxnD,KAAK64C,cAAc4P,uBAAuB5uB,EAAO76B,IACvD4K,EAAWwwB,aAAaP,EAAOC,MAAM/hB,WACjC/X,KAAKsnD,WAAWhzB,QAAQvyB,SAC1B6H,EAAWsrB,WAAWnzB,YAIpBshD,Y,0CACJrjD,KAAKP,OAAOY,SAAS,CAAC,mBAGxB+tD,gBACE,OACEpuD,KAAKstD,cAAiBttD,KAAK6iD,eAAiB7iD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YAIrF0G,WAAWvrD,GAEK,WAAVA,EAAE0V,KAAwC,MAAnBtU,KAAKyjD,YAA0C,KAApBzjD,KAAKyjD,YACzD75C,EAAWsrB,WAAWnzB,QAIZsmD,Y,0CACZroD,KAAKqX,MAAQ,CACXud,QAAS50B,KAAKsnD,WAAW/yB,kBAAkBxyB,QAC3C0hD,WAAYzjD,KAAKyjD,WACjBwK,gBAAiBjuD,KAAKiuD,gBACtBP,gBAAiB1tD,KAAK0tD,gBACtBngC,QAASvtB,KAAKutB,QACd0/B,iBAAkBjtD,KAAKitD,iBACvBD,aAAchtD,KAAKgtD,aACnBE,WAAYltD,KAAKktD,WACjB1/B,QAASxtB,KAAKwtB,QACdE,YAAa1tB,KAAK0tB,YAClB0/B,aAAcptD,KAAKotD,oBAEfptD,KAAK+sD,oBAAoBsB,iCAAiCruD,KAAKqX,UAGzDw2C,e,0CAEZ,OADA7tD,KAAKqX,YAAcrX,KAAK+sD,oBAAoBe,mCAC1B,MAAd9tD,KAAKqX,QAIyB,MAA9BrX,KAAKqX,MAAM42C,kBACbjuD,KAAKiuD,gBAAkBjuD,KAAKqX,MAAM42C,iBAEF,MAA9BjuD,KAAKqX,MAAMq2C,kBACb1tD,KAAK0tD,gBAAkB1tD,KAAKqX,MAAMq2C,iBAEV,MAAtB1tD,KAAKqX,MAAMkW,UACbvtB,KAAKutB,QAAUvtB,KAAKqX,MAAMkW,SAEO,MAA/BvtB,KAAKqX,MAAM41C,mBACbjtD,KAAKitD,iBAAmBjtD,KAAKqX,MAAM41C,kBAEN,MAA3BjtD,KAAKqX,MAAM21C,eACbhtD,KAAKgtD,aAAehtD,KAAKqX,MAAM21C,cAEJ,MAAzBhtD,KAAKqX,MAAM61C,aACbltD,KAAKktD,WAAaltD,KAAKqX,MAAM61C,YAEL,MAAtBltD,KAAKqX,MAAMmW,UACbxtB,KAAKwtB,QAAUxtB,KAAKqX,MAAMmW,SAEE,MAA1BxtB,KAAKqX,MAAMqW,cACb1tB,KAAK0tB,YAAc1tB,KAAKqX,MAAMqW,aAED,MAA3B1tB,KAAKqX,MAAM+1C,eACbptD,KAAKotD,aAAeptD,KAAKqX,MAAM+1C,eAG1B,O,kCA1UEN,IAAkB,+a,qCAAlBA,GAAkB,kwDDpC/B,gCACE,qDACE,wDACF,0CACA,oDAAoB,e,sBAAsB,oBAC1C,uDACE,2DAIE,sEAAwB,2BACf,EAAA5lD,OAAO,OADhB,CAAwB,8BAIb,EAAAijD,WAAA,M,uBARb,oBAUA,kDACF,2CACA,uDACE,4DAAmC,2CAAS,EAAA9G,e,uBAC1C,oDACF,6CACF,2CACF,yCACA,uDACE,0DAUA,sEA0KA,mEAwBF,yCACA,sB,MAlOsB,0EAGhB,wFACA,gFAEA,wCASuD,+FAMpC,6FAUR,0FA0KA,8D,sfEpMV,MAAM,GAIX9jD,YACYs5C,EACAzpC,EACA1H,EACFmB,GAHE,KAAAgwC,cAAAA,EACA,KAAAzpC,qBAAAA,EACA,KAAA1H,YAAAA,EACF,KAAAmB,IAAAA,EANV,KAAA+tB,QAAiC,GAS3BtlB,W,gDACEtR,KAAK2J,UAGbotB,KAAK5G,GACH,MAAM6G,EAA0B,MAAZh3B,KAAK6I,IAAc,CAAE9G,OAAQ/B,KAAK6I,KAAQ,KAC9D7I,KAAKoP,qBAAqB6nB,gBAAgB9G,EAAU6G,GACpDh3B,KAAKoP,qBAAqBsB,UACxB,OACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE,cAIzChH,O,0CACd,MAAMkwB,QAAe75B,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UAC3CuT,QAAkBz0B,EAAO5gB,UAC/BjZ,KAAK42B,QAAuC,MAA7B03B,EAAU5X,gBAA0B,GAAK4X,EAAU5X,oB,kCA5BzD,IAAwB,sGAQpB5pB,U,qCARJ,K,oWCGP,gCACE,4DACE,8DACE,iEACE,eACF,oBACA,iEAAqB,gB,uBAAqC,oBAC5D,mDACF,iDACA,8DACE,mEAKE,6H,uBAEA,2DACF,mDACF,iDACF,+C,4BAhBQ,0FAEmB,yFAQrB,oG,0BAhBV,+BACE,uDACE,6DAqBF,4CACF,2C,kCAtBoE,wD,uBAuBpE,gCACE,mDAAG,e,sBAAgC,oBACrC,2C,MADK,qFCpBA,MAAMyhC,WAAiC,GAC5ChvD,YACEs5C,EACAzpC,EACA1H,EACQ0G,EACAtO,GAERgT,MAAM+lC,EAAezpC,EAAsB1H,EAAa3F,QAHhD,KAAAqM,SAAAA,EACA,KAAAtO,MAAAA,EAKJwR,W,0CACJtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC3DA,EAAOo6B,SACT/6C,KAAK+6C,SAAWp6B,EAAOo6B,SAEvB/6C,KAAKwM,cAEDxM,KAAK2J,eAIf6C,QACExM,KAAKoO,SAAS+pB,Q,kCAvBLo2B,IAAwB,8J,qCAAxBA,GAAwB,qsBDhBrC,gCACE,qDACE,0DAAmC,2CAAS,EAAA/hD,WAAS,e,sBAAoB,oBAC3E,0CACA,oDACE,0DAAoB,gB,uBAA8B,oBACpD,2CACA,kDACF,yCACA,uDACE,0DAyBA,0DAGF,yCACA,sB,MArCyD,wEAGjC,mFAKW,sEAyBV,0E,2XEjBlB,MAAM,GAYXjN,YACYw5C,EACA3pC,EACA1H,EACAmxC,EACFtjC,EACE0jC,GALA,KAAAF,kBAAAA,EACA,KAAA3pC,qBAAAA,EACA,KAAA1H,YAAAA,EACA,KAAAmxC,cAAAA,EACF,KAAAtjC,WAAAA,EACE,KAAA0jC,oBAAAA,EAfF,KAAAuV,eAAiB,IAAI,EAAAj/C,aAI/B,KAAAme,YAAgC,GAChC,KAAA+gC,cAAgC,GAEtB,KAAA5T,qBAAyC,GAW7CvpC,W,gDACEtR,KAAKia,UAGPA,O,0CACJ,MAAMy0C,QAAuB1uD,KAAK+4C,kBAAkBtY,kBACpDzgC,KAAK66C,qBAAuB6T,EAAezpD,KAAKW,GAAMA,IAAG3E,QAAQ2E,IAAOA,EAAEi3C,WAC1E,MAAM8R,QAAa3uD,KAAKi5C,oBAAoB5M,SAC5CrsC,KAAKyuD,cAAgBE,EAClBx9B,KAAKnvB,EAAMy4C,gBAAgBz6C,KAAK0H,YAAa,SAC7CzG,QAAQy5C,GAAMA,EAAEC,SAAWD,EAAEhnC,SAAW29B,GAA2BuJ,YAEtE,MAAM4F,QAAqBxgD,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UACvD/6C,KAAK65B,aAAe2mB,EAAavnC,UACN,MAAvBjZ,KAAKg2C,gBAA0Bh2C,KAAKyuD,cAAcprD,OAAS,IAC7DrD,KAAKg2C,eAAiBh2C,KAAKyuD,cAAc,GAAGzvD,IAE9CgB,KAAK4uD,uBAGPA,oBACE5uD,KAAK66C,qBAAqBxzC,SAASzB,GAAQA,EAAUyzB,SAAU,IACpC,MAAvBr5B,KAAKg2C,gBAA+D,IAArCh2C,KAAK66C,qBAAqBx3C,OAC3DrD,KAAK0tB,YAAc,GAEnB1tB,KAAK0tB,YAAc1tB,KAAK66C,qBAAqB55C,QAC1C2E,GAAMA,EAAEowC,iBAAmBh2C,KAAKg2C,iBAKjCzlC,S,kDACJ,MAAMw4C,EAAwB/oD,KAAK0tB,YAChCzsB,QAAQ2E,KAASA,EAAUyzB,UAC3Bp0B,KAAKW,GAAMA,EAAE5G,KAChB,GAAqC,IAAjC+pD,EAAsB1lD,OAMxB,YALArD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,wBAKvB,MAAM6vC,QAAqBxgD,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UACjD8T,QAAmBrO,EAAavnC,UAChC61C,EAC8D,QAAlE,EAA4D,QAA5D,EAAA9uD,KAAKyuD,cAAc7Y,MAAM8E,GAAMA,EAAE17C,KAAOgB,KAAKg2C,wBAAe,eAAE1zC,YAAI,QAClEtC,KAAK0H,YAAYiJ,EAAE,gBAErB,IAYE,OAXA3Q,KAAKuW,YAAcvW,KAAK64C,cACrBkW,gBAAgBF,EAAY7uD,KAAKg2C,eAAgB+S,GACjDpqD,MAAK,IAAY,mCAChBqB,KAAKwuD,eAAe19C,OACpB9Q,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,iBAAkBk+C,EAAWvsD,KAAMwsD,eAGtD9uD,KAAKuW,aACJ,EACP,MAAO3X,GACPoB,KAAKuV,WAAWK,MAAMhX,GAExB,OAAO,KAGLowD,cACF,GAAwB,MAApBhvD,KAAK0tB,YACP,IAAK,IAAIpqB,EAAI,EAAGA,EAAItD,KAAK0tB,YAAYrqB,OAAQC,IAC3C,GAAKtD,KAAK0tB,YAAYpqB,GAAW+1B,QAC/B,OAAO,EAIb,OAAO,G,kCAlGE,IAAc,iK,qCAAd,GAAc,yG,qUCTrB,mCAME,6DAA8B,e,sBAAmB,oBACjD,qDACF,+C,wDALE,kDAGM,sDAAwB,uEACa,wD,uBAM7C,gCACE,4DACE,e,sBACF,oBACF,+C,MAFI,oH,0BAYE,mCAAyD,eAAY,qB,yBAA7B,gCAAiB,kD,yDAT/D,gCACE,4DACE,gEAA0B,e,sBAA2B,oBACrD,iEAGE,mHAA4B,8FAG5B,uEACF,mDACF,iDACF,+C,qCAV8B,+EAIxB,8DAGsB,8D,uBAY5B,gCACE,4DACE,e,sBACF,oBACF,+C,MAFI,oH,yDAIF,gCAKE,gEAAgC,eAAY,oBAC5C,gEAGE,iGAHF,oBAMF,gD,sCAPS,wEAAyB,iDAE9B,uEAGA,gEADA,sC,0BAVN,gCACE,+DAaF,+C,mCAXkB,4D,0BAZpB,+BACE,yDACE,e,sBACF,oBACA,4DAKA,4DAeF,6C,kCAtBI,uGAEwB,gFAKA,+ECnCzB,MAAM41B,WAAuB,GAClC1vD,YACEw5C,EACA3pC,EACA1H,EACA6N,EACAsjC,EACQ/4C,EACAL,EACRw5C,GAEAnmC,MACEimC,EACA3pC,EACA1H,EACAmxC,EACAtjC,EACA0jC,GAVM,KAAAn5C,MAAAA,EACA,KAAAL,OAAAA,EAaJ6R,W,0CACJtR,KAAKwuD,eAAentD,WAAU,KAC5BrB,KAAKP,OAAOY,SAAS,CAAC,cAAe,CAAE06C,SAAU/6C,KAAK+6C,eAExD/6C,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC/D3gB,KAAK+6C,SAAWp6B,EAAOo6B,eACjB/6C,KAAKia,eAIT1J,S,sGACJ,MAAM+L,QAAgB,EAAM/L,OAAM,WAIlC,OAHI+L,GACFtc,KAAKy7C,SAEAn/B,KAGTm/B,SACEz7C,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CACrC6uD,YAAY,EACZ5uD,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,O,kCA1C9BiwD,IAAc,2O,qCAAdA,GAAc,6gCDlB3B,kCAAY,8CAAY,EAAA1+C,YACtB,sDACE,uDACE,4DAAmC,2CAAS,EAAAkrC,YAAU,e,sBAAqB,oBAC7E,6CACA,wDACE,4DAAoB,gB,uBAAiC,oBACvD,6CACA,yDACE,iEASF,6CACF,2CACA,yDACE,yDACE,8DAKA,+DAaA,4DACE,gB,uBACF,oBACF,6CACA,8DAyBF,2CACF,yCACA,sB,MAvEkC,8CAG0B,yEAGlC,uFAOjB,kFASuB,oFAKA,kFAcxB,2GAGc,oF,2PE5Cf,MAAe0T,I,2SCoCtB,MAAM,GAA4B,gBAG3B,MAAM,GAyBX5vD,YACYs5C,EACA/X,EACAsuB,EACA1nD,EACA0R,EACAhK,EACA0pC,EACAjwC,EACAwsB,EACAvf,EACAuxC,EACAnrB,EACA7lB,EACA2iC,EACFzjC,EACE3V,GAfA,KAAAi5C,cAAAA,EACA,KAAA/X,YAAAA,EACA,KAAAsuB,aAAAA,EACA,KAAA1nD,YAAAA,EACA,KAAA0R,cAAAA,EACA,KAAAhK,qBAAAA,EACA,KAAA0pC,aAAAA,EACA,KAAAjwC,IAAAA,EACA,KAAAwsB,mBAAAA,EACA,KAAAvf,OAAAA,EACA,KAAAuxC,kBAAAA,EACA,KAAAnrB,aAAAA,EACA,KAAA7lB,WAAAA,EACA,KAAA2iC,wBAAAA,EACF,KAAAzjC,WAAAA,EACE,KAAA3V,aAAAA,EAvCF,KAAAyvD,aAAe,IAAI,EAAA9/C,aACnB,KAAA+/C,cAAgB,IAAI,EAAA//C,aACpB,KAAAiqC,cAAgB,IAAI,EAAAjqC,aACpB,KAAA6pC,gBAAkB,IAAI,EAAA7pC,aACtB,KAAA8pC,iBAAmB,IAAI,EAAA9pC,aAYjC,KAAA+tC,UAAY1E,GAKJ,KAAA2W,oBAA8B,EAqBtCj+C,WACEtR,KAAKq1B,mBAAmBh0B,UAAU,IAA4ByS,IAC5D9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,GACO,kBADChnB,EAAQrJ,QAERqJ,EAAQs0C,qBACJpoD,KAAKia,OACXja,KAAKqnD,kBAAkBvf,yBAQnClmC,cACE5B,KAAKq1B,mBAAmBxzB,YAAY,IACpC7B,KAAKwvD,UAGDv1C,O,0CACJja,KAAKwvD,UAEL,MAAM31B,QAAe75B,KAAK64C,cAAc/lB,IAAI9yB,KAAK+6C,UAIjD,GAHA/6C,KAAK65B,aAAeA,EAAO5gB,UAC3BjZ,KAAKshD,uBAAyBthD,KAAKJ,aAAaulC,sBAG9CnlC,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,OAChCh3C,KAAK65B,OAAOC,MAAMqb,OACjBtb,EAAOsc,qBAAuBn2C,KAAKshD,kBACpC,OACMthD,KAAKyvD,iBACX,MAAMC,EAAW1vD,KAAK8gC,YAAY6uB,gBAAgB3vD,KAAK65B,OAAOC,MAAMqb,YAC9Dn1C,KAAK4vD,SAASF,GAEpB1vD,KAAK6vD,aAAeC,aAAY,IAAY,yCACpC9vD,KAAK4vD,SAASF,OACnB,KAGD1vD,KAAKo7C,mBAAqBp7C,KAAK+6C,UACjC/6C,KAAKk8B,aAAasB,QAAQ5B,GAAUyf,oBAAqBr7C,KAAK+6C,UAEhE/6C,KAAKo7C,iBAAmBp7C,KAAK+6C,YAGzB3E,O,0CACJ,eAAUp2C,KAAK+vD,oBACb/vD,KAAKqvD,aAAav+C,KAAK9Q,KAAK65B,SACrB,MAMLm2B,Q,0CACJ,eAAUhwD,KAAK+vD,oBACb/vD,KAAKsvD,cAAcx+C,KAAK9Q,KAAK65B,SACtB,MAMLsW,Q,0CACJ,eAAUnwC,KAAK+vD,oBACb/vD,KAAKw5C,cAAc1oC,KAAK9Q,KAAK65B,SACtB,MAML6B,S,0CACJ,WAAY17B,KAAK+vD,kBACf,OAYF,WATwB/vD,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EACf3Q,KAAK65B,OAAO4d,UAAY,oCAAsC,0BAEhEz3C,KAAK0H,YAAYiJ,EAAE,cACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,UACQ3Q,KAAK27C,eACX37C,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE3Q,KAAK65B,OAAO4d,UAAY,yBAA2B,gBAExEz3C,KAAKo5C,gBAAgBtoC,KAAK9Q,KAAK65B,QAC/B,MAAOj7B,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGH08C,U,0CACJ,IAAKt7C,KAAK65B,OAAO4d,UACf,OAAO,EAUT,WAPwBz3C,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,2BACnB3Q,KAAK0H,YAAYiJ,EAAE,eACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,UACQ3Q,KAAK67C,gBACX77C,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,iBACxE3Q,KAAKq5C,iBAAiBvoC,KAAK9Q,KAAK65B,QAChC,MAAOj7B,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGH8d,iB,iDACQ1c,KAAK+vD,oBAIjB/vD,KAAK6Z,cAAgB7Z,KAAK6Z,aACtB7Z,KAAK6Z,cACP7Z,KAAKk8B,aAAasB,QAAQ5B,GAAUkgB,oCAAqC97C,KAAK+6C,cAI5EgB,mB,iDACQ/7C,KAAK+vD,oBAIjB/vD,KAAK25C,gBAAkB35C,KAAK25C,eACxB35C,KAAK25C,gBACP35C,KAAKk8B,aAAasB,QAAQ5B,GAAUsgB,oCAAqCl8C,KAAK+6C,cAI5EkB,iB,iDACQj8C,KAAK+vD,oBAIjB/vD,KAAK45C,cAAgB55C,KAAK45C,aACtB55C,KAAK45C,cACP55C,KAAKk8B,aAAasB,QAAQ5B,GAAUsgB,oCAAqCl8C,KAAK+6C,cAI5EwB,gB,0CACJ,GACuB,MAArBv8C,KAAK65B,OAAOC,OACkB,MAA9B95B,KAAK65B,OAAOC,MAAM3J,UACa,KAA/BnwB,KAAK65B,OAAOC,MAAM3J,SAElB,OAGFnwB,KAAKw8C,qBAAuBx8C,KAAK84C,aAAa2D,eAAez8C,KAAK65B,OAAOC,MAAM3J,UAC/E,MAAMusB,QAAgB18C,KAAKw8C,qBAEvBE,EAAU,EACZ18C,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,kBAAmB+rC,EAAQz4C,aAGhDjE,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,oBAI5Es/C,OAAOt1B,EAAmBogB,GACnBpgB,EAAI6a,YAILuF,GACF/6C,KAAK64C,cAAc4P,uBAAuB1N,GAG5C/6C,KAAKoP,qBAAqB2I,UAAU4iB,EAAI5iB,YAGpCgf,KAAKxD,EAAekzB,EAAqBC,G,0CAC7C,GAAa,MAATnzB,EACF,OAGF,GACEvzB,KAAKg5C,wBAAwB2N,kBAAkBnmD,SAASkmD,YAChD1mD,KAAK+vD,kBAEb,OAGF,MAAM/4B,EAA0B,MAAZh3B,KAAK6I,IAAc,CAAE9G,OAAQ/B,KAAK6I,KAAQ,KAC9D7I,KAAKoP,qBAAqB6nB,gBAAgB1D,EAAOyD,GACjDh3B,KAAKoP,qBAAqBsB,UACxB,OACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE81C,KAGnC,aAAhBA,EACFzmD,KAAKk8B,aAAasB,QAAQ5B,GAAUyiB,uCAAwCr+C,KAAK+6C,UACxD,iBAAhB0L,EACTzmD,KAAKk8B,aAAasB,QAAQ5B,GAAUmrB,4BAA6B/mD,KAAK+6C,UACnD,YAAV2L,GACT1mD,KAAKk8B,aAAasB,QAAQ5B,GAAUs0B,+BAAgClwD,KAAK+6C,aAI7EoV,kBAAkBjvD,EAAkBwJ,GAClCxJ,EAAMkvD,aAAaC,QAAQ,OAAQ3lD,GAG/B4lD,mBAAmB7P,G,0CACvB,WAAYzgD,KAAK+vD,kBACf,OAEF,MAAMnoD,EAAI64C,EACV,GAAI74C,EAAE+4C,YACJ,OAGF,GAAkC,MAA9B3gD,KAAK65B,OAAOmc,iBAA2Bh2C,KAAKshD,iBAM9C,YALAthD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,mBACnB3Q,KAAK0H,YAAYiJ,EAAE,wBAKvB,IAAIvQ,EACJ,IAKEA,SAJyCJ,KAAKqW,WAAWwqC,kBACvD7gD,KAAK65B,OAAO76B,GACZyhD,EAAWzhD,KAEoBoB,IACjC,MAAOxB,GACP,KAAIA,aAAa6U,GAAqD,MAAnC7U,EAAoBwV,YAEhD,MAAIxV,aAAa6U,EAChB,IAAI5U,MAAOD,EAAoByV,oBAE/BzV,EAJNwB,EAAMqgD,EAAWrgD,IAQrBwH,EAAE+4C,aAAc,EAChB,MAAM/0C,QAAiBk1C,MAAM,IAAIC,QAAQ3gD,EAAK,CAAE4gD,MAAO,cACvD,GAAwB,MAApBp1C,EAAS8H,OAGX,OAFA1T,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,uBACtE/I,EAAE+4C,aAAc,GAIlB,IACE,MAAMM,QAAYr1C,EAASs1C,cACrB5sC,EACc,MAAlBmsC,EAAWnsC,IACPmsC,EAAWnsC,UACLtU,KAAKoZ,cAAcG,UAAUvZ,KAAK65B,OAAOmc,gBAC/CmL,QAAenhD,KAAKoZ,cAAcgoC,iBAAiBH,EAAK3sC,GAC9DtU,KAAKoP,qBAAqBuuB,SAAS39B,KAAK6I,IAAKs4C,EAAQ,KAAMV,EAAW9zC,UACtE,MAAO/N,GACPoB,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBAGxE/I,EAAE+4C,aAAc,KAGRhF,eACR,OAAO37C,KAAK65B,OAAO4d,UACfz3C,KAAK64C,cAAc3Y,iBAAiBlgC,KAAK65B,OAAO76B,IAChDgB,KAAK64C,cAAciE,qBAAqB98C,KAAK65B,OAAO76B,IAGhD68C,gBACR,OAAO77C,KAAK64C,cAAckE,kBAAkB/8C,KAAK65B,OAAO76B,IAG1C+wD,iB,0CACd,QAAI/vD,KAAK65B,OAAOgd,WAAa1F,GAAmB2F,OAAQ92C,KAAKuvD,sBAIrDvvD,KAAKuvD,yBAA2BvvD,KAAKg5C,wBAAwB4N,yBAG/D4I,UACNxvD,KAAK6pD,SAAW,KAChB7pD,KAAK65B,OAAS,KACd75B,KAAK6Z,cAAe,EACpB7Z,KAAK25C,gBAAiB,EACtB35C,KAAK45C,cAAe,EACpB55C,KAAKuvD,oBAAqB,EACtBvvD,KAAK6vD,cACPU,cAAcvwD,KAAK6vD,cAITJ,iB,0CACZ,GACiB,MAAfzvD,KAAK65B,QACL75B,KAAK65B,OAAOzuB,OAASgmC,GAAW4F,OACN,MAA1Bh3C,KAAK65B,OAAOC,MAAMqb,KASpB,GADAn1C,KAAK6pD,eAAiB7pD,KAAK8gC,YAAYgmB,QAAQ9mD,KAAK65B,OAAOC,MAAMqb,MAC5C,MAAjBn1C,KAAK6pD,SACP,GAAI7pD,KAAK6pD,SAASxmD,OAAS,EAAG,CAC5B,MAAMmtD,EAAO1qD,KAAKmH,MAAMjN,KAAK6pD,SAASxmD,OAAS,GAC/CrD,KAAKywD,kBACHzwD,KAAK6pD,SAASjyB,UAAU,EAAG44B,GAAQ,IAAMxwD,KAAK6pD,SAASjyB,UAAU44B,QAEnExwD,KAAKywD,kBAAoBzwD,KAAK6pD,cAGhC7pD,KAAKywD,kBAAoB,KACrBzwD,KAAK6vD,cACPU,cAAcvwD,KAAK6vD,mBAlBjB7vD,KAAK6vD,cACPU,cAAcvwD,KAAK6vD,iBAsBXD,SAASc,G,0CACrB,MACMC,EADQ7qD,KAAKmvB,OAAM,IAAIloB,MAAOC,UAAY,KAC5B0jD,EAEpB1wD,KAAK4wD,QAAUF,EAAkBC,EACjC3wD,KAAK6wD,WAAa/qD,KAAKmvB,MAAQ,KAAOy7B,EAAmBC,EAAM,OAAiB,OAChF3wD,KAAK8wD,QAAU9wD,KAAK4wD,SAAW,EACnB,IAARD,UACI3wD,KAAKyvD,sB,kCApZJ,IAAa,kNAiCP3iC,QAAM,8O,qCAjCZ,GAAa,uM,2SC5BnB,MAAM,GAOXvtB,YAAoB28B,GAAA,KAAAA,aAAAA,EAFpB,KAAAohB,UAAY1E,GAINwF,iBAAiBD,G,0CACrB,WAAYn+C,KAAK+vD,kBACf,OAGF,MAAM38B,EAAI+qB,EACV/qB,EAAE8pB,WAAa9pB,EAAE8pB,UACb9pB,EAAE8pB,WACJl9C,KAAKk8B,aAAasB,QAAQ5B,GAAUyiB,uCAAwCr+C,KAAK65B,OAAO76B,Q,0BCpBtF,6BACE,eACF,qB,4CADE,qF,0BAEF,6BACE,+DAAqE,eAEnE,oBACF,+DAAoD,eAAuB,oBAC7E,iD,4CAJQ,yDAA+D,kDAG/D,wDAA8C,yD,sBAGpD,yB,sBACA,yB,0BAFF,6BACE,+DACA,+DACA,+DAAsB,eAAiB,oBACzC,iD,4CAHmC,2DACN,2DACL,mD,0BAExB,gCACE,8DACE,yD,sBAKA,iEAAsB,e,sBAA0B,oBAClD,mDACA,8DAAM,gB,uBAAsD,oBAC9D,kD,mEALM,iGAEoB,8EAElB,0G,kCDpBH,IAAyB,6B,qCAAzB,GAAyB,uE,uHCwB9B,mCAOE,oJ,4CAGA,uDAKF,gD,+CAXE,qGACA,oFAGA,6CAKE,kG,yDAGJ,mCAYE,8IACiC,QAAO,4BAAoC,UAClF,Y,4CAEM,uDACF,gD,+CAbE,8FACA,8E,0BAnDN,+BACE,yDACE,4DAAwB,eAAgB,oBACxC,8DAGA,8DAMA,gEAKA,iEAWF,+CACA,2DACE,oEAgBA,mEAkBF,+CACF,8C,gDA/D4B,iDAClB,oEAGA,sEAMA,uEAKA,sEAmBH,6FAgBA,sKC/CJ,MAAM+xD,WAAkC,GAC7CxxD,YAAY28B,GACVppB,MAAMopB,I,kCAFG60B,IAAyB,6B,qCAAzBA,GAAyB,ijCDVtC,gCACE,oDACE,e,sBACF,oBACA,qDACE,2DAkEF,0CACF,kDACA,sB,MAvEI,gGAGoE,+D,ibEGpE,kCAAmC,iGACjC,e,sBACF,oB,MADE,6F,0BAFJ,+BACE,6DAGF,2C,kCAHuD,+D,yDAiBjD,gCACE,8DACE,kEAIE,sJACC,e,sBACH,oBACA,6DAOF,kDACA,gEACE,qEAKE,8HAAqC,WAAY,e,uBAEjD,6DACF,qDACF,mDACF,iD,sCArBO,gGAKD,mEAUA,oG,yDA0BF,sCAME,0G,sBAKA,2DAKA,2DAKF,oD,4DAhBE,iFAEA,uDAAqC,sBAMnC,sDAKA,wD,uHAIJ,mCAME,2G,kEAIA,2DAKF,oD,sCAXE,+HACA,oFAGA,gDAKE,yG,yDAGJ,mCAKE,8HAAqC,WAAY,e,sBAGjD,2DACF,oD,KALE,gF,yDA7DN,gCACE,8DACE,iEAGE,sJACC,e,sBAAuB,oBAE1B,gEACE,eACF,oBACA,6D,gCAMF,mDACA,gEACE,wEAsBA,yEAgBA,wEAUF,mDACF,iD,sCA9DO,2EAEE,2DACH,6GAGA,4DAAwB,iFAgBvB,gEAoBA,gEAeA,iE,8IAMP,gCAKE,8DACE,iEAGE,yIACC,e,sBAAmC,oBAEtC,iEAAwB,eAAuB,oBACjD,mDACA,iEACE,mEAAuB,gBAAa,oBACpC,qFACE,+DACE,oEAOA,oEACF,uDACF,qDACF,mDACA,uFACE,qEAKE,iHAAwB,uBAAwB,W,uBAEhD,6DACF,qDACF,mDACF,iD,sCAtCE,iEAQK,uFAEqB,8DAGD,oDAQjB,oFAWJ,4G,0BArIR,6BACE,gEA6BA,iEAqEA,iEAyCF,+C,mCA3IqD,kEA6BA,kEAwEhD,2E,0BAyCH,gCACE,+DAAwB,e,sBAA6B,oBACrD,eACF,qB,mCAF0B,iFACxB,qG,yDAEF,gCACE,8DACE,iEAAwB,e,sBAAqB,oBAC7C,iEAAmD,eAA8B,oBACjF,mEAAoD,gBAAwB,oBAC9E,mDACA,gEACE,qEAME,6G,qEAGA,6DAKF,qDACA,qEAKE,2HAAkC,SAAU,kB,uBAE5C,6DACF,qDACF,mDACF,iD,sCA9B4B,0EAClB,6DAA6C,qEAC7C,8DAA8C,+DAOlD,mJACA,sFAEA,kDAKE,4GAOF,mG,0BAON,gCACE,+DAAwB,e,sBAAoB,oBAC5C,eACF,qB,mCAF0B,wEACxB,4F,0BAEF,gCACE,+DAAwB,e,sBAAyB,oBACjD,eACF,qB,mCAF0B,6EACxB,iG,yDAEF,gCACE,8DACE,iEAAwB,e,sBAA2B,oBACnD,iEAAiD,eAA4B,oBAC7E,mEAAkD,gBAAsB,oBAC1E,mDACA,gEACE,qEAME,2G,qEAGA,6DAKF,qDACA,qEAKE,yHAAgC,eAAgB,oB,uBAEhD,6DACF,qDACF,mDACF,iD,sCA9B4B,gFAClB,2DAA2C,mEAC3C,4DAA4C,6DAOhD,yJACA,sFAEA,gDAKE,wGAOF,yG,0BAxER,6BACE,+DAIA,iEAiCA,+DAIA,+DAIA,kEAiCF,gD,mCA9EgC,uEAIqB,+DAiCrB,8DAIA,mEAIqB,8D,0BAoCnD,gCACE,+DAAwB,e,sBAA2B,oBACnD,eACF,qB,mCAF0B,+EACxB,mG,0BAEF,gCACE,+DAAwB,e,sBAAuB,oBAC/C,eACF,qB,mCAF0B,2EACxB,mG,0BAEF,gCACE,+DAAwB,e,sBAAsB,oBAC9C,eACF,qB,mCAF0B,0EACxB,kG,0BAEF,gCACE,+DAAwB,e,sBAAkB,oBAC1C,eACF,qB,mCAF0B,sEACxB,8F,0BAEF,gCACE,+DAAwB,e,sBAA6B,oBACrD,eACF,qB,mCAF0B,iFACxB,yG,0BAEF,gCACE,+DAAwB,e,sBAA4B,oBACpD,eACF,qB,mCAF0B,gFACxB,wG,0BAEF,gCACE,+DAAwB,e,sBAAoB,oBAC5C,eACF,qB,mCAF0B,wEACxB,gG,0BAEF,gCACE,+DAAwB,e,sBAAoB,oBAC5C,eACF,qB,mCAF0B,wEACxB,gG,0BAOA,6BAAsC,eAA8B,qB,mCAA9B,sE,0BACtC,6BAAsC,eAA8B,qB,mCAA9B,sE,0BACtC,6BAAsC,eAA8B,qB,mCAA9B,sE,0BACtC,6BAA8C,eAAsC,qB,mCAAtC,8E,0BAC9C,6BAAqC,eAA6B,qB,mCAA7B,qE,0BATvC,gCAIE,+DAAwB,e,sBAAsB,oBAC9C,gEACA,gEACA,iEACA,kEACA,kEACF,kD,mCAN0B,0EAClB,qEACA,qEACA,qEACA,6EACA,qE,0BA1CV,6BACE,+DAIA,+DAIA,+DAIA,+DAIA,gEAIA,iEAIA,iEAIA,iEAIA,kEAWF,gD,mCA3CgC,qEAIA,qEAIA,oEAIA,gEAIA,2EAIA,0EAIA,kEAIA,kEAM3B,yH,0BAmBD,kCAAqE,e,sBAEnE,qB,wCAFK,oDAA8D,uE,0BAGrE,kCAAoE,e,sBAElE,qB,wCAFK,oDAA6D,2E,yDAcpE,mCAOE,2I,4CAEA,yDACF,kD,+CANE,0FACA,2E,yDA3BN,gCAIE,4DACE,mEAGA,mEAGA,+DACE,8DAOF,mDACF,iDACA,8DACE,sEAWA,mEAME,gIAAmC,UAAY,MAAO,U,8CAEtD,2DACF,mDACF,iDACF,+C,sCAvCqD,uDAGA,sDAG3C,4DAEF,qEAEA,qCAaD,sDASD,8GACA,8E,0BAxCV,+BACE,wDACE,+DA6CF,4CACF,2C,mCA5CoB,kE,0BA6CpB,+BACE,sDACE,4DAAmB,e,sBAAoB,oBACzC,4CACA,wDACE,4DACE,8DAOF,+CACF,6CACF,4C,mCAbuB,wEAMf,2D,0BAQR,+BACE,4EAKF,2C,mCAJI,qDAAiB,0CAAjB,CAAiB,wB,sBAuBf,yB,sBAKA,yB,yDAfF,mCAME,kIAEA,6DAAuB,eAAyB,oBAChD,8DAA6B,eAAyB,oBACtD,6DAKA,8DAKF,+C,4BAZyB,qDACM,qDAG1B,yDAKA,yD,0BAzBT,+BAIE,sDACE,e,sBACF,oBACA,wDACE,iEAqBF,4CACF,4C,mCAzBI,mGAMyB,mE,yDAsBzB,mCAKE,uGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAAuB,oBAC/B,iDACF,+C,MAFU,8E,yDAGV,mCAKE,8GAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAA8B,oBACtC,iDACF,+C,MAFU,qF,yDAGV,mCAKE,kGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAAwB,oBAChC,iDACF,+C,MAFU,+E,yDAGV,mCAKE,kGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAAiC,oBACzC,iDACF,+C,MAFU,wF,yDAGV,mCAKE,oGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAA0B,oBAClC,iDACF,+C,MAFU,iF,0BAmBV,6BACE,0DAAgC,e,sBAAmC,oBACnE,e,sBACF,qB,mCAFkC,8FAChC,wI,mEAEF,6BACE,0DAAgC,e,sBAA+B,oBAC/D,0D,sBAME,eACF,oBACF,+C,mCATkC,0FAK9B,8FAFA,sEAIA,wG,yDAzeV,iCACE,qDACE,sDACE,e,sBACF,oBACA,wDACE,2DACE,gEAAkB,gB,uBAAmB,oBACrC,2DACF,+CACA,2BACA,8DA6IA,2BACA,+DAgFA,2BACA,+DA6CF,6CACF,2CACA,2DAiDA,4DAgBA,2DAOA,4DA+BA,wDACE,0DACE,mEAeA,mEAeA,mEAeA,mEAeA,mEAeA,+DAAwE,kGACtE,8DACE,gEACE,2DACF,mDACA,8DAAM,gB,uBAAwE,oBAChF,iDACF,+CACF,6CACF,2CACA,uDACE,0DACE,yDACE,4DAAgC,gB,uBAA2B,oBAC3D,gB,uBACF,oBACA,8DAIA,gEAWF,6CACF,2CACF,yC,qCA3eM,wGAIoB,yEACW,yDAGzB,yDA8IA,wDAiFA,4DA+CQ,iFAiDA,yDAgBA,6DASf,oIAqCI,oHAeA,+GAeA,wFAeA,mEAeA,6DAcO,2HAQwB,yFAChC,0HAEI,+EAIA,uEC/cZ,MAAM,GAA4B,qBAM3B,MAAMC,WAAsB,GAQjCzxD,YACEs5C,EACA/X,EACAsuB,EACA1nD,EACA0R,EACAhK,EACA0pC,EACQh5C,EACAL,EACA2O,EACRinB,EACAvf,EACAuxC,EACAznD,EACAs8B,EACQmtB,EACA3pD,EACA41B,EACRjf,EACA2iC,EACAzjC,GAEAzC,MACE+lC,EACA/X,EACAsuB,EACA1nD,EACA0R,EACAhK,EACA0pC,EACA/2C,OACAszB,EACAvf,EACAuxC,EACAnrB,EACA7lB,EACA2iC,EACAzjC,EACA3V,GA/BM,KAAAE,MAAAA,EACA,KAAAL,OAAAA,EACA,KAAA2O,SAAAA,EAMA,KAAAi7C,gBAAAA,EACA,KAAA3pD,iBAAAA,EACA,KAAA41B,kBAAAA,EAzBV,KAAA+pB,iBAAkB,EAClB,KAAAiK,YAAqB,GAGrB,KAAAj1B,UAAW,EACX,KAAAwlB,WAAazI,GA6Cb9/B,WACEtR,KAAKq0B,SAAWr0B,KAAKs1B,kBAAkBjB,SAAStyB,QAChD/B,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAC3DA,EAAOo6B,SACT/6C,KAAK+6C,SAAWp6B,EAAOo6B,SAEvB/6C,KAAKwM,cAGDxM,KAAKia,YAGbnH,MAAMxB,WAENtR,KAAKq1B,mBAAmBh0B,UAAU,IAA4ByS,IAC5D9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,OAAQhnB,EAAQrJ,SACd,IAAK,6BACCqJ,EAAQnI,SAAW,IACrB3L,KAAKspD,YAAYx0C,KAAK,CACpBy0C,QAASz1C,EAAQ01C,aAAaD,QAC9B/+C,IAAKsJ,EAAQtJ,IACbi/C,QAAS31C,EAAQ21C,UAGrB,MACF,IAAK,aACL,IAAK,gBACgC,MAA/BzpD,KAAKixD,wBACPlvD,OAAOwjB,aAAavlB,KAAKixD,wBAE3BjxD,KAAKixD,uBAAyBlvD,OAAO2c,YAAW,IAAM1e,KAAKkxD,mBAAmB,cASxFtvD,cACEkR,MAAMlR,cACN5B,KAAKq1B,mBAAmBxzB,YAAY,IAGhCoY,O,wGACE,EAAMA,KAAI,iBACVja,KAAKkxD,qBAGP9a,O,kGACJ,OAAIp2C,KAAK65B,OAAO4d,qBAGJ,EAAMrB,KAAI,cAItBp2C,KAAKP,OAAOY,SAAS,CAAC,gBAAiB,CAAEC,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,OACvE,OAGHgxD,Q,oGACJ,OAAIhwD,KAAK65B,OAAO4d,qBAIJ,EAAMuY,MAAK,cAIvBhwD,KAAKP,OAAOY,SAAS,CAAC,iBAAkB,CACtCC,YAAa,CACX44C,WAAW,EACX6B,SAAU/6C,KAAK65B,OAAO76B,OAGnB,OAGHmxC,Q,oGACJ,eAAY,EAAMA,MAAK,cAIW,MAA9BnwC,KAAK65B,OAAOmc,gBACdh2C,KAAKP,OAAOY,SAAS,CAAC,iBAAkB,CACtC6uD,YAAY,EACZ5uD,YAAa,CAAEy6C,SAAU/6C,KAAK65B,OAAO76B,OAGlC,MAGH4qD,a,iDACsB5pD,KAAKmxD,eAE7BnxD,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,uBAItEygD,oB,0CAGJ,SAF0BpxD,KAAKmxD,aAEd,CACf,GAAgB,MAAZnxD,KAAKwK,IACP,MAAM,IAAI3L,MAAM,iBAGlB,GAA8B,MAA1BmB,KAAK65B,OAAOC,MAAMsb,KACpBp1C,KAAK65B,OAAOC,MAAMsb,KAAO,QAEzB,GAAIp1C,KAAK65B,OAAOC,MAAMsb,KAAKK,MAAM9a,GAAQA,EAAIA,MAAQ36B,KAAKwK,IAAIpK,MAM5D,YALAJ,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,+BAMzB,MAAM0gD,EAAW,IAAIxZ,GACrBwZ,EAAS12B,IAAM36B,KAAKwK,IAAIpK,IACxBJ,KAAK65B,OAAOC,MAAMsb,KAAKtgC,KAAKu8C,GAE5B,IACE,MAAMx3B,QAAuB75B,KAAK64C,cAAc58B,QAAQjc,KAAK65B,cACvD75B,KAAK64C,cAAc7Y,eAAenG,GACxC75B,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,+BAErB3Q,KAAKN,iBAAiBQ,KAAK,gBAC3B,SACAF,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,yBAKtE2qC,U,wGACJ,QAAKt7C,KAAK65B,OAAO4d,qBAGP,EAAM6D,QAAO,cACrBt7C,KAAKwM,SACE,OAKLkvB,S,sGACJ,eAAU,EAAMA,OAAM,cACpB17B,KAAKN,iBAAiBQ,KAAK,iBAC3BF,KAAKwM,SACE,MAKXA,QACExM,KAAKoO,SAAS+pB,OAGF+4B,kB,0CACZlxD,KAAKspD,YAAc,GACnBtpD,KAAKwK,UAAYZ,EAAWwgD,0BACZ,MAAZpqD,KAAKwK,KAGTZ,EAAWe,eAAe3K,KAAKwK,IAAK,CAClCC,QAAS,qBACTD,IAAKxK,KAAKwK,IACVmB,OAAQ,QAIEwlD,a,0CACZ,WAAYnxD,KAAK+vD,kBACf,OAAO,EAGT,GAAwB,MAApB/vD,KAAKspD,aAAmD,IAA5BtpD,KAAKspD,YAAYjmD,OAE/C,OADArD,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,mBAC/D,EAGT,IACE3Q,KAAK6pD,eAAiB7pD,KAAKqpD,gBAAgBU,WAAW,CACpDlwB,OAAQ75B,KAAK65B,OACbyvB,YAAatpD,KAAKspD,YAClBU,IAAKjoD,OAAOwH,SACZ0gD,iBAAiB,IAEE,MAAjBjqD,KAAK6pD,UACP7pD,KAAKoP,qBAAqB6nB,gBAAgBj3B,KAAK6pD,SAAU,CAAE9nD,SAE7D,SAGA,OAFA/B,KAAKoP,qBAAqBsB,UAAU,QAAS,KAAM1Q,KAAK0H,YAAYiJ,EAAE,kBACtE3Q,KAAKqnD,kBAAkBvf,iBAChB,EAGT,OAAO,MCpSX,IAAYwpB,G,kCDqCCN,IAAa,umB,qCAAbA,GAAa,0rHDrC1B,gCACE,qDACE,0DAAmC,2CAAS,EAAAxkD,WAAS,e,sBAAoB,oBAC3E,0CACA,oDACE,0DAAoB,gB,uBAAuB,oBAC7C,2CACA,0DAKF,yCACA,8DA+eA,sB,MA1fyD,wEAGjC,4EAEF,mDAMZ,qD,sIEbV,SAAY8kD,GACV,mBACA,mBAFF,CAAYA,KAAAA,GAAQ,KCIb,MAAMC,GAMXhyD,YAAY6zB,GALZ,KAAAp0B,GAAa,KACb,KAAAw0B,KAAe,KACf,KAAAg+B,SAAmB,KACnB,KAAA7kD,SAAmB,KAGZymB,IAILpzB,KAAKhB,GAAKo0B,EAAEp0B,GACZgB,KAAKwzB,KAAOJ,EAAEI,KACdxzB,KAAKwxD,SAAWp+B,EAAEo+B,UAGhBC,eACF,IACE,GAAiB,MAAbzxD,KAAKwzB,KACP,OAAO9vB,SAAS1D,KAAKwzB,KAAM,MAE7B,UAGF,OAAO,GCxBJ,MAAMk+B,GAIXnyD,YAAYoR,GAHZ,KAAA6mB,KAAe,KAIR7mB,IAIL3Q,KAAK2xD,OAAShhD,EAAEghD,QAGdC,iBACF,OAAoB,MAAb5xD,KAAKw3B,KAAe,WAAa,MCPrC,MAAMq6B,GAmBXtyD,YAAYkJ,GAlBZ,KAAAzJ,GAAa,KACb,KAAA8yD,SAAmB,KACnB,KAAAxvD,KAAe,KACf,KAAA2zC,MAAgB,KAGhB,KAAA7qC,KAAiB,KACjB,KAAAosB,KAAO,IAAIk6B,GACX,KAAA9P,KAAO,IAAI2P,GACX,KAAAQ,eAA0B,KAC1B,KAAAC,YAAsB,EACtB,KAAAvyB,aAAqB,KACrB,KAAAwyB,aAAqB,KACrB,KAAAC,eAAuB,KACvB,KAAA/hC,SAAmB,KACnB,KAAAgiC,UAAoB,EACpB,KAAAC,WAAqB,EAGd3pD,IAILzI,KAAKhB,GAAKyJ,EAAEzJ,GACZgB,KAAK8xD,SAAWrpD,EAAEqpD,SAClB9xD,KAAKoL,KAAO3C,EAAE2C,KACdpL,KAAK+xD,eAAiBtpD,EAAEspD,eACxB/xD,KAAKgyD,YAAcvpD,EAAEupD,YACrBhyD,KAAKy/B,aAAeh3B,EAAEg3B,aACtBz/B,KAAKiyD,aAAexpD,EAAEwpD,aACtBjyD,KAAKkyD,eAAiBzpD,EAAEypD,eACxBlyD,KAAKmyD,SAAW1pD,EAAE0pD,SAClBnyD,KAAKmwB,SAAW1nB,EAAE0nB,SAClBnwB,KAAKoyD,UAAY3pD,EAAE2pD,WAGjBC,gBACF,OAAOrwD,EAAM0D,mBAAmB1F,KAAKsU,KAGnCg+C,4BACF,OAA2B,MAAvBtyD,KAAK+xD,gBAGF/xD,KAAKgyD,aAAehyD,KAAK+xD,eAG9BQ,cACF,OAA2B,MAAvBvyD,KAAKkyD,gBAGFlyD,KAAKkyD,gBAAkB,IAAInlD,KAGhCylD,oBACF,OAAOxyD,KAAKiyD,cAAgB,IAAIllD,MC1D7B,MAAe0lD,I,ICAjBC,GAcAC,GAMAC,G,uSCLE,MAAM,GA4BXrzD,YACYmI,EACA0H,EACAC,EACAwjD,EACAC,EACApzD,EACAinB,EACFpR,EACE3V,GARA,KAAA8H,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAC,mBAAAA,EACA,KAAAwjD,SAAAA,EACA,KAAAC,YAAAA,EACA,KAAApzD,iBAAAA,EACA,KAAAinB,cAAAA,EACF,KAAApR,WAAAA,EACE,KAAA3V,aAAAA,EAjCF,KAAAmzD,YAAc,IAAI,EAAAxjD,aAClB,KAAAyjD,cAAgB,IAAI,EAAAzjD,aACpB,KAAA+pC,YAAc,IAAI,EAAA/pC,aAE5B,KAAA0jD,UAAW,EACX,KAAAC,aAAc,EACd,KAAAC,kBAAmB,EAMnB,KAAAt5C,cAAe,EAGf,KAAAu5C,SAAW9B,GAEX,KAAAhQ,kBAAmB,EACnB,KAAA+R,eAAgB,EAChB,KAAAC,YAAa,EACb,KAAAh7B,aAAc,EAeZt4B,KAAKk6C,YAAc,CACjB,CAAE53C,KAAMoF,EAAYiJ,EAAE,gBAAiB4iB,MAAO+9B,GAASiC,MACvD,CAAEjxD,KAAMoF,EAAYiJ,EAAE,gBAAiB4iB,MAAO+9B,GAAS56B,OAEzD12B,KAAKwzD,gBAAkBxzD,KAAKqP,mBAAmBokD,aAG7CC,WACF,OAAoB,MAAhB1zD,KAAKE,KAAKlB,IAAoC,MAAtBgB,KAAKE,KAAK4xD,SAC7B9xD,KAAKwzD,gBAAkBxzD,KAAKE,KAAK4xD,SAAW,IAAM9xD,KAAKE,KAAKmyD,UAE9D,KAGL58B,eACF,OAAOz1B,KAAKoP,qBAAqBqmB,WAG/Bk+B,+BACF,QAAS3zD,KAAKoP,qBAAqBomB,aAAex1B,KAAKoP,qBAAqBqmB,YAGxEnkB,W,gDACEtR,KAAKia,UAGT6lB,eACF,OAAsB,MAAf9/B,KAAK4zD,OAGV/nD,YACF,OAAO7L,KAAK0H,YAAYiJ,EAAE3Q,KAAK8/B,SAAW,WAAa,cAGzD+zB,SAAS3yD,GACPlB,KAAKiyD,aAAe/wD,EAAM+wD,aAC1BjyD,KAAKkyD,eAAiBhxD,EAAMgxD,eAGxBj4C,O,0CAaJ,GAZAja,KAAKkzD,kBAAoBlzD,KAAK2mB,cAAciW,oBAAoBf,GAAWi4B,aAC3E9zD,KAAKmzD,uBAAyBnzD,KAAK2mB,cAAciW,oBAC/Cf,GAAWk4B,aACVrqC,GAAMA,EAAEhf,KAAKyoD,mBAGhBnzD,KAAKshD,uBAAyBthD,KAAKJ,aAAaulC,sBAChDnlC,KAAKqzD,oBAAsBrzD,KAAKJ,aAAao0D,mBACxCh0D,KAAKshD,kBAAqBthD,KAAKqzD,gBAClCrzD,KAAKoL,KAAOkmD,GAAS56B,MAGN,MAAb12B,KAAKE,KACP,GAAIF,KAAK8/B,SAAU,CACjB,MAAM5/B,QAAaF,KAAKi0D,WACxBj0D,KAAKE,WAAaA,EAAK+Y,eAEvBjZ,KAAKE,KAAO,IAAI2xD,GAChB7xD,KAAKE,KAAKkL,KAAoB,MAAbpL,KAAKoL,KAAekmD,GAASiC,KAAOvzD,KAAKoL,KAC1DpL,KAAKE,KAAK0hD,KAAO,IAAI2P,GACrBvxD,KAAKE,KAAKs3B,KAAO,IAAIk6B,GACrB1xD,KAAKE,KAAK+xD,aAAe,IAAIllD,KAC7B/M,KAAKE,KAAK+xD,aAAaiC,QAAQl0D,KAAKE,KAAK+xD,aAAakC,UAAY,GAItEn0D,KAAKo0D,YAAoC,MAAtBp0D,KAAKE,KAAKiwB,UAAkD,KAA9BnwB,KAAKE,KAAKiwB,SAAS7pB,UAGhEiK,S,0CACJ,GAAIvQ,KAAKkzD,YAMP,OALAlzD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,yBAEd,EAGT,GAAsB,MAAlB3Q,KAAKE,KAAKoC,MAAmC,KAAnBtC,KAAKE,KAAKoC,KAMtC,OALAtC,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,kBAEd,EAGT,IAAIixC,EAAa,KACjB,GAAI5hD,KAAKE,KAAKkL,OAASkmD,GAASiC,OAASvzD,KAAK8/B,SAAU,CACtD,MACMwgB,EADS/2C,SAASqT,eAAe,QAClB0jC,MACrB,GAAa,MAATA,GAAkC,IAAjBA,EAAMj9C,OAMzB,YALArD,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,eAMvB,GADAixC,EAAOtB,EAAM,GACTA,EAAM,GAAG9sB,KAAO,SAOlB,YALAxzB,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,gBAMJ,MAAjB3Q,KAAKmwB,UAA6C,KAAzBnwB,KAAKmwB,SAAS7pB,SACzCtG,KAAKmwB,SAAW,MAGlBnwB,KAAKuW,YAAcvW,KAAKq0D,YAAYzS,GAAMjjD,MAAY21D,GAAY,mCAChE,MAAMC,EAAgBv0D,KAAK8yD,YAAY9yB,eAAes0B,GAStD,SARMC,EACc,MAAhBv0D,KAAKE,KAAKlB,KACZgB,KAAKE,KAAKlB,GAAKs1D,EAAQ,GAAGt1D,IAEF,MAAtBgB,KAAKE,KAAK4xD,WACZ9xD,KAAKE,KAAK4xD,SAAWwC,EAAQ,GAAGxC,UAElC9xD,KAAK+yD,YAAYjiD,KAAK9Q,KAAKE,MACvBF,KAAKizD,UAAyB,MAAbjzD,KAAK0zD,KAAc,CACtC,MAAMc,QAAoBx0D,KAAKy0D,oBAAoBz0D,KAAK0zD,MACpDc,MAAAA,GAAAA,EACFx0D,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE3Q,KAAK8/B,SAAW,aAAe,uBAG9C9/B,KAAKoP,qBAAqB+M,WAC9Bnc,KAAK0H,YAAYiJ,EAAE3Q,KAAK8/B,SAAW,aAAe,eAClD,KACA9/B,KAAK0H,YAAYiJ,EAAE,MACnB,KACA,UACA,YAEI3Q,KAAKy0D,oBAAoBz0D,KAAK0zD,aAI1C,IAEE,aADM1zD,KAAKuW,aACJ,EACP,MAAO3X,GACPoB,KAAKuV,WAAWK,MAAMhX,GAExB,OAAO,KAGH61D,oBAAoBf,G,0CACxB,OAAOj1D,QAAQC,QAAQsB,KAAKoP,qBAAqB6nB,gBAAgBy8B,OAG7Dh4B,S,0CACJ,GAA0B,MAAtB17B,KAAKigC,cACP,OAAO,EAST,WAPwBjgC,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,0BACnB3Q,KAAK0H,YAAYiJ,EAAE,cACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IAME,OALA3Q,KAAKigC,cAAgBjgC,KAAK8yD,YAAY5yB,iBAAiBlgC,KAAKE,KAAKlB,UAC3DgB,KAAKigC,cACXjgC,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,sBAClE3Q,KAAKia,OACXja,KAAKgzD,cAAcliD,KAAK9Q,KAAKE,OACtB,EACP,MAAOtB,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OAAO,KAGT81D,cACM10D,KAAKE,KAAKkL,OAASkmD,GAASiC,MAASvzD,KAAKszD,aACvCtzD,KAAKshD,iBAGEthD,KAAKqzD,gBACfrzD,KAAKszD,YAAa,EAClBtzD,KAAKN,iBAAiBQ,KAAK,+BAJ3BF,KAAKszD,YAAa,EAClBtzD,KAAKN,iBAAiBQ,KAAK,qBAQjCi5B,gBACEn5B,KAAKs4B,aAAet4B,KAAKs4B,YAGX27B,W,0CACd,OAAOj0D,KAAK8yD,YAAYhgC,IAAI9yB,KAAK4zD,WAGnBS,YAAYzS,G,0CAC1B,MAAM+S,QAAiB30D,KAAK8yD,YAAY72C,QAAQjc,KAAKE,KAAM0hD,EAAM5hD,KAAKmwB,SAAU,MAGhF,IACEwkC,EAAS,GAAG1C,aAAoC,MAArBjyD,KAAKiyD,aAAuB,KAAO,IAAIllD,KAAK/M,KAAKiyD,cAC5E,SACA0C,EAAS,GAAG1C,aAAe,KAE7B,IACE0C,EAAS,GAAGzC,eACa,MAAvBlyD,KAAKkyD,eAAyB,KAAO,IAAInlD,KAAK/M,KAAKkyD,gBACrD,SACAyC,EAAS,GAAGzC,eAAiB,KAG/B,OAAOyC,KAGCC,wBACR50D,KAAK6Z,cAAgB7Z,KAAK6Z,aAC1BtQ,SAASqT,eAAe,YAAY5K,S,kCA9Q3B,IAAgB,wP,qCAAhB,GAAgB,mIDf7B,SAAK0gD,GAGH,oBAIA,oBAIA,kBAXF,CAAKA,KAAAA,GAAW,KAchB,SAAKC,GACH,0BACA,8BAFF,CAAKA,KAAAA,GAAS,KAMd,SAAKC,GACH,yBACA,wBACA,0BACA,8BACA,+BACA,iCACA,uBACA,UAAQ,MAAI,QARd,CAAKA,KAAAA,GAAU,KAmBR,MAAM,GA8IXrzD,YACYmI,EACA0H,EACAyjD,GAFA,KAAAnrD,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAyjD,SAAAA,EA3IF,KAAAgC,aAAe,IAAI,EAAAtlD,aAW7B,KAAAulD,UAAY,IAAI,EAAAC,UAAU,CACxBC,2BAA4B,IAAI,EAAAj3B,YAChCk3B,6BAA8B,IAAI,EAAAl3B,YAClCm3B,wBAAyB,IAAI,EAAAn3B,YAC7Bo3B,0BAA2B,IAAI,EAAAp3B,YAC/Bq3B,qBAAsB,IAAI,EAAAr3B,YAC1Bs3B,qBAAsB,IAAI,EAAAt3B,YAC1Bu3B,uBAAwB,IAAI,EAAAv3B,YAC5Bw3B,uBAAwB,IAAI,EAAAx3B,cAG9B,KAAAy3B,oBAA6B,CAC3B,CAAElzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,WAAY4iB,MAAOq/B,GAAW6C,SACzD,CAAEnzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,UAAW4iB,MAAOq/B,GAAW8C,QACxD,CAAEpzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,OAAQ,KAAM4iB,MAAOq/B,GAAW+C,SAC3D,CAAErzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,OAAQ,KAAM4iB,MAAOq/B,GAAWgD,WAC3D,CAAEtzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,OAAQ,KAAM4iB,MAAOq/B,GAAWiD,WAC3D,CAAEvzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,OAAQ,MAAO4iB,MAAOq/B,GAAWkD,YAC5D,CAAExzD,KAAMtC,KAAK0H,YAAYiJ,EAAE,UAAW4iB,MAAOq/B,GAAWmD,SAG1D,KAAAC,sBAA+B,CAC7B,CAAE1zD,KAAMtC,KAAK0H,YAAYiJ,EAAE,SAAU4iB,MAAOq/B,GAAWrwB,QACvDptB,OAAO,IAAInV,KAAKw1D,sBAhCdS,kBACF,OAAIj2D,KAAKoP,qBAAqBomB,YACrBk9B,GAAYwD,QACVl2D,KAAKoP,qBAAqBqmB,WAC5Bi9B,GAAYyD,OAEdzD,GAAY0D,QA4BjBpB,iCACF,OAAOh1D,KAAK80D,UAAUhiC,IAAI,8BAGxBmiC,mCACF,OAAOj1D,KAAK80D,UAAUhiC,IAAI,gCAGxBoiC,8BACF,OAAOl1D,KAAK80D,UAAUhiC,IAAI,2BAGxBqiC,gCACF,OAAOn1D,KAAK80D,UAAUhiC,IAAI,6BAGxBsiC,2BACF,OAAOp1D,KAAK80D,UAAUhiC,IAAI,wBAGxBuiC,2BACF,OAAOr1D,KAAK80D,UAAUhiC,IAAI,wBAGxBwiC,6BACF,OAAOt1D,KAAK80D,UAAUhiC,IAAI,0BAGxByiC,6BACF,OAAOv1D,KAAK80D,UAAUhiC,IAAI,0BAIxBujC,4BACF,OAAQr2D,KAAKg1D,2BAA2BzhC,OACtC,KAAKq/B,GAAWrwB,MAEd,OADAviC,KAAKg1D,2BAA2B33B,SAASu1B,GAAWiD,WAC7C71D,KAAKq2D,sBACd,KAAKzD,GAAWmD,OACd,OAAQ/1D,KAAKi2D,aACX,KAAKvD,GAAYyD,OACjB,KAAKzD,GAAYwD,QACf,OAAOl2D,KAAKo1D,qBAAqB7hC,MAAQ,IAAMvzB,KAAKq1D,qBAAqB9hC,MAC3E,QACE,OAAOvzB,KAAKk1D,wBAAwB3hC,MAE1C,QACE,MAAM+iC,EAAM,IAAIvpD,KACVwpD,EAAcD,EAAIE,QACtBF,EAAItpD,UAAgE,GAAnDhN,KAAKg1D,2BAA2BzhC,MAAwB,GAAK,KAEhF,OAAO,IAAIxmB,KAAKwpD,GAAatyD,YAI/BwyD,8BACF,OAAQz2D,KAAKi1D,6BAA6B1hC,OACxC,KAAKq/B,GAAWrwB,MACd,OAAO,KACT,KAAKqwB,GAAWmD,OACd,OAAQ/1D,KAAKi2D,aACX,KAAKvD,GAAYyD,OACjB,KAAKzD,GAAYwD,QACf,OACIl2D,KAAKs1D,uBAAuB/hC,OAAUvzB,KAAKu1D,uBAAuBhiC,QACpEvzB,KAAK8/B,SAIA9/B,KAAKs1D,uBAAuB/hC,MAAQ,IAAMvzB,KAAKu1D,uBAAuBhiC,MAFpE,KAGX,QACE,OAAKvzB,KAAKm1D,0BAA0B5hC,MAG7BvzB,KAAKm1D,0BAA0B5hC,MAF7B,KAIf,QACE,MAAM+iC,EAAM,IAAIvpD,KACVwpD,EAAcD,EAAIE,QACtBF,EAAItpD,UAAkE,GAArDhN,KAAKi1D,6BAA6B1hC,MAAwB,GAAK,KAElF,OAAO,IAAIxmB,KAAKwpD,GAAatyD,YAK/ByyD,sCACF,OAAO12D,KAAK22D,wBAAwBhE,GAAUiE,cAG5CC,wCACF,OAAO72D,KAAK22D,wBAAwBhE,GAAUmE,gBAGpCC,eACV,MAAMA,EAAW,IAAIhqD,KAErB,OADAgqD,EAAS7C,QAAQ6C,EAAS5C,UAAY,GAC/B4C,EASTzlD,WACEtR,KAAKg3D,uBACLh3D,KAAKi3D,YACLj3D,KAAK80D,UAAU72B,aAAa58B,WAAU,KACpCrB,KAAKi3D,eAITC,2BAA2B3jC,GACzBvzB,KAAKg1D,2BAA2B33B,SAAS9J,GAG3C4jC,kBACE,OAAQn3D,KAAKi2D,aACX,KAAKvD,GAAYyD,OACjB,KAAKzD,GAAYwD,QACfl2D,KAAKs1D,uBAAuBj4B,SAAS,MACrCr9B,KAAKu1D,uBAAuBl4B,SAAS,MACrC,MACF,KAAKq1B,GAAY0D,QACfp2D,KAAKm1D,0BAA0B93B,SAAS,OAKpC45B,YACRj3D,KAAK60D,aAAa/jD,KAAK,CACrBmhD,aAAcjyD,KAAKq2D,sBACnBnE,eAAgBlyD,KAAKy2D,0BAIfO,uBACR,GAAIh3D,KAAK8/B,SAGP,OAFA9/B,KAAKg1D,2BAA2B33B,SAASu1B,GAAWmD,QACpD/1D,KAAKi1D,6BAA6B53B,SAASu1B,GAAWmD,QAC9C/1D,KAAKi2D,aACX,KAAKvD,GAAYyD,OACjB,KAAKzD,GAAYwD,QACfl2D,KAAKo1D,qBAAqB/3B,SAASr9B,KAAKo3D,oBAAoBC,cAAcjyD,MAAM,EAAG,KACnFpF,KAAKq1D,qBAAqBh4B,SAASr9B,KAAKo3D,oBAAoBE,eAAelyD,MAAM,EAAG,IAClD,MAA9BpF,KAAKu3D,wBACPv3D,KAAKs1D,uBAAuBj4B,SAC1Br9B,KAAKu3D,sBAAsBF,cAAcjyD,MAAM,EAAG,KAEpDpF,KAAKu1D,uBAAuBl4B,SAC1Br9B,KAAKu3D,sBAAsBD,eAAelyD,MAAM,EAAG,KAGvD,MACF,KAAKstD,GAAY0D,QACXp2D,KAAKu3D,uBACPv3D,KAAKm1D,0BAA0B93B,SAC7Br9B,KAAK6yD,SAASpgD,UAAU,IAAI1F,KAAK/M,KAAKu3D,uBAAwB,qBAGlEv3D,KAAKk1D,wBAAwB73B,SAC3Br9B,KAAK6yD,SAASpgD,UAAU,IAAI1F,KAAK/M,KAAKo3D,qBAAsB,0BAQlE,GAHAp3D,KAAKg1D,2BAA2B33B,SAASu1B,GAAWiD,WACpD71D,KAAKi1D,6BAA6B53B,SAASu1B,GAAWrwB,OAE9CviC,KAAKi2D,cACNvD,GAAYyD,OACfn2D,KAAKo1D,qBAAqB/3B,SAASr9B,KAAK+2D,SAASM,cAAcjyD,MAAM,EAAG,KACxEpF,KAAKq1D,qBAAqBh4B,SACxBr9B,KAAK22D,wBAAwBhE,GAAUiE,cAAc,GAAGY,gBASxDb,wBAAwBxY,GAEhC,MAAMsZ,EAAqB,GACrBC,EAAyB,GACzBC,EAAoB,GACpBC,EAAoB,GAM1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,GALA,GAKwB,CAE9C,IAAIC,EAAOF,EAAE5zD,WACTgoC,EAAU6rB,EAAE7zD,WAWhB,GARI4zD,EAAI,KACNE,EAAO,IAAMA,GAEXD,EAAI,KACN7rB,EAAU,IAAMA,GAIR,KAAN4rB,EAAU,CACZ,MAAMG,EAA6B,CACjCC,WAAY,GAAGF,KAAQ9rB,OACvBurB,eAAgB,MAAMvrB,KAExByrB,EAAS5iD,KAAKkjD,GAEd,MAAME,EAAyB,CAC7BD,WAAY,GAAGF,KAAQ9rB,OACvBurB,eAAgB,GAAGO,KAAQ9rB,KAE7BwrB,EAAK3iD,KAAKojD,OACL,CACL,MAAMC,EAAuB,CAC3BF,WAAY,GAAGF,KAAQ9rB,OACvBurB,eAAgB,GAAGO,KAAQ9rB,KAE7B0rB,EAAI7iD,KAAKqjD,GAET,MAAMC,EAAuB,CAC3BH,WAAY,GAAGF,KAAQ9rB,OACvBurB,eAAgB,GAAGK,EAAI,MAAM5rB,KAE/B2rB,EAAI9iD,KAAKsjD,IAMf,MAAMC,EAAa,IAAIX,KAAaC,KAAQF,KAASG,GAIrD,GAAIzZ,IAAUwU,GAAUmE,gBAAgD,MAA9B92D,KAAKu3D,uBAAiCv3D,KAAK8/B,SAAU,CAK7F,MAAO,CAJ2B,CAChCm4B,WAAYj4D,KAAK6yD,SAASpgD,UAAUzS,KAAKu3D,sBAAuB,WAChEC,eAAgBx3D,KAAK6yD,SAASpgD,UAAUzS,KAAKu3D,sBAAuB,UAE/C,CAAEU,WAAY,KAAMT,eAAgB,SAAWa,GACjE,GACLla,IAAUwU,GAAUiE,cACQ,MAA5B52D,KAAKo3D,qBACLp3D,KAAK8/B,SACL,CAKA,MAAO,CAJ2B,CAChCm4B,WAAYj4D,KAAK6yD,SAASpgD,UAAUzS,KAAKo3D,oBAAqB,WAC9DI,eAAgBx3D,KAAK6yD,SAASpgD,UAAUzS,KAAKo3D,oBAAqB,aAE1CiB,GAE1B,MAAO,CAAC,CAAEJ,WAAY,KAAMT,eAAgB,SAAWa,I,0BElVjD,mCAAkE,eAAY,qB,yBAAhC,mCAAoB,kD,sBAIpE,2B,0BADF,+BACE,0EACF,iD,wDADiB,yD,0BAbnB,gCACE,2DACE,+DAA0B,e,sBAA2B,oBACrD,iEAME,uEACF,mDACF,iDACA,gEAGF,yD,kCAb8B,+EAOF,mEAGc,kF,sBAMxC,2B,0BAFF,+BACE,6DAA0B,e,sBAA2B,oBACrD,wEACF,+C,uDAF4B,+EACX,yD,yDAKjB,gCAOE,mDAAM,e,sBACN,8BAAG,sFAASC,aAAA,UAAqB,e,sBAAkD,oBACnF,e,sBACF,6B,MAHQ,uHAC2B,sGACjC,gI,0BAeI,mCACE,eACF,qB,yBAFgD,mCAC9C,uF,0BATN,+BACE,gEAAgC,e,sBAA6B,oBAC7D,iEAME,sEAGF,kDACF,kD,mCAXkC,iFAOR,sE,sBAMxB,2B,0BADF,+BACE,0EACF,iD,wDADiB,yD,0BAfnB,gCACE,+DAaA,8DAGF,wD,kCAhBgC,sDAaA,oF,yDAO5B,mCAAqD,4GACnD,e,sBACF,oB,MADE,0G,sBAGJ,2B,0BAPF,+BACE,4DACE,6DAAO,e,sBAA6B,oBACpC,oEAGF,gDACA,0EACF,gD,yDANW,iFACgB,sDAIV,yD,yDAKjB,gCAOE,mDAAM,e,sBACN,8BAAG,sFAASA,aAAA,UAAqB,e,sBAAkD,oBACnF,e,sBACF,6B,MAHQ,uHAC2B,sGACjC,gI,0BAMF,gCACE,4DACE,2DAUA,2DASF,gDACF,wD,mCAbM,yDAUA,0D,0BAqBA,mCACE,eACF,qB,yBAF0D,4CACxD,6F,0BAlBR,gCACE,4DACE,2DAUA,iEAKE,sEAGF,kDACF,iDACF,yD,mCAbM,yDAQsB,gF,uBAM5B,gCACE,yDAQF,wD,0BAxDF,2DACE,sEAuBA,uEAuBA,sEAUF,qDACF,uB,kCA1DgB,4DACG,4DAuBA,4D,0BAqCf,gCACE,4DACE,2DAUA,2DASF,gDACF,wD,mCAfM,0DAAsB,uBAUtB,0DAAsB,wB,0BAuBtB,mCAIE,eACF,qB,yBAHE,4CAEA,6F,0BArBR,gCACE,4DACE,2DAUA,iEAKE,sEAMF,kDACF,iDACF,yD,mCAlBM,0DAAsB,uBAWN,kF,0BAQtB,gCACE,yDASF,wD,mCAFI,0D,0BA1DN,2DACE,sEAuBA,uEA0BA,sEAWF,qDACF,uB,kCA9DgB,4DACG,4DAuBA,4D,kCF1HR,IAAoB,0F,qCAApB,GAAoB,iLG/B1B,MAAMC,WAA6B,GAIxCh5D,YACYmI,EACA0H,EACAyjD,GAEV//C,MAAMpL,EAAa0H,EAAsByjD,GAJ/B,KAAAnrD,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAyjD,SAAAA,EALF,KAAAyF,aAAe,IAAI,EAAA/oD,c,kCAFlBgpD,IAAoB,0F,qCAApBA,GAAoB,8IAFhB,CAAC,CAAE15B,QAAS,EAAA25B,iBAAkBx5B,YAAa,EAAAy5B,UAAS,gqEDdrE,kCACE,qDACE,uDACE,sEAgBA,4DAIF,4CACA,yDACE,gB,uBACA,6CAWF,6CACF,2CACA,uDACE,yDACE,uEAkBA,+DASF,6CACA,yDACE,gB,uBACA,6CAWF,6CACF,2CACA,oGA4DA,oGAgEF,kDACA,sB,MAjNc,yCAGO,sDAgByB,qDAMxC,2GAEG,mJAcY,sDAkBe,qDAW9B,8GAEG,uJ,4oBEvDL,wC,sBACE,e,sBACF,qB,MAF4B,yEAC1B,4G,uBAEF,wCACE,e,sBACF,qB,MADE,kH,uBAWA,6BAAqC,e,sBAA2C,qB,MAA3C,gG,uBACrC,6BAAoC,e,sBAAqC,qB,MAArC,0F,uBACpC,6BAAmC,e,sBAAoC,qB,MAApC,yF,yDAVrC,wCAME,yG,sBAEA,6DACA,6DACA,6DACF,4C,sCAPE,kFADA,gCAKM,oEACA,mEACA,mE,yDAyBF,gCAME,kEAEE,+GAAuB,yFAFzB,oBAUA,kEACE,eACF,oBACF,kD,oDAVI,yEACA,qDAFA,uCAAuB,gBAAvB,CAAuB,gCAAvB,CAAuB,0BAQlB,wEACL,uF,0BArBV,gCACE,0DACE,4DACE,gEAA6B,e,sBAA6B,oBAC1D,kEAoBF,iDACF,+CACF,8C,mCAvBmC,iFAKb,4D,0BAsBlB,gCACE,gEAAkB,e,sBAAmB,oBACrC,8DAAsB,eAAmD,oBAC3E,iD,mCAFoB,uEACI,kG,0BAExB,gCACE,gEAAkB,e,sBAAmB,oBACrC,2DACF,iD,mCAFoB,uEACgC,6D,uBAGtD,gCACE,e,4CACF,qB,MADE,iJ,0BAZJ,gCACE,0DACE,+DAIA,+DAIF,8CACA,6DAGF,8C,mCAZkC,qDAIA,6DAKP,8D,yDAK3B,gCACE,0DACE,4DACE,gEAAkB,e,sBAA2B,oBAC7C,oEAIE,oHAED,oBACH,iDACF,+CACA,4DACE,gB,uBACF,oBACA,4DACE,8DACE,kEAAsB,gB,uBAA2B,oBACjD,kEAIE,sHAJF,oBAOF,iDACF,+CACF,6C,sCAzBwB,+EAKhB,8DAA4B,0BAMhC,yGAIwB,iFAKpB,gEAA8B,2B,sBAmChC,yB,sBACA,yB,yDAkCJ,gCACE,4DACE,8DACE,kEAAgC,e,sBAAiC,oBACjE,mEAKE,sHALF,oBAOF,mDACF,iDACF,+C,sCAVsC,qFAM9B,iE,uBAUA,kCAA0C,e,sBAA0B,qB,MAA1B,+E,uBAC1C,kCAA2C,e,sBAAuB,qB,MAAvB,4E,uHAW7C,gCACE,qEAME,kH,sBAGA,6DAKF,sDACF,oD,sCAVI,sGAEA,gDAIE,wG,yDA6Dd,gCACE,0DACE,kEAKE,mGAIA,8DACE,gEACE,6DACA,6DACF,qDACA,gEAAM,gB,uBAAyB,oBACjC,mDACF,iDACF,+CACF,6C,4DAZM,kEAK2C,sDACW,uDAE9C,+E,yDAzShB,iCACE,wBACA,mEAGA,mEAGA,wBACA,mEAYA,wBACA,0DACE,4DACE,8DACE,kEAAkB,gB,uBAAmB,oBACrC,kEAIE,8GAJF,oBAOF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACA,yBACA,8DA2BA,yBACA,8DAeA,yBACA,+DA6BA,yBACA,0DACE,2DACE,gB,uBACF,oBACA,4DACE,6BACA,8DACE,kEAAwB,gB,uBAA4B,oBACpD,kEAIE,6GAJF,oBAOF,iDACF,+CACF,6CACA,yBACA,0DACE,wDACE,iEAGE,8HAGA,gB,uBACA,kCACA,iEACF,iDACF,+CACF,6CACA,yDACE,8EAKE,6GAAiC,+FAGnC,+CACA,2BACA,4DACE,8DACE,gEACE,oEAAgC,gB,uBAAiC,oBACjE,oEAKE,wHALF,oBAQF,mDACF,iDACA,8DACE,gB,uBACF,oBACF,+CACA,2BACA,kEAcA,4BACA,8DACE,gEACE,kEACE,oEACE,2EACA,2EACA,wEAKE,6GALF,oBASF,sDACA,uEAiBF,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAmB,iB,wBAAoB,oBACvC,yEAIE,+GAED,oBACH,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAuB,iB,wBAAwB,oBAC/C,sEAIE,mHAJF,oBAOF,oDACF,kDACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAyB,iB,wBAA8B,oBACvD,sEAIE,kHAJF,oBAOF,oDACF,kDACF,gDACF,8CACA,0BACA,gEAqBF,4C,qCA5SmE,wDAGvC,6EASvB,iHAWqB,0EAKhB,yDAAuB,0BAM3B,0GAIc,sDA4BA,0GAgBA,wEAgCd,mGAK0B,kFAKtB,wDAAsB,0BAaxB,mEAEA,2GACI,yDACA,wDAIL,2DAED,6EAAyC,8CAAzC,CAAyC,sBAAzC,CAAyC,0BAYL,wFAM9B,mEAAiC,0BAMrC,wHAIc,qDAmBa,yDACA,yDAGrB,sFAGA,sCAAsB,0BAKG,yDAoB/B,mHAOqB,4EAKjB,0DAAwB,0BAM5B,gHAOyB,gFAKrB,8DAA4B,iEAUL,sFAKvB,6DAA2B,0BAQd,sDC9QpB,MAAMC,WAA6B,GAUxCn5D,YACEmI,EACA0H,EACAxP,EACAF,EACAinB,EACAtX,EACAwjD,EACAC,EACQhzD,EACAL,EACA2O,EACAknB,EACR/f,GAEAzC,MACEpL,EACA0H,EACAC,EACAwjD,EACAC,EACApzD,EACAinB,EACApR,EACA3V,GAfM,KAAAE,MAAAA,EACA,KAAAL,OAAAA,EACA,KAAA2O,SAAAA,EACA,KAAAknB,kBAAAA,EApBV,KAAAgD,aAAc,EAEd,KAAA9C,WAAY,EACZ,KAAAnB,UAAW,EACX,KAAAF,WAAY,EACZ,KAAA0B,SAAU,EACV,KAAA8iC,kBAAmB,EA8BfC,uBACF,QAAS54D,KAAK8/B,UAAY9/B,KAAK64D,uBAG7BA,4BACF,OACG74D,KAAK8/B,WACL9/B,KAAK84D,wBAA0B94D,KAAK+4D,uBAAyB/4D,KAAKg5D,yBAInEF,6BACF,OAAO94D,KAAKw1B,aAAex1B,KAAKm0B,WAAan0B,KAAKq0B,UAGhD0kC,4BACF,OAAO/4D,KAAKy1B,WAAaz1B,KAAKq0B,SAI5B2kC,8BACF,OACGh5D,KAAK61B,SAAW71B,KAAK24D,oBACrB34D,KAAKw1B,aACJx1B,KAAKm0B,WAAan0B,KAAKq0B,UAI7BikC,eACEt4D,KAAKs1B,kBAAkBT,OAAO9yB,QAG1BuP,W,kDAEJtR,KAAKw1B,UAAYx1B,KAAKoP,qBAAqBomB,YAC3Cx1B,KAAKq0B,SAAWr0B,KAAKs1B,kBAAkBjB,SAAStyB,QAChD/B,KAAKm0B,UAAYn0B,KAAKs1B,kBAAkBnB,UAAUpyB,QAClD/B,KAAK61B,SAA6D,KAAlC,QAAjB,EAAM,OAAN9zB,aAAM,IAANA,YAAM,EAANA,OAAQgH,iBAAS,eAAEC,UAAUvC,QAAQ,UACpDzG,KAAK24D,iBACH34D,KAAKoP,qBAAqB6pD,aAA+B,QAAjB,EAAM,OAANl3D,aAAM,IAANA,YAAM,EAANA,OAAQgH,iBAAS,eAAEmwD,WAAW14D,SAAS,gBAEjFR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mCAI/D,GAHIA,EAAOizC,SACT5zD,KAAK4zD,OAASjzC,EAAOizC,QAEnBjzC,EAAOvV,KAAM,CACf,MAAMA,EAAO1H,SAASid,EAAOvV,KAAM,MACnCpL,KAAKoL,KAAOA,QAERpL,KAAKia,YAGblY,OAAO2c,YAAW,KACX1e,KAAK8/B,UACRv2B,SAASqT,eAAe,QAAQ5K,UAEjC,QAGCzB,S,sGACJ,eAAU,EAAMA,OAAM,cACpBvQ,KAAKy7C,UACE,MAML/f,S,sGACJ,eAAU,EAAMA,OAAM,cACpB17B,KAAKy7C,UACE,MAMXA,SAEO15C,OAAewc,iBAAiBhY,WAAW,aAC9CvG,KAAKP,OAAOY,SAAS,CAAC,cAEtBL,KAAKoO,SAAS+pB,Q,kCAxHPugC,IAAoB,kY,qCAApBA,GAAoB,moH,GAAA,MD1BjC,kCAAY,8CAAY,EAAAnoD,YACtB,sDACE,uDACE,4DAAmC,2CAAS,EAAAkrC,YAAU,e,sBAAqB,oBAC7E,6CACA,wDACE,4DAAoB,gBAAW,oBACjC,6CACA,yDACE,8DACE,8DAA8B,gB,uBAAmB,oBACjD,sDACF,+CACF,6CACF,2CACA,kEA+SF,yCACA,sB,iCA/TkC,8CAG0B,yEAGlC,kDAGe,uEAC3B,sDAAwB,yEACa,uDAIvC,mD,4kBECL,MAAM0d,GAyBX55D,YACYuzD,EACAprD,EACA0H,EACAC,EACAyG,EACAssC,EACAz7B,EACFpR,GAPE,KAAAu9C,YAAAA,EACA,KAAAprD,YAAAA,EACA,KAAA0H,qBAAAA,EACA,KAAAC,mBAAAA,EACA,KAAAyG,OAAAA,EACA,KAAAssC,cAAAA,EACA,KAAAz7B,cAAAA,EACF,KAAApR,WAAAA,EAhCV,KAAA29C,aAAc,EACd,KAAAE,SAAW9B,GACX,KAAA5O,QAAS,EACT,KAAA/sC,SAAU,EACV,KAAAyjD,YAAa,EACb,KAAA7G,SAAmB,EACnB,KAAAnnD,KAAiB,KACjB,KAAAqiB,MAAoB,GACpB,KAAA4rC,cAA4B,GAM5B,KAAAxW,eAAgB,EAChB,KAAAyK,aAAc,EAoBRh8C,W,0CACJtR,KAAKkzD,kBAAoBlzD,KAAK2mB,cAAciW,oBAAoBf,GAAWi4B,gBAGvE75C,KAAKhZ,EAAsC,M,0CAC/CjB,KAAK2V,SAAU,EACf,MAAM8X,QAAcztB,KAAK8yD,YAAYryB,kBACrCzgC,KAAKytB,MAAQA,EACgB,MAAzBztB,KAAKs5D,uBACDt5D,KAAKs5D,mBAGXt5D,KAAKmsD,YAEPnsD,KAAK2V,SAAU,EACf3V,KAAK0iD,QAAS,KAGVr0C,OAAOpN,EAAsC,M,0CACjDjB,KAAK0iD,QAAS,EACd1iD,KAAKytB,MAAQ,SACPztB,KAAKia,KAAKhZ,MAGZmkC,U,0CACJ,IACEplC,KAAKo5D,YAAa,QACZp5D,KAAKqO,OAAOrO,KAAKiB,Q,QAEvBjB,KAAKo5D,YAAa,MAIhBpW,YAAY/hD,EAAsC,M,0CACtDjB,KAAKiB,OAASA,QACRjB,KAAKkH,OAAO,SAGdA,OAAOkO,EAAkB,M,0CAK7B,GAJApV,KAAK6iD,eAAgB,EACK,MAAtB7iD,KAAK8iD,eACPv9B,aAAavlB,KAAK8iD,eAEL,MAAX1tC,EAIF,OAHApV,KAAKstD,YAActtD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YACxDzjD,KAAKq5D,cAAgBr5D,KAAKytB,MAAMxsB,QAAQwH,GAAqB,MAAfzI,KAAKiB,QAAkBjB,KAAKiB,OAAOwH,UACjFzI,KAAKu5D,kBAGPv5D,KAAK6iD,eAAgB,EACrB7iD,KAAK8iD,cAAgBpkC,YAAW,IAAY,mCAC1C1e,KAAKstD,YAActtD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YACxDzjD,KAAKq5D,cAAgBr5D,KAAKytB,MAAMxsB,QAAQwH,GAAqB,MAAfzI,KAAKiB,QAAkBjB,KAAKiB,OAAOwH,KACjFzI,KAAKu5D,kBACLv5D,KAAK6iD,eAAgB,MACpBztC,MAGCokD,eAAe/wD,G,0CACnB,GAA0B,MAAtBzI,KAAKgmB,eAAuC,MAAdvd,EAAE0nB,SAClC,OASF,WAPwBnwB,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,8BACnB3Q,KAAK0H,YAAYiJ,EAAE,kBACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAKgmB,cAAgBhmB,KAAK8yD,YAAY2G,yBAAyBhxD,EAAEzJ,UAC3DgB,KAAKgmB,cAC4B,MAAnChmB,KAAK05D,2BACP15D,KAAK05D,8BAGL15D,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,0BAClE3Q,KAAKia,QAEb,MAAOrb,GACPoB,KAAKuV,WAAWK,MAAMhX,GAExBoB,KAAKgmB,cAAgB,QAGjB0V,OAAOjzB,G,0CACX,GAA0B,MAAtBzI,KAAKgmB,cACP,OAAO,EAST,WAPwBhmB,KAAKoP,qBAAqB+M,WAChDnc,KAAK0H,YAAYiJ,EAAE,0BACnB3Q,KAAK0H,YAAYiJ,EAAE,cACnB3Q,KAAK0H,YAAYiJ,EAAE,OACnB3Q,KAAK0H,YAAYiJ,EAAE,MACnB,YAGA,OAAO,EAGT,IACE3Q,KAAKgmB,cAAgBhmB,KAAK8yD,YAAY5yB,iBAAiBz3B,EAAEzJ,UACnDgB,KAAKgmB,cAEoB,MAA3BhmB,KAAK25D,mBACP35D,KAAK25D,sBAGL35D,KAAKoP,qBAAqBsB,UAAU,UAAW,KAAM1Q,KAAK0H,YAAYiJ,EAAE,sBAClE3Q,KAAKolC,WAEb,MAAOxmC,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGxB,OADAoB,KAAKgmB,cAAgB,MACd,KAGT+Q,KAAKtuB,GACH,MACMirD,EADkB1zD,KAAKqP,mBAAmBokD,aACjBhrD,EAAEqpD,SAAW,IAAMrpD,EAAE4pD,UACpDryD,KAAKoP,qBAAqB6nB,gBAAgBy8B,GAC1C1zD,KAAKoP,qBAAqBsB,UACxB,UACA,KACA1Q,KAAK0H,YAAYiJ,EAAE,cAAe3Q,KAAK0H,YAAYiJ,EAAE,cAIzDipD,oBACE55D,KAAKkH,OAAO,KAGdilD,YACEnsD,KAAKosD,kBACLpsD,KAAKurD,aAAc,EACnBvrD,KAAKgjD,YAAY,MAGnBuJ,WAAWnhD,GACTpL,KAAKosD,kBACLpsD,KAAK0rD,aAAetgD,EACpBpL,KAAKgjD,aAAav6C,GAAMA,EAAE2C,OAASA,IAGrCghD,kBACEpsD,KAAKurD,aAAc,EACnBvrD,KAAK0rD,aAAe,KAGd6N,kBACiB,MAAnBv5D,KAAKyjD,aACPzjD,KAAKq5D,cAAgBr5D,KAAKoiD,cAAcyX,YAAY75D,KAAKq5D,cAAer5D,KAAKyjD,c,sBCrM3E,yB,sBACA,yB,uBAMA,gCACE,uD,sBAKA,+DAAsB,e,sBAAuB,oBAC/C,0D,MAJI,uFAGoB,4E,uBAExB,gCACE,uD,sBAKA,+DAAsB,e,sBAAgC,oBACxD,0D,MAJI,gGAGoB,qF,uBAExB,gCACE,uD,sBAKA,+DAAsB,e,sBAAoC,oBAC5D,0D,MAJI,oGAGoB,yF,uBAExB,gCACE,uD,sBACA,+DAAsB,e,sBAAsB,oBAC9C,0D,MAFsC,sFACd,2E,uBAExB,gCACE,uD,sBAKA,+DAAsB,e,sBAA8B,oBACtD,0D,MAJI,8FAGoB,mF,kCDpCnB0V,IAAa,4N,qCAAbA,K,kGCoDT,iCAME,kJ,sBAGA,mDACF,4C,sCALE,kFAHA,0E,yDAtEN,kCAGE,yHAKA,qDACE,uDACE,yDACE,4DACA,6DACF,+CACF,6CACA,yDACE,4DACE,gBACA,4CAQA,yEAQA,yEAQA,yEAIA,yEAQF,+CACA,6DAAqB,gB,uBAAqC,oBAC5D,6CACF,2CACA,wDACE,2DAKE,2H,uBAEA,qDACF,6CACA,8DAWA,2DAKE,qH,uBAEA,qDACF,6CACF,2CACF,yC,mDApFE,yCAAAttD,MAAA,iBAMkD,mEACL,mEAKvC,4EACe,qDAQA,qDAQA,kEAQA,oDAIA,0DASI,0FAQrB,oGAYC,qDAQD,+FCzEC,MAAMiuD,GAJb,cAOW,KAAAz9B,kBAAmB,EAClB,KAAAhE,WAAa,IAAI,EAAA9oB,aACjB,KAAAwqD,eAAiB,IAAI,EAAAxqD,aACrB,KAAAyqD,iBAAmB,IAAI,EAAAzqD,aACvB,KAAA0qD,aAAe,IAAI,EAAA1qD,aAE7B,KAAA6jD,SAAW9B,GAEX4I,WAAWzxD,GACTzI,KAAKq4B,WAAWvnB,KAAKrI,GAGvB0xD,aAAa1xD,GACXzI,KAAK+5D,eAAejpD,KAAKrI,GAG3B+wD,eAAe/wD,GACbzI,KAAKg6D,iBAAiBlpD,KAAKrI,GAG7BizB,OAAOjzB,GACLzI,KAAKi6D,aAAanpD,KAAKrI,I,kCAxBdqxD,K,qCAAAA,GAAiB,kkDDV9B,uCA0FA,qB,KAxFgB,oC,8ZEDd,gCACE,wDACF,2C,uBA2BA,wC,sBACE,e,sBACF,qB,MAF4B,yEAC1B,wG,sBAGA,yB,yDACA,gCACE,qDACA,qDAAG,e,sBAA4B,oBAC/B,6DAEE,oGAIA,e,uBACF,oBACF,sD,sCATK,gFAKD,4DAEA,qG,0BAXN,gCACE,yDACA,qEAYF,2C,kCAb8C,oDAC7B,oD,yDAajB,gCACE,wDACE,yDACE,e,sBACF,oBACA,0DACE,gEAKE,+HAEA,gEACE,kEAAkB,0BAA+C,oBACjE,mEAAmB,gB,uBAA2B,oBAChD,mDACA,iEAA4B,gBAAwC,oBACpE,8DAAM,0BAAuD,oBAC/D,iDACA,iEAKE,+HAEA,gEACE,kEAAkB,0BAA0C,oBAC5D,mEAAmB,gB,uBAA2B,oBAChD,mDACA,iEAA4B,gBAAwC,oBACpE,8DAAM,0BAAuD,oBAC/D,iDACF,+CACF,6CACA,0DACE,2DACE,gB,uBACA,iCAAwB,gBAAkB,oBAC5C,+CACA,4DACE,wEAIE,6GAAiC,0FAAjC,CAAiC,sGAAjC,CAAiC,2F,uBAIlC,oBACH,+CACF,6CACF,oD,qCAlDM,kGAYuB,kFAEO,+EAYP,kFAEO,+EAO9B,yGACwB,yDAKtB,yFADA,iCAAe,mC,uBAYrB,gCACE,qDAAG,e,sBAA4B,oBACjC,6C,MADK,iF,yDAEL,gCACE,0DACE,sEAIE,8GAAiC,2FAAjC,CAAiC,uGAAjC,CAAiC,4F,sBAKnC,gDACF,8CACF,4C,sCATM,uFADA,yCAAuB,mC,0BAP/B,gCACE,2DAGA,2DAcF,oD,kCAjByB,oFAGU,qF,oDCjF/B,GAAc,gBAMb,MAAMM,WAA+B,GAS1C76D,YACEuzD,EACAprD,EACA0H,EACAC,EACAyG,EACA6Q,EACAy7B,EACQkF,EACA1nD,EACAH,EACA0jB,EACAkkC,EACAhyB,EACR9f,GAEAzC,MACEggD,EACAprD,EACA0H,EACAC,EACAyG,EACAssC,EACAz7B,EACApR,GAhBM,KAAA+xC,WAAAA,EACA,KAAA1nD,aAAAA,EACA,KAAAH,OAAAA,EACA,KAAA0jB,YAAAA,EACA,KAAAkkC,kBAAAA,EACA,KAAAhyB,mBAAAA,EApBV,KAAA83B,gBAAiB,EAEjB,KAAAD,WAAa,IAAI/lD,IA+Bf2L,MAAMwmD,iBAAmB,IAAY,mCACnCt5D,KAAKq6D,sBACLr6D,KAAKmsD,eAIH76C,W,gHAEJtR,KAAKmtD,iBACHntD,KAAKsnD,WAAWnzB,UAAUpyB,SAAW/B,KAAKoP,qBAAqBomB,mBAG3Dx1B,KAAKJ,aAAa06D,iCAAiC,YAEnD,EAAMhpD,SAAQ,WAEpB,MAAMs8C,QAA2B5tD,KAAK6tD,eACR,OAAhB,QAAV,EAAA7tD,KAAKqX,aAAK,eAAEosC,cACdzjD,KAAKyjD,WAAazjD,KAAKqX,MAAMosC,YAG1BzjD,KAAKmjB,YAAYumC,eAGpB1pD,KAAK2pD,cAAgB5nD,OAAO2c,YAAW,KAChC1e,KAAK0iD,QACR1iD,KAAKia,SAEN,KANHja,KAAKia,OASFja,KAAKmjB,YAAYumC,iBAAkBkE,GACtC7rD,OAAO2c,YAAW,KAAK,MAAC,OAAA1e,KAAKsnD,WAAW3yB,kBAAkB5yB,OAAkB,QAAV,EAAA/B,KAAKqX,aAAK,eAAEud,WAAU,GAI1F50B,KAAKq1B,mBAAmBh0B,UAAU,IAAcyS,IAC9C9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,GACO,kBADChnB,EAAQrJ,QAEZ1I,OAAO2c,YAAW,KAChB1e,KAAKia,SACJ,KAMPja,KAAKqnD,kBAAkBvf,2BAK7BlmC,cAE4B,MAAtB5B,KAAK2pD,eACP5nD,OAAOwjB,aAAavlB,KAAK2pD,eAG3B3pD,KAAKqoD,YAELroD,KAAKq1B,mBAAmBxzB,YAAY,IAGhC0qD,WAAWnhD,G,0CACfpL,KAAKP,OAAOY,SAAS,CAAC,cAAe,CAAEC,YAAa,CAAE8K,KAAMA,QAGxD8uD,WAAWzxD,G,0CACfzI,KAAKP,OAAOY,SAAS,CAAC,cAAe,CAAEC,YAAa,CAAEszD,OAAQnrD,EAAEzJ,SAG5Du7D,U,0CACAv6D,KAAKkzD,aAGTlzD,KAAKP,OAAOY,SAAS,CAAC,iBAGlBm5D,eAAe/wD,G,sHACfzI,KAAKkzD,aAGT,EAAMsG,eAAc,UAAC/wD,MAGvB2lD,gBACE,OACEpuD,KAAKstD,cAAiBttD,KAAK6iD,eAAiB7iD,KAAKoiD,cAAcoB,aAAaxjD,KAAKyjD,YAI7E4W,sBAEN,MAAMnN,EAAa,IAAI/lD,IACvBnH,KAAKytB,MAAMpmB,SAASoB,IACdykD,EAAWt3B,IAAIntB,EAAE2C,MACnB8hD,EAAW1lD,IAAIiB,EAAE2C,KAAM8hD,EAAWp6B,IAAIrqB,EAAE2C,MAAQ,GAEhD8hD,EAAW1lD,IAAIiB,EAAE2C,KAAM,MAG3BpL,KAAKktD,WAAaA,EAGN7E,Y,0CACZroD,KAAKqX,MAAQ,CACXud,QAAS50B,KAAKsnD,WAAW/yB,kBAAkBxyB,QAC3C0hD,WAAYzjD,KAAKyjD,WACjBh2B,MAAOztB,KAAKytB,MACZy/B,WAAYltD,KAAKktD,kBAEbltD,KAAKJ,aAAa46D,6BAA6Bx6D,KAAKqX,UAG9Cw2C,e,0CAEZ,OADA7tD,KAAKqX,YAAcrX,KAAKJ,aAAa66D,+BACnB,MAAdz6D,KAAKqX,QAIe,MAApBrX,KAAKqX,MAAMoW,QACbztB,KAAKytB,MAAQztB,KAAKqX,MAAMoW,OAEG,MAAzBztB,KAAKqX,MAAM61C,aACbltD,KAAKktD,WAAaltD,KAAKqX,MAAM61C,aAGxB,O,kCAnKEkN,IAAsB,qZ,qCAAtBA,GAAsB,s2CD/BnC,gCACE,wDAGA,oDAAoB,e,sBAAmB,oBACvC,qDACE,0DAIE,sEAAwB,2BACf,EAAAlzD,OAAO,Q,uBALlB,oBASA,kDACF,2CACA,uDACE,4DAGE,2CAAS,EAAAqzD,a,uBAIT,oDACF,6CACF,2CACF,yCACA,yDACE,kEAGA,2DAeA,sEAsDA,oEAmBF,yCACA,sB,MAzHqB,2DAGC,wEAIhB,kGAEA,wCAYA,+FACA,0CAMG,qGAC0D,wDAG1C,wFAeR,sFAsDA,8D,ocErEf,wC,sBACE,e,sBACF,qB,MAF4B,yEAC1B,wG,sBAGA,yB,yDACA,gCACE,qDAAG,e,sBAA4B,oBAC/B,6DAEE,oGAIA,e,sBACF,oBACF,qD,sCATK,gFAKD,4DAEA,oG,0BAVN,gCACE,yDACA,qEAWF,2C,kCAZ8C,oDAC7B,oD,yDAYjB,gCACE,uDACE,eACA,iCAAyB,eAA0B,oBACrD,4CACA,wDACE,qEAIE,6GAAiC,0FAAjC,CAAiC,sGAAjC,CAAiC,2F,uBAKnC,+CACF,6CACF,2C,qCAfI,iFACyB,iEAKvB,wFADA,yCAAuB,mC,qCC7BzB,GAAc,oBAMb,MAAMG,WAA0B,GAOrCn7D,YACEuzD,EACAprD,EACA0H,EACAC,EACAyG,EACA6Q,EACAy7B,EACQkF,EACA1nD,EACAE,EACAsO,EACAi5C,EACAhyB,EACA51B,EACR8V,GAEAzC,MACEggD,EACAprD,EACA0H,EACAC,EACAyG,EACAssC,EACAz7B,EACApR,GAjBM,KAAA+xC,WAAAA,EACA,KAAA1nD,aAAAA,EACA,KAAAE,MAAAA,EACA,KAAAsO,SAAAA,EACA,KAAAi5C,kBAAAA,EACA,KAAAhyB,mBAAAA,EACA,KAAA51B,OAAAA,EAhBF,KAAAgoD,iBAAkB,EA6BxB30C,MAAMwmD,iBAAmB,IAAY,mCACnCt5D,KAAKusD,WAAWvsD,KAAKoL,SAEvBpL,KAAKynD,gBACiC,MAAnC1lD,OAAewc,mBACdxc,OAAewc,iBAAiBhY,WAAW,cAG3C+K,W,gHAEE,EAAMA,SAAQ,WACpBtR,KAAKF,MAAMQ,YAAYU,MAAK,EAAAumB,GAAA,MAASlmB,WAAiBsf,GAAW,mC,MAQ/D,GAPI3gB,KAAKynD,kBACPznD,KAAKqX,YAAcrX,KAAKJ,aAAa+6D,mCACP,OAAhB,QAAV,EAAA36D,KAAKqX,aAAK,eAAEosC,cACdzjD,KAAKyjD,WAAazjD,KAAKqX,MAAMosC,aAId,MAAf9iC,EAAOvV,KAAc,CAEvB,OADApL,KAAKoL,KAAO1H,SAASid,EAAOvV,KAAM,MAC1BpL,KAAKoL,MACX,KAAKkmD,GAAS56B,KACZ12B,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,gBACxC,MACF,KAAK2gD,GAASiC,KACZvzD,KAAK2nD,cAAgB3nD,KAAK0H,YAAYiJ,EAAE,sBAKtC3Q,KAAKia,MAAMxR,GAAMA,EAAE2C,OAASpL,KAAKoL,OAIrCpL,KAAKynD,iBAAiC,MAAdznD,KAAKqX,OAC/BtV,OAAO2c,YAAW,KAAK,MAAC,OAAA1e,KAAKsnD,WAAW3yB,kBAAkB5yB,OAAkB,QAAV,EAAA/B,KAAKqX,aAAK,eAAEud,WAAU,GAE1F50B,KAAKJ,aAAa06D,iCAAiC,WAIrDt6D,KAAKq1B,mBAAmBh0B,UAAU,IAAcyS,IAC9C9T,KAAK8V,OAAOglB,KAAI,IAAY,mCAC1B,GACO,kBADChnB,EAAQrJ,QAERqJ,EAAQs0C,eACVpoD,KAAK46D,eAAiB74D,OAAO2c,YAAW,KACtC1e,KAAKolC,YACJ,MAOTplC,KAAKqnD,kBAAkBvf,2BAK7BlmC,cAE6B,MAAvB5B,KAAK46D,gBACP74D,OAAOwjB,aAAavlB,KAAK46D,gBAG3B56D,KAAKqoD,YAELroD,KAAKq1B,mBAAmBxzB,YAAY,IAGhCq4D,WAAWzxD,G,0CACfzI,KAAKP,OAAOY,SAAS,CAAC,cAAe,CAAEC,YAAa,CAAEszD,OAAQnrD,EAAEzJ,SAG5Du7D,U,0CACAv6D,KAAKkzD,aAGTlzD,KAAKP,OAAOY,SAAS,CAAC,aAAc,CAAEC,YAAa,CAAE8K,KAAMpL,KAAKoL,WAG5DouD,eAAe/wD,G,sHACfzI,KAAKkzD,aAGT,EAAMsG,eAAc,UAAC/wD,MAGvB0vB,OACGp2B,OAAe2mD,eAAiB,IACjC1oD,KAAKoO,SAAS+pB,OAGFkwB,Y,0CACZroD,KAAKqX,MAAQ,CACXud,QAAS50B,KAAKsnD,WAAW/yB,kBAAkBxyB,QAC3C0hD,WAAYzjD,KAAKyjD,kBAEbzjD,KAAKJ,aAAa06D,iCAAiCt6D,KAAKqX,W,kCAtIrDqjD,IAAiB,uc,qCAAjBA,GAAiB,knCDlC9B,gCACE,qDACE,0DAAmC,2CAAS,EAAAviC,UAC1C,0DAA0B,wBAAqD,oBAC/E,wDAAM,gB,uBAAmB,oBAC3B,6CACF,2CACA,sDAAoB,gB,uBAAmB,oBACvC,uDACE,2DAIE,sEAAwB,2BACf,EAAAjxB,OAAO,Q,uBALlB,oBASA,kDACF,2CACA,uDACE,4DAGE,2CAAS,EAAAqzD,a,uBAIT,qDACF,6CACF,2CACF,yCACA,0DACE,mEAGA,2DAcA,4DAkBF,yCACA,sB,MAjEY,0EAGU,yEAIhB,iGAEA,wCAYA,+FACA,0CAMG,uFAC0D,wDAG1C,kEAcU,mE,4HECnC,MAAMM,GAAiB,CACrB,CACEz7C,KAAM,GACN07C,WAAY,OACZC,UAAW,QAEb,CACE37C,KAAM,QACN07C,WAAY,cACZC,UAAW,QAEb,CACE37C,KAAM,OACN47C,UAAWpkD,GACX/W,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,SAEjB,CACE+H,KAAM,QACN47C,UAAW93C,GACXrjB,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,UAEjB,CACE+H,KAAM,OACN47C,UAAW38C,GACXxe,YAAa,CAAC,GACd6K,KAAM,CAAE2M,MAAO,SAEjB,CACE+H,KAAM,MACN47C,UAAW5lC,GACXv1B,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,QAEjB,CACE+H,KAAM,cACN47C,UAAWjuC,GACXltB,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,MACN47C,UAAW3uC,GACXxsB,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,QAEjB,CACE+H,KAAM,eACN47C,UAAWrwC,GACXjgB,KAAM,CAAE2M,MAAO,iBAEjB,CACE+H,KAAM,kBACN47C,UAAW30C,GACXxmB,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,oBAEjB,CACE+H,KAAM,WACN47C,UAAWt1C,GACX7lB,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,aAEjB,CACE+H,KAAM,OACN47C,UAAW5kD,EACXvW,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,SAEjB,CACE+H,KAAM,cACN47C,UAAWnoD,EACXhT,YAAa,CAACkP,GACdrE,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,UACN47C,UAAW5T,GACXvnD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,YAEjB,CACE+H,KAAM,cACN47C,UAAWhK,GACXnxD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,0BACN47C,UAAWzM,GACX1uD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,4BAEjB,CACE+H,KAAM,aACN47C,UAAW5b,GACXv/C,YAAa,CAACP,EAAkBuB,GAChC6J,KAAM,CAAE2M,MAAO,cACf4jD,sBAAuB,UAEzB,CACE77C,KAAM,cACN47C,UAAW5b,GACXv/C,YAAa,CAACP,EAAkBuB,GAChC6J,KAAM,CAAE2M,MAAO,eACf4jD,sBAAuB,UAEzB,CACE77C,KAAM,eACN47C,UAAW/L,GACXpvD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,iBAEjB,CACE+H,KAAM,cACN47C,UAAW9R,GACXrpD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,cACN47C,UAAWhZ,GACXniD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,YACN47C,UAAWvhC,GACX55B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,cAEjB,CACE+H,KAAM,oBACN47C,UAAW9iC,GACXr4B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,sBAEjB,CACE+H,KAAM,SACN47C,UAAWz7B,GACX1/B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,WAEjB,CACE+H,KAAM,UACN47C,UAAWx6B,GACX3gC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,YAEjB,CACE+H,KAAM,aACN47C,UAAW56B,GACXvgC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,eAEjB,CACE+H,KAAM,cACN47C,UAAW56B,GACXvgC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,gBAEjB,CACE+H,KAAM,OACN47C,UAAWtpB,GACX7xC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,SAEjB,CACE+H,KAAM,mBACN47C,UAAWzgC,GACX16B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,qBAEjB,CACE+H,KAAM,UACN47C,UAAWv1B,GACX5lC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,YAEjB,CACE+H,KAAM,UACN47C,UAAWn6B,GACXhhC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,YAEjB,CACE+H,KAAM,eACN47C,UAAWjhC,GACXrvB,KAAM,CAAE2M,MAAO,iBAEjB,CACE+H,KAAM,eACN47C,UAAW5b,GACXv/C,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,iBAEjB,CACE+H,KAAM,YACN47C,UAAWN,GACX76D,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,cAEjB,CACE+H,KAAM,WACN47C,UAAWtC,GACX74D,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,aAEjB,CACE+H,KAAM,YACN47C,UAAWtC,GACX74D,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,cAEjB,CACE+H,KAAM,uBACN47C,UAAW1kC,GACXz2B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,yBAEjB,CACE+H,KAAM,OACN47C,UAAW3gC,GACX3vB,KAAM,CAAE2M,MAAO,QACf2wC,SAAU,CACR,CACE5oC,KAAM,GACN07C,WAAY,cACZC,UAAW,QAEb,CACE37C,KAAM,UACN47C,UAAW5R,GACXvpD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,gBACf4jD,sBAAuB,UAEzB,CACE77C,KAAM,QACN47C,UAAWlO,GACXjtD,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,eAEjB,CACE+H,KAAM,YACN47C,UAAWvhC,GACX55B,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,mBAEjB,CACE+H,KAAM,WACN47C,UAAWntB,GACXhuC,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,kBAEjB,CACE+H,KAAM,OACN47C,UAAWZ,GACXv6D,YAAa,CAACP,GACdoL,KAAM,CAAE2M,MAAO,iBAOhB,MAAM6jD,GACXC,aAAar7D,GACX,OAAO,EAGTs7D,MAAMt7D,EAA+Bu7D,IAIrCC,aAAax7D,GACX,OAAO,EAGTy7D,SAASz7D,GACP,OAAO,KAGT07D,iBAAiBC,EAAgCC,GAC/C,OAAO,G,kCAlBER,K,wCAAAA,GAAoB,QAApBA,GAAoB,OAiC1B,MAAMS,I,kCAAAA,K,oCAAAA,K,yCAFA,CAAC,CAAE98B,QAAS,EAAA+8B,mBAAoBC,SAAUX,KAAuB,SARnE,CACP,EAAAY,aAAA,QAAqBjB,GAAQ,CAC3BkB,SAAS,EACTC,oBAAqB,YAIf,EAAAF,gBCvVL,MAAMG,WAAyB,EADtC,c,oBAEY,KAAAv7D,SAAW,gB,oFADVu7D,MAAgB,GAAhBA,K,2CAAAA,GAAgB,QAAhBA,GAAgB,O,2SCGtB,MAAM,GAIX18D,YACUgoC,EACAnuB,EACAhK,EACA1H,GAHA,KAAA6/B,SAAAA,EACA,KAAAnuB,cAAAA,EACA,KAAAhK,qBAAAA,EACA,KAAA1H,YAAAA,EAPV,KAAAmS,cAAe,EACf,KAAAF,eAAiB,GASjB+C,iBACE1c,KAAK6Z,cAAgB7Z,KAAK6Z,aAGtBtJ,S,iDACQvQ,KAAKoZ,cAAcgC,wBAAwBpb,KAAK2Z,eAAgB,OAS5E3Z,KAAKunC,SAAS/6B,OAAM,GARlBxM,KAAKoP,qBAAqBsB,UACxB,QACA1Q,KAAK0H,YAAYiJ,EAAE,iBACnB3Q,KAAK0H,YAAYiJ,EAAE,8B,kCApBd,IAAyB,4G,qCAAzB,K,2SCCN,MAAM,GAGXpR,YACU6nC,EACAznC,GADA,KAAAynC,aAAAA,EACA,KAAAznC,oBAAAA,EAJA,KAAAq7D,UAAY,GAOtBrU,kBACE,MAAO,CAAC,OAAQ,WAAY,UAAW,cAAe,iBAGlDC,qB,0CACJ,WAAY5mD,KAAK26C,WACf,OAAO,EAGT,MAAM9L,EAAM7uC,KAAKonC,aAAa7a,KAAKvsB,KAAKg7D,UAAW,CAAEhyB,qBAAqB,IAE1E,GAAW,MAAP6F,EACF,OAAO,EAIT,OAAkB,WADGA,EAAI5H,sBAIrB0T,U,0CACJ,cAAe36C,KAAKL,oBAAoBie,2B,kCA5B/B,IAAuB,qC,wCAAvB,GAAuB,QAAvB,GAAuB,O,8DCF7B,MAAMs+C,WAAkC,I,oFAAlCA,MAAyB,GAAzBA,K,wCAAAA,GAAyB,86BCPtC,+BACE,qDACE,0DAAkC,8CAAY,EAAA3rD,YAC5C,yDACE,2DACE,8DAAuB,gB,uBAAmC,oBAC1D,+DACE,iEACE,mEACE,wEAA4B,gB,uBAAyB,oBACrD,wEAKE,0EALF,oBASF,uDACA,oEACE,yEAOE,2CAAS,EAAAmM,oB,uBAGT,iEAKF,yDACF,uDACF,qDACF,mDACA,gEACE,gB,uBACF,oBACF,iDACF,+CACA,4DACE,iEACE,8DAAM,gB,uBAAiB,oBACzB,iDACA,iEACE,gB,uBACF,oBACF,+CACF,6CACF,2CACF,yCACA,sB,MAnDiC,0FAIW,gFAG1B,sFAGA,4CAYA,wGAEA,gDAKE,wGAOR,8HAMI,wEAGN,0G,0LC3CH,MAAM,WAAgC,GAD7C,c,oBAEE,KAAAs+C,UAAYkB,I,oFADD,MAAuB,GAAvB,K,2CAAA,GAAuB,QAAvB,GAAuB,OCF7B,MAAMC,WAA2B,EADxC,c,oBAEY,KAAAz7D,SAAW,gB,oFADVy7D,MAAkB,GAAlBA,K,2CAAAA,GAAkB,QAAlBA,GAAkB,OCHxB,MAAMC,WAAuBjpD,EAGlC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKq8D,OAASr8D,KAAKoT,oBAAoB,WCLpC,MAAMkpD,WAA2BnpD,EAQtC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKI,IAAMJ,KAAKoT,oBAAoB,OACpCpT,KAAK2M,SAAW3M,KAAKoT,oBAAoB,YACzCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKwzB,KAAOxzB,KAAKoT,oBAAoB,QACrCpT,KAAKwxD,SAAWxxD,KAAKoT,oBAAoB,aCftC,MAAMmpD,WAAgCppD,EAI3C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKmwB,SAAWnwB,KAAKoT,oBAAoB,YACzCpT,KAAKw8D,aAAex8D,KAAKoT,oBAAoB,iBCP1C,MAAMqpD,WAAgBtpD,EAQ3B5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAK2yC,eAAiB3yC,KAAKoT,oBAAoB,kBAC/CpT,KAAKozC,MAAQpzC,KAAKoT,oBAAoB,SACtCpT,KAAKo5B,OAASp5B,KAAKoT,oBAAoB,UACvCpT,KAAK4yC,SAAW5yC,KAAKoT,oBAAoB,YACzCpT,KAAK6yC,QAAU7yC,KAAKoT,oBAAoB,WACxCpT,KAAKlB,KAAOkB,KAAKoT,oBAAoB,UCflC,MAAMspD,WAAiBvpD,EAM5B5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKuzB,MAAQvzB,KAAKoT,oBAAoB,SACtCpT,KAAKm9C,SAAWn9C,KAAKoT,oBAAoB,cCjBtC,MAAMupD,WAAoBxpD,EAoB/B5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAK6L,MAAQ7L,KAAKoT,oBAAoB,SACtCpT,KAAKy0C,UAAYz0C,KAAKoT,oBAAoB,aAC1CpT,KAAK2zC,WAAa3zC,KAAKoT,oBAAoB,cAC3CpT,KAAK00C,SAAW10C,KAAKoT,oBAAoB,YACzCpT,KAAK4zC,SAAW5zC,KAAKoT,oBAAoB,YACzCpT,KAAK6zC,SAAW7zC,KAAKoT,oBAAoB,YACzCpT,KAAK8zC,SAAW9zC,KAAKoT,oBAAoB,YACzCpT,KAAK+zC,KAAO/zC,KAAKoT,oBAAoB,QACrCpT,KAAKqX,MAAQrX,KAAKoT,oBAAoB,SACtCpT,KAAKg0C,WAAah0C,KAAKoT,oBAAoB,cAC3CpT,KAAKi0C,QAAUj0C,KAAKoT,oBAAoB,WACxCpT,KAAKk0C,QAAUl0C,KAAKoT,oBAAoB,WACxCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,SACtCpT,KAAKm0C,MAAQn0C,KAAKoT,oBAAoB,SACtCpT,KAAKo0C,IAAMp0C,KAAKoT,oBAAoB,OACpCpT,KAAKkwB,SAAWlwB,KAAKoT,oBAAoB,YACzCpT,KAAKq0C,eAAiBr0C,KAAKoT,oBAAoB,kBAC/CpT,KAAKs0C,cAAgBt0C,KAAKoT,oBAAoB,mBCxC3C,MAAMwpD,WAAoBzpD,EAI/B5T,YAAYmL,EAAY,MAEtB,GADAoI,MAAMpI,GAHR,KAAAvB,MAAsB,KAIR,MAARuB,EACF,OAEF1K,KAAK26B,IAAM36B,KAAKoT,oBAAoB,OACpC,MAAMjK,EAAQnJ,KAAKoT,oBAAoB,SACvCpT,KAAKmJ,MAAiB,MAATA,EAAgBA,EAAQ,MCXlC,MAAM0zD,WAAiB1pD,EAQ5B5T,YAAYmL,EAAY,MAEtB,GADAoI,MAAMpI,GACM,MAARA,EACF,OAEF1K,KAAKkwB,SAAWlwB,KAAKoT,oBAAoB,YACzCpT,KAAKmwB,SAAWnwB,KAAKoT,oBAAoB,YACzCpT,KAAKk1C,qBAAuBl1C,KAAKoT,oBAAoB,wBACrDpT,KAAKm1C,KAAOn1C,KAAKoT,oBAAoB,QACrCpT,KAAKq1C,mBAAqBr1C,KAAKoT,oBAAoB,sBAEnD,MAAMgiC,EAAOp1C,KAAKoT,oBAAoB,QAC1B,MAARgiC,IACFp1C,KAAKo1C,KAAOA,EAAKnwC,KAAKywC,GAAW,IAAIknB,GAAYlnB,OCrBhD,MAAMonB,WAAsB3pD,EAGjC5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAKoL,KAAOpL,KAAKoT,oBAAoB,UCDlC,MAAM2pD,WAAuB5pD,EAuBlC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKmgC,SAAWngC,KAAKoT,oBAAoB,aAAe,KACxDpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKi2C,MAAQj2C,KAAKoT,oBAAoB,SACtCpT,KAAKk2C,SAAWl2C,KAAKoT,oBAAoB,cAAe,EACxDpT,KAAKo2C,OAASp2C,KAAKoT,oBAAoB,QACS,MAA5CpT,KAAKoT,oBAAoB,gBAC3BpT,KAAKq2C,cAAe,EAEpBr2C,KAAKq2C,aAAer2C,KAAKoT,oBAAoB,gBAE/CpT,KAAKm2C,oBAAsBn2C,KAAKoT,oBAAoB,uBACpDpT,KAAKy/B,aAAez/B,KAAKoT,oBAAoB,gBAC7CpT,KAAK22C,cAAgB32C,KAAKoT,oBAAoB,iBAC9CpT,KAAK42C,YAAc52C,KAAKoT,oBAAoB,eAE5C,MAAM0mB,EAAQ95B,KAAKoT,oBAAoB,SAC1B,MAAT0mB,IACF95B,KAAK85B,MAAQ,IAAI+iC,GAAS/iC,IAG5B,MAAMwc,EAAOt2C,KAAKoT,oBAAoB,QAC1B,MAARkjC,IACFt2C,KAAKs2C,KAAO,IAAImmB,GAAQnmB,IAG1B,MAAMpmC,EAAWlQ,KAAKoT,oBAAoB,YAC1B,MAAZlD,IACFlQ,KAAKkQ,SAAW,IAAIysD,GAAYzsD,IAGlC,MAAMqmC,EAAav2C,KAAKoT,oBAAoB,cAC1B,MAAdmjC,IACFv2C,KAAKu2C,WAAa,IAAIumB,GAAcvmB,IAGtC,MAAME,EAASz2C,KAAKoT,oBAAoB,UAC1B,MAAVqjC,IACFz2C,KAAKy2C,OAASA,EAAOxxC,KAAKmuB,GAAW,IAAIspC,GAAStpC,MAGpD,MAAMojB,EAAcx2C,KAAKoT,oBAAoB,eAC1B,MAAfojC,IACFx2C,KAAKw2C,YAAcA,EAAYvxC,KAAK2C,GAAW,IAAI00D,GAAmB10D,MAGxE,MAAM8uC,EAAkB12C,KAAKoT,oBAAoB,mBAC1B,MAAnBsjC,IACF12C,KAAK02C,gBAAkBA,EAAgBzxC,KAAK4yD,GAAW,IAAI0E,GAAwB1E,MAGrF73D,KAAK62C,SAAW72C,KAAKoT,oBAAoB,aAAe+9B,GAAmB2F,MCrFxE,MAAMkmB,WAAqC7pD,EAMhD5T,YAAYqM,GACVkH,MAAMlH,GAFR,KAAAxL,IAAc,KAGZJ,KAAK8hD,aAAe9hD,KAAKoT,oBAAoB,gBAC7CpT,KAAKi9D,eAAiBj9D,KAAKoT,oBAAoB,kBAC/C,MAAM8pD,EAAiBl9D,KAAKoT,oBAAoB,kBAC1C+pD,EAAqBn9D,KAAKoT,oBAAoB,sBACpDpT,KAAKk9D,eAAmC,MAAlBA,EAAyB,KAAO,IAAIH,GAAeG,GACzEl9D,KAAKm9D,mBACmB,MAAtBA,EAA6B,KAAO,IAAIJ,GAAeI,GACzDn9D,KAAKI,IAAMJ,KAAKoT,oBAAoB,QCdjC,MAAMgqD,WAAwBjqD,EAMnC5T,YAAYqM,GACVkH,MAAMlH,GAJR,KAAAyxD,SAAqC,GACrC,KAAAC,aAA6C,GAI3Ct9D,KAAKu9D,QAAUv9D,KAAKoT,oBAAoB,WACxC,MAAMoqD,EAAgBx9D,KAAKoT,oBAAoB,iBACzCkqD,EAAet9D,KAAKoT,oBAAoB,gBACxCiqD,EAAWr9D,KAAKoT,oBAAoB,YAC1CpT,KAAKw9D,cAAiC,MAAjBA,EAAwB,KAAO,IAAIC,GAAsBD,GAC1D,MAAhBF,IACFt9D,KAAKs9D,aAAeA,EAAar4D,KAAK0L,GAAW,IAAI+sD,GAA2B/sD,MAElE,MAAZ0sD,IACFr9D,KAAKq9D,SAAWA,EAASp4D,KAAK3B,GAAW,IAAIq6D,GAAuBr6D,OAKnE,MAAMm6D,WAA8BtqD,EAMzC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK49D,UAAY59D,KAAKoT,oBAAoB,aAC1CpT,KAAKixB,YAAcjxB,KAAKoT,oBAAoB,eAC5CpT,KAAK69D,kBAAoB79D,KAAKoT,oBAAoB,sBAI/C,MAAMuqD,WAA+BxqD,EAQ1C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKI,IAAMJ,KAAKoT,oBAAoB,OACpCpT,KAAK89D,OAAS99D,KAAKoT,oBAAoB,UACvCpT,KAAKo5B,OAASp5B,KAAKoT,oBAAoB,UACvCpT,KAAK+9D,KAAO/9D,KAAKoT,oBAAoB,QACrCpT,KAAKg+D,KAAOh+D,KAAKoT,oBAAoB,QACrCpT,KAAKi+D,OAASj+D,KAAKoT,oBAAoB,WAIpC,MAAMsqD,WAAmCvqD,EAU9C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKk+D,YAAcl+D,KAAKoT,oBAAoB,eAC5CpT,KAAKi+D,OAASj+D,KAAKoT,oBAAoB,UACvCpT,KAAKm+D,SAAWn+D,KAAKoT,oBAAoB,YACzCpT,KAAKo+D,kBAAoBp+D,KAAKoT,oBAAoB,qBAClDpT,KAAKq+D,eAAiBr+D,KAAKoT,oBAAoB,kBAC/CpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKs+D,kBAAoBt+D,KAAKoT,oBAAoB,qBAClDpT,KAAKypD,QAAUzpD,KAAKoT,oBAAoB,YC9ErC,MAAMmrD,WAA8BprD,EAczC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKw+D,UAAYx+D,KAAKoT,oBAAoB,aAC1CpT,KAAKy+D,WAAaz+D,KAAKoT,oBAAoB,cAC3CpT,KAAK0+D,YAAc1+D,KAAKoT,oBAAoB,eAC5CpT,KAAKixB,YAAcjxB,KAAKoT,oBAAoB,eAC5CpT,KAAKiH,OAASjH,KAAKoT,oBAAoB,UACvCpT,KAAK2+D,SAAW3+D,KAAKoT,oBAAoB,YACzCpT,KAAK4+D,WAAa5+D,KAAKoT,oBAAoB,cAC3CpT,KAAK6+D,SAAW7+D,KAAKoT,oBAAoB,YACzCpT,KAAK8+D,aAAe9+D,KAAKoT,oBAAoB,gBAC7CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAK++D,SAAW/+D,KAAKoT,oBAAoB,YACzCpT,KAAK6L,MAAQ7L,KAAKoT,oBAAoB,UC3BnC,MAAM4rD,WAAkC7rD,EAK7C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK68C,SAAW78C,KAAKoT,oBAAoB,YACzCpT,KAAKi/D,cAAgBj/D,KAAKoT,oBAAoB,kBCR3C,MAAM8rD,WAA2B/rD,EAMtC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKm/D,WAAan/D,KAAKoT,oBAAoB,eAIxC,MAAMgsD,WAAkCF,GAG7C3/D,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK68C,SAAW78C,KAAKoT,oBAAoB,cAAe,GAIrD,MAAMisD,WAAuCH,GAGlD3/D,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA0zD,OAAsC,GAIpC,MAAMA,EAASt/D,KAAKoT,oBAAoB,UAC1B,MAAVksD,IACFt/D,KAAKs/D,OAASA,EAAOr6D,KAAKpC,GAAW,IAAIm8D,GAA0Bn8D,OChClE,MAAM08D,WAA6BpsD,EAKxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKw/D,QAAUx/D,KAAKoT,oBAAoB,WACxCpT,KAAKy/D,SAAWz/D,KAAKoT,oBAAoB,aCRtC,MAAMssD,WAAwBvsD,EAInC5T,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA+zD,wBAAkD,GAIhD3/D,KAAK4/D,kBAAoB5/D,KAAKoT,oBAAoB,qBAClD,MAAMusD,EAA0B3/D,KAAKoT,oBAAoB,2BAEvDpT,KAAK2/D,wBADwB,MAA3BA,EAC6BA,EAAwB16D,KACpD46D,GAAW,IAAIN,GAAqBM,KAGR,ICV9B,MAAMC,WAA8C3sD,EAUzD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK+/D,UAAY//D,KAAKoT,oBAAoB,aAC1CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,SACtCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAKggE,aAAehgE,KAAKoT,oBAAoB,gBAC7CpT,KAAKigE,aAAejgE,KAAKoT,oBAAoB,iBAI1C,MAAM8sD,WAA8C/sD,EAUzD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKmgE,UAAYngE,KAAKoT,oBAAoB,aAC1CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,SACtCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAKggE,aAAehgE,KAAKoT,oBAAoB,gBAC7CpT,KAAKigE,aAAejgE,KAAKoT,oBAAoB,iBAI1C,MAAMgtD,WAAwCjtD,EAKnD5T,YAAYqM,GACVkH,MAAMlH,GAEN5L,KAAKqgE,aAAergE,KAAKoT,oBAAoB,gBAC7CpT,KAAKoa,IAAMpa,KAAKoT,oBAAoB,OACpCpT,KAAKsa,cAAgBta,KAAKoT,oBAAoB,kBAI3C,MAAMktD,WAAoCntD,EAI/C5T,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA2hB,QAA4B,GAK1BvtB,KAAKqgE,aAAergE,KAAKoT,oBAAoB,gBAE7C,MAAMma,EAAUvtB,KAAKoT,oBAAoB,WAC1B,MAAXma,IACFvtB,KAAKutB,QAAUA,EAAQtoB,KAAKW,GAAW,IAAIm3D,GAAen3D,OCxEzD,MAAM26D,WAAsBptD,EAiBjC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKwgE,WAAaxgE,KAAKoT,oBAAoB,cAC3CpT,KAAK+6C,SAAW/6C,KAAKoT,oBAAoB,YACzCpT,KAAKs/C,aAAet/C,KAAKoT,oBAAoB,gBAC7CpT,KAAKygE,QAAUzgE,KAAKoT,oBAAoB,WACxCpT,KAAK0gE,SAAW1gE,KAAKoT,oBAAoB,YACzCpT,KAAKklB,mBAAqBllB,KAAKoT,oBAAoB,sBACnDpT,KAAK2gE,eAAiB3gE,KAAKoT,oBAAoB,kBAC/CpT,KAAK4gE,uBAAyB5gE,KAAKoT,oBAAoB,0BACvDpT,KAAK6gE,aAAe7gE,KAAKoT,oBAAoB,gBAC7CpT,KAAKg+D,KAAOh+D,KAAKoT,oBAAoB,QACrCpT,KAAKswB,WAAatwB,KAAKoT,oBAAoB,cAC3CpT,KAAK8gE,UAAY9gE,KAAKoT,oBAAoB,cCpCvC,MAAM2tD,WAAuB5tD,EAKlC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKy/B,aAAez/B,KAAKoT,oBAAoB,iBCR1C,MAAM4tD,WAAsB7tD,EAOjC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKihE,UAAYjhE,KAAKoT,oBAAoB,aAC1CpT,KAAKm/D,WAAan/D,KAAKoT,oBAAoB,eAIxC,MAAM8tD,WAA6BF,GAGxCzhE,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA8hB,YAA2C,GAIzC,MAAMA,EAAc1tB,KAAKoT,oBAAoB,eAC1B,MAAfsa,IACF1tB,KAAK0tB,YAAcA,EAAYzoB,KAAKW,GAAW,IAAIo5D,GAA0Bp5D,OCzB5E,MAAMu7D,WAAgChuD,EAG3C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKkhB,QAAUlhB,KAAKoT,oBAAoB,qBCHrC,MAAMguD,WAA8BjuD,EAgBzC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKqhE,YAAcz1D,EAAS01D,aAC5BthE,KAAKuhE,UAAY31D,EAAS41D,WAC1BxhE,KAAKyhE,aAAe71D,EAAS81D,cAC7B1hE,KAAK2hE,UAAY/1D,EAASg2D,WAE1B5hE,KAAKgsB,oBAAsBhsB,KAAKoT,oBAAoB,uBACpDpT,KAAKiuB,WAAajuB,KAAKoT,oBAAoB,cAC3CpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKywB,eAAiBzwB,KAAKoT,oBAAoB,kBAC/CpT,KAAKoa,IAAMpa,KAAKoT,oBAAoB,OACpCpT,KAAKsa,cAAgBta,KAAKoT,oBAAoB,iBAC9CpT,KAAKyiB,mBAAqBziB,KAAKoT,oBAAoB,sBACnDpT,KAAK6hE,mBAAqB7hE,KAAKoT,oBAAoB,sBACnDpT,KAAK8hE,gBAAkB9hE,KAAKoT,oBAAoB,oBC/B7C,MAAM2uD,WAAkC5uD,EAK7C5T,YAAYqM,GACVkH,MAAMlH,GAJR,KAAAo2D,oBAAsB,IAAI76D,IAKxBnH,KAAKshB,aAAethB,KAAKoT,oBAAoB,sBAC7CpT,KAAK4uB,mBAAqB5uB,KAAKoT,oBAAoB,sBACnD,MAAM4uD,EAAsBhiE,KAAKoT,oBAAoB,uBACrD,GAA2B,MAAvB4uD,EACF,IAAK,MAAMr6D,KAAQq6D,EACbA,EAAoBztD,eAAe5M,IACrC3H,KAAKgiE,oBAAoBx6D,IAAI9D,SAASiE,EAAM,MAAOq6D,EAAoBr6D,KCf1E,MAAMs6D,WAAwB9uD,EAInC5T,YAAYqM,EAAe+E,GACzBmC,MAAMlH,GACN,MAAMlB,EAAO1K,KAAKoT,oBAAoB,QACtCpT,KAAK0K,KAAe,MAARA,EAAe,GAAKA,EAAKzF,KAAKi9D,GAAY,IAAIvxD,EAAEuxD,KAC5DliE,KAAKmiE,kBAAoBniE,KAAKoT,oBAAoB,sBCRtD,IAAKgvD,GAKAC,GAKAC,GAMAC,GAYAC,IA5BL,SAAKJ,GACH,qCACA,qBAFF,CAAKA,KAAAA,GAAO,KAKZ,SAAKC,GACH,iCACA,2BAFF,CAAKA,KAAAA,GAA6B,KAKlC,SAAKC,GACH,mCACA,2BACA,2BAHF,CAAKA,KAAAA,GAAgB,KAMrB,SAAKC,GACH,qCACA,iCACA,mCACA,yCACA,+DACA,qDACA,2CACA,+BACA,6BATF,CAAKA,KAAAA,GAAiB,KAYtB,SAAKC,GACH,mEACA,uBACA,qBAHF,CAAKA,KAAAA,GAAoB,KAMlB,MAAMC,WAAqBtvD,EAuChC5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAIJ1K,KAAK0iE,WAAa1iE,KAAKoT,oBAAoB,cAE3CpT,KAAK2iE,oBAAsB3iE,KAAKoT,oBAAoB,uBACpDpT,KAAK8hE,gBAAkB9hE,KAAKoT,oBAAoB,mBAEhDpT,KAAK4iE,UAAY5iE,KAAKoT,oBAAoB,aAC1CpT,KAAK6iB,SAAW7iB,KAAKoT,oBAAoB,YACzCpT,KAAK4vB,aAAe5vB,KAAKoT,oBAAoB,gBAC7CpT,KAAK6iE,gBAAkB7iE,KAAKoT,oBAAoB,mBAChDpT,KAAK8iE,iBAAmB9iE,KAAKoT,oBAAoB,oBACjDpT,KAAK+iE,8BAAgC/iE,KAAKoT,oBAAoB,iCAC9DpT,KAAKgjE,iBAAmBhjE,KAAKoT,oBAAoB,oBACjDpT,KAAKijE,2BAA6BjjE,KAAKoT,oBAAoB,8BAC3DpT,KAAKkjE,0BAA4BljE,KAAKoT,oBAAoB,6BAC1DpT,KAAKmjE,yBAA2BnjE,KAAKoT,oBAAoB,4BACzDpT,KAAKojE,UAAYpjE,KAAKoT,oBAAoB,aAC1CpT,KAAKqjE,uBAAyBrjE,KAAKoT,oBAAoB,0BAEvDpT,KAAKsjE,eAAiBtjE,KAAKoT,oBAAoB,kBAC/CpT,KAAKujE,2BAA6BvjE,KAAKoT,oBAAoB,8BAC3DpT,KAAKwjE,kBAAoBxjE,KAAKoT,oBAAoB,qBAClDpT,KAAKyjE,8BAAgCzjE,KAAKoT,oBAAoB,iCAC9DpT,KAAK0jE,uBAAyB1jE,KAAKoT,oBAAoB,0BACvDpT,KAAK2jE,uBAAyB3jE,KAAKoT,oBAAoB,0BAEvDpT,KAAK4jE,YAAc5jE,KAAKoT,oBAAoB,eAC5CpT,KAAK6jE,eAAiB7jE,KAAKoT,oBAAoB,kBAC/CpT,KAAK8jE,0BAA4B9jE,KAAKoT,oBAAoB,6BAC1DpT,KAAK+jE,0BAA4B/jE,KAAKoT,oBAAoB,6BAC1DpT,KAAKgkE,gCAAkChkE,KAAKoT,oBAC1C,mCAEFpT,KAAKikE,kBAAoBjkE,KAAKoT,oBAAoB,qBAClDpT,KAAKkkE,4BAA8BlkE,KAAKoT,oBAAoB,+BAC5DpT,KAAKmkE,iCAAmCnkE,KAAKoT,oBAC3C,oCAEFpT,KAAKokE,iCAAmCpkE,KAAKoT,oBAC3C,oCAEFpT,KAAKqkE,2BAA6BrkE,KAAKoT,oBAAoB,gCCtHxD,MAAMkxD,WAAgCnxD,EAK3C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAK0K,KAAO,IAAI+3D,GAAaziE,KAAKoT,oBAAoB,SACtDpT,KAAKyP,KAAO,IAAI80D,GAAQvkE,KAAKoT,oBAAoB,UAIrD,MAAMmxD,WAAgBpxD,EAOpB5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKwkE,aAAexkE,KAAKoT,oBAAoB,gBAC7CpT,KAAKykE,sBAAwBzkE,KAAKoT,oBAAoB,yBACtDpT,KAAK0kE,WAAa1kE,KAAKoT,oBAAoB,cAC3CpT,KAAK2kE,cAAgB3kE,KAAKoT,oBAAoB,iBAC9CpT,KAAK4kE,SAAW5kE,KAAKoT,oBAAoB,aC3BtC,MAAMyxD,WAA6C1xD,EAIxD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK0nB,qBAAuB1nB,KAAKoT,oBAAoB,yBCPlD,MAAM0xD,WAAqB3xD,EAIhC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKiuB,WAAajuB,KAAKoT,oBAAoB,cAC3CpT,KAAKujB,UAAYvjB,KAAKoT,oBAAoB,cCPvC,MAAM2xD,WAAiCD,GAC5CvlE,YAAYqM,GACVkH,MAAMlH,ICCH,MAAMo5D,WAAqB7xD,EA8ChC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKilE,QAAUjlE,KAAKoT,oBAAoB,WACxCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKklE,SAAWllE,KAAKoT,oBAAoB,YACzCpT,KAAKmlE,oBAAsBnlE,KAAKoT,oBAAoB,uBACpDpT,KAAKolE,2BAA6BplE,KAAKoT,oBAAoB,8BAC3DpT,KAAKqlE,oBAAsBrlE,KAAKoT,oBAAoB,uBACpDpT,KAAKslE,UAAYtlE,KAAKoT,oBAAoB,aAC1CpT,KAAKulE,cAAgBvlE,KAAKoT,oBAAoB,iBAC9CpT,KAAKwlE,eAAiBxlE,KAAKoT,oBAAoB,kBAC/CpT,KAAKylE,SAAWzlE,KAAKoT,oBAAoB,YACzCpT,KAAK0lE,yBAA2B1lE,KAAKoT,oBAAoB,4BACzDpT,KAAK2lE,mBAAqB3lE,KAAKoT,oBAAoB,sBACnDpT,KAAK4lE,2BAA6B5lE,KAAKoT,oBAAoB,8BAC3DpT,KAAK6lE,qBAAuB7lE,KAAKoT,oBAAoB,wBACrDpT,KAAK8lE,uBAAyB9lE,KAAKoT,oBAAoB,0BACvDpT,KAAK+lE,gBAAkB/lE,KAAKoT,oBAAoB,mBAChDpT,KAAKgmE,YAAchmE,KAAKoT,oBAAoB,eAC5CpT,KAAKimE,YAAcjmE,KAAKoT,oBAAoB,eAC5CpT,KAAKkmE,UAAYlmE,KAAKoT,oBAAoB,aAC1CpT,KAAKmmE,aAAenmE,KAAKoT,oBAAoB,gBAC7CpT,KAAKomE,UAAYpmE,KAAKoT,oBAAoB,aAC1CpT,KAAK21C,QAAU31C,KAAKoT,oBAAoB,WACxCpT,KAAKqmE,OAASrmE,KAAKoT,oBAAoB,UACvCpT,KAAKsmE,OAAStmE,KAAKoT,oBAAoB,UACvCpT,KAAKumE,OAASvmE,KAAKoT,oBAAoB,UACvCpT,KAAKwmE,iBAAmBxmE,KAAKoT,oBAAoB,oBACjDpT,KAAKymE,gBAAkBzmE,KAAKoT,oBAAoB,mBAChDpT,KAAK0mE,iBAAmB1mE,KAAKoT,oBAAoB,oBACjDpT,KAAK2mE,iBAAmB3mE,KAAKoT,oBAAoB,aACjDpT,KAAK4mE,WAAa5mE,KAAKoT,oBAAoB,cAC3CpT,KAAKmyD,SAAWnyD,KAAKoT,oBAAoB,YACzCpT,KAAK6mE,aAAe7mE,KAAKoT,oBAAoB,gBAC7CpT,KAAK8mE,iBAAmB9mE,KAAKoT,oBAAoB,oBACjDpT,KAAK+mE,oBAAsB/mE,KAAKoT,oBAAoB,uBACpDpT,KAAKgnE,0BAA4BhnE,KAAKoT,oBAAoB,6BAC1DpT,KAAKinE,UAAYjnE,KAAKoT,oBAAoB,aAC1CpT,KAAKknE,UAAYlnE,KAAKoT,oBAAoB,aAC1CpT,KAAKmnE,4BAA8BnnE,KAAKoT,oBAAoB,+BAC5DpT,KAAKonE,yBAA2BpnE,KAAKoT,oBAAoB,6BCvFtD,MAAMi0D,WAA6Bl0D,EA0BxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKqnB,WAAarnB,KAAKoT,oBAAoB,cAC3CpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKsnE,aAAetnE,KAAKoT,oBAAoB,gBAC7CpT,KAAKunE,iBAAmBvnE,KAAKoT,oBAAoB,oBACjDpT,KAAKwnE,iBAAmBxnE,KAAKoT,oBAAoB,oBACjDpT,KAAKynE,iBAAmBznE,KAAKoT,oBAAoB,oBACjDpT,KAAK0nE,gBAAkB1nE,KAAKoT,oBAAoB,mBAChDpT,KAAK2nE,kBAAoB3nE,KAAKoT,oBAAoB,qBAClDpT,KAAK4nE,aAAe5nE,KAAKoT,oBAAoB,gBAC7C,MAAMy0D,EAAO7nE,KAAKoT,oBAAoB,QACtCpT,KAAK6nE,KAAe,MAARA,EAAe,KAAO,IAAI7C,GAAa6C,GACnD7nE,KAAK8nE,SAAW9nE,KAAKoT,oBAAoB,YACzCpT,KAAK+nE,MAAQ/nE,KAAKoT,oBAAoB,SACtCpT,KAAKgoE,kBAAoBhoE,KAAKoT,oBAAoB,qBAClDpT,KAAKwlE,eAAiBxlE,KAAKoT,oBAAoB,kBAC/CpT,KAAKioE,aAAejoE,KAAKoT,oBAAoB,gBAC7CpT,KAAKkoE,UAAYloE,KAAKoT,oBAAoB,aAC1CpT,KAAKmoE,aAAenoE,KAAKoT,oBAAoB,gBAC7CpT,KAAKooE,UAAYpoE,KAAKoT,oBAAoB,aAC1CpT,KAAKs8C,QAAUt8C,KAAKoT,oBAAoB,WACxCpT,KAAKqoE,OAASroE,KAAKoT,oBAAoB,UACvCpT,KAAKsoE,OAAStoE,KAAKoT,oBAAoB,UACvCpT,KAAKuoE,iBAAmBvoE,KAAKoT,oBAAoB,oBACjDpT,KAAKwoE,wBAA0BxoE,KAAKoT,oBAAoB,4BCvDrD,MAAMq1D,WAA6Bt1D,EAUxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK0oE,YAAc1oE,KAAKoT,oBAAoB,eAC5CpT,KAAK2oE,UAAY3oE,KAAKoT,oBAAoB,aAC1CpT,KAAKioE,aAAejoE,KAAKoT,oBAAoB,gBAC7CpT,KAAK4oE,QAAU5oE,KAAKoT,oBAAoB,WACxCpT,KAAKuzC,WAAavzC,KAAKoT,oBAAoB,cAC3CpT,KAAK6oE,mBAAqB7oE,KAAKoT,oBAAoB,sBACnD,MAAM01D,EAAe9oE,KAAKoT,oBAAoB,gBACxC21D,EAAkB/oE,KAAKoT,oBAAoB,mBACjDpT,KAAK8oE,aAA+B,MAAhBA,EAAuB,KAAO,IAAIE,GAA4BF,GAClF9oE,KAAK+oE,gBACgB,MAAnBA,EACI,KACA,IAAIE,GAA2CF,IAIlD,MAAMC,WAAoC71D,EAW/C5T,YAAYqM,GACVkH,MAAMlH,GAHR,KAAAs9D,MAA2C,GAIzClpE,KAAKmpE,aAAenpE,KAAKoT,oBAAoB,kBAC7CpT,KAAKmpE,aAAenpE,KAAKoT,oBAAoB,gBAC7CpT,KAAKopE,gBAAkBppE,KAAKoT,oBAAoB,mBAChDpT,KAAKqpE,cAAgBrpE,KAAKoT,oBAAoB,iBAC9CpT,KAAKspE,cAAgBtpE,KAAKoT,oBAAoB,iBAC9CpT,KAAKupE,gBAAkBvpE,KAAKoT,oBAAoB,mBAChDpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAKwpE,UAAYxpE,KAAKoT,oBAAoB,aAC1C,MAAM81D,EAAQlpE,KAAKoT,oBAAoB,SAC1B,MAAT81D,IACFlpE,KAAKkpE,MAAQA,EAAMjkE,KAAK3B,GAAW,IAAImmE,GAAgCnmE,OAKtE,MAAMmmE,WAAwCt2D,EAOnD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKi+D,OAASj+D,KAAKoT,oBAAoB,UACvCpT,KAAK0pE,SAAW1pE,KAAKoT,oBAAoB,YACzCpT,KAAK0vD,SAAW1vD,KAAKoT,oBAAoB,YACzCpT,KAAK2pE,0BAA4B3pE,KAAKoT,oBAAoB,8BAIvD,MAAM61D,WAAmD91D,EAI9D5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKg+D,KAAOh+D,KAAKoT,oBAAoB,QACrCpT,KAAKi+D,OAASj+D,KAAKoT,oBAAoB,WC5EpC,MAAMw2D,WAAyCvC,GAOpD9nE,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK0oE,YAAc1oE,KAAKoT,oBAAoB,eAC5CpT,KAAK2oE,UAAY3oE,KAAKoT,oBAAoB,aAC1C,MAAM01D,EAAe9oE,KAAKoT,oBAAoB,gBAC9CpT,KAAK8oE,aAA+B,MAAhBA,EAAuB,KAAO,IAAIE,GAA4BF,GAClF,MAAMC,EAAkB/oE,KAAKoT,oBAAoB,mBACjDpT,KAAK+oE,gBACgB,MAAnBA,EACI,KACA,IAAIE,GAA2CF,GACrD/oE,KAAKuzC,WAAavzC,KAAKoT,oBAAoB,eCtBxC,MAAMy2D,WAA8C12D,EAKzD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,QCTjC,MAAM02D,WAAqC32D,EAIhD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK4V,MAAQ5V,KAAKoT,oBAAoB,UCPnC,MAAM22D,WAAuB52D,EA0BlC5T,YAAYmL,EAAY,MAEtB,GADAoI,MAAMpI,GACM,MAARA,EACF,OAAO1K,KAETA,KAAKgqE,gBAAkBhqE,KAAKoT,oBAAoB,mBAChDpT,KAAKiqE,mBAAqBjqE,KAAKoT,oBAAoB,sBACnDpT,KAAKkqE,cAAgBlqE,KAAKoT,oBAAoB,iBAG9CpT,KAAKmqE,qBAAuBnqE,KAAKoT,oBAAoB,wBACrDpT,KAAKoqE,0BAA4BpqE,KAAKoT,oBAAoB,6BAE1DpT,KAAKqqE,qBAAuBrqE,KAAKoT,oBAAoB,wBACrDpT,KAAKsqE,kBAAoBtqE,KAAKoT,oBAAoB,qBAClDpT,KAAKuqE,oBAAsBvqE,KAAKoT,oBAAoB,uBACpDpT,KAAKwqE,wBAA0BxqE,KAAKoT,oBAAoB,2BACxDpT,KAAKyqE,0BAA4BzqE,KAAKoT,oBAAoB,6BAE1DpT,KAAK0qE,cAAgB1qE,KAAKoT,oBAAoB,iBAC9CpT,KAAK2qE,aAAe3qE,KAAKoT,oBAAoB,gBAC7CpT,KAAK4qE,UAAY5qE,KAAKoT,oBAAoB,aAC1CpT,KAAK6qE,eAAiB7qE,KAAKoT,oBAAoB,kBAC/CpT,KAAK8qE,YAAc9qE,KAAKoT,oBAAoB,eAC5CpT,KAAK+qE,oBAAsB/qE,KAAKoT,oBAAoB,wBC3CjD,MAAM43D,WAAiC73D,EAS5C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAK2O,YAAc,IAAIo7D,GAAe/pE,KAAKoT,oBAAoB,gBAC/DpT,KAAKihE,UAAYjhE,KAAKoT,oBAAoB,aAC1CpT,KAAKirE,sBAAwBjrE,KAAKoT,oBAAoB,0BAInD,MAAM83D,WAA4CF,GAMvDzrE,YAAYqM,G,MACVkH,MAAMlH,GACN5L,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,SACtCpT,KAAKmrE,iBAAmBnrE,KAAKoT,oBAAoB,oBACjDpT,KAAK2d,iBAA+D,QAA5C,EAAA3d,KAAKoT,oBAAoB,2BAAmB,UAIjE,MAAMg4D,WAAwCJ,GAGnDzrE,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA8hB,YAA2C,GAIzC,MAAMA,EAAc1tB,KAAKoT,oBAAoB,eAC1B,MAAfsa,IACF1tB,KAAK0tB,YAAcA,EAAYzoB,KAAKW,GAAW,IAAIo5D,GAA0Bp5D,OAK5E,MAAMylE,WAAoDl4D,EAM/D5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoa,IAAMpa,KAAKoT,oBAAoB,OACpCpT,KAAKsa,cAAgBta,KAAKoT,oBAAoB,iBAC9CpT,KAAKsoB,iBAAmBtoB,KAAKoT,oBAAoB,oBACjDpT,KAAKwjB,oBAAsBxjB,KAAKoT,oBAAoB,wBC7DjD,MAAMk4D,WAAoCn4D,EAoC/C5T,YAAYqM,G,QACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKurE,YAAcvrE,KAAKoT,oBAAoB,eAC5CpT,KAAKkoE,UAAYloE,KAAKoT,oBAAoB,aAC1CpT,KAAKmoE,aAAenoE,KAAKoT,oBAAoB,gBAC7CpT,KAAKooE,UAAYpoE,KAAKoT,oBAAoB,aAC1CpT,KAAKs8C,QAAUt8C,KAAKoT,oBAAoB,WACxCpT,KAAKqoE,OAASroE,KAAKoT,oBAAoB,UACvCpT,KAAKsoE,OAAStoE,KAAKoT,oBAAoB,UACvCpT,KAAKwrE,OAASxrE,KAAKoT,oBAAoB,UACvCpT,KAAKyrE,gBAA6D,QAA3C,EAAAzrE,KAAKoT,oBAAoB,0BAAkB,SAClEpT,KAAKuoE,iBAAmBvoE,KAAKoT,oBAAoB,oBACjDpT,KAAK0rE,SAAW1rE,KAAKoT,oBAAoB,YACzCpT,KAAKymE,gBAAkBzmE,KAAKoT,oBAAoB,mBAChDpT,KAAK+nE,MAAQ/nE,KAAKoT,oBAAoB,SACtCpT,KAAKwlE,eAAiBxlE,KAAKoT,oBAAoB,kBAC/CpT,KAAKioE,aAAejoE,KAAKoT,oBAAoB,gBAC7CpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKwoE,wBAA0BxoE,KAAKoT,oBAAoB,2BACxDpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAK2rE,SAAW3rE,KAAKoT,oBAAoB,YACzCpT,KAAKqnB,WAAarnB,KAAKoT,oBAAoB,cAC3CpT,KAAK2O,YAAc,IAAIo7D,GAAe/pE,KAAKoT,oBAAoB,gBAC/DpT,KAAKirE,sBAAwBjrE,KAAKoT,oBAAoB,yBACtDpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKwgE,WAAaxgE,KAAKoT,oBAAoB,cAC3CpT,KAAK4rE,aAAe5rE,KAAKoT,oBAAoB,gBAC7CpT,KAAK6rE,8BAAgC7rE,KAAKoT,oBAAoB,iCAC9DpT,KAAK8rE,2BAA6B9rE,KAAKoT,oBAAoB,8BAC3DpT,KAAK+rE,gBAAkB/rE,KAAKoT,oBAAoB,mBAChDpT,KAAK2iE,oBAAqE,QAA/C,EAAA3iE,KAAKoT,oBAAoB,8BAAsB,SAC1EpT,KAAK8hE,gBAAkB9hE,KAAKoT,oBAAoB,oBC5E7C,MAAM44D,WAA4CV,GACvD/rE,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK2iE,qBAAsB,GCExB,MAAMsJ,WAAgC94D,EAW3C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAK2O,YAAc,IAAIo7D,GAAe/pE,KAAKoT,oBAAoB,gBAC/DpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKooE,UAAYpoE,KAAKoT,oBAAoB,cCvBvC,MAAM84D,WAAwB/4D,EAkBnC5T,YAAYqM,G,QACVkH,MAAMlH,GALR,KAAA6iD,cAA+C,GAC/C,KAAA/hC,UAAuC,GACvC,KAAAy/C,sBAA+D,GAI7DnsE,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,SACtCpT,KAAKqzD,cAAgBrzD,KAAKoT,oBAAoB,iBAC9CpT,KAAK0jB,mBAAqB1jB,KAAKoT,oBAAoB,sBACnDpT,KAAKoxB,QAAUpxB,KAAKoT,oBAAoB,WACxCpT,KAAKosE,QAAUpsE,KAAKoT,oBAAoB,WACxCpT,KAAKmrE,iBAAmBnrE,KAAKoT,oBAAoB,oBACjDpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKiuB,WAAajuB,KAAKoT,oBAAoB,cAC3CpT,KAAKqsE,cAAgBrsE,KAAKoT,oBAAoB,iBAC9CpT,KAAKyiB,mBAAmE,QAA9C,EAAAziB,KAAKoT,oBAAoB,6BAAqB,SACxEpT,KAAK2d,iBAA+D,QAA5C,EAAA3d,KAAKoT,oBAAoB,2BAAmB,SAEpE,MAAMq7C,EAAgBzuD,KAAKoT,oBAAoB,iBAC1B,MAAjBq7C,IACFzuD,KAAKyuD,cAAgBA,EAAcxpD,KAAKy1C,GAAW,IAAI4wB,GAA4B5wB,MAErF,MAAMhuB,EAAY1sB,KAAKoT,oBAAoB,aAC1B,MAAbsZ,IACF1sB,KAAK0sB,UAAYA,EAAUznB,KAAKy1C,GAAW,IAAIuxB,GAAwBvxB,MAEzE,MAAMyxB,EAAwBnsE,KAAKoT,oBAAoB,yBAC1B,MAAzB+4D,IACFnsE,KAAKmsE,sBAAwBA,EAAsBlnE,KAChDy1C,GAAW,IAAIsxB,GAAoCtxB,OC/CrD,MAAM4xB,WAAwBn5D,EAKnC5T,YAAYqM,GACVkH,MAAMlH,GACN,MAAM2gE,EAAcvsE,KAAKoT,oBAAoB,eAC1B,MAAfm5D,IACFvsE,KAAKusE,YAAc,IAAIL,GAAgBK,IAEzCvsE,KAAKwsE,0BAA4BxsE,KAAKoT,oBAAoB,6BAC1DpT,KAAKsc,QAAUtc,KAAKoT,oBAAoB,YCXrC,MAAMq5D,WAAuBt5D,EAOlC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK0K,KAAO1K,KAAKoT,oBAAoB,QACrCpT,KAAK26C,QAAU36C,KAAKoT,oBAAoB,YCbrC,MAAMs5D,WAAyBv5D,EAIpC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKoa,IAAMpa,KAAKoT,oBAAoB,OACpCpT,KAAKsa,cAAgBta,KAAKoT,oBAAoB,kBCT3C,MAAMu5D,WAAqCx5D,EAShD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKwgE,WAAaxgE,KAAKoT,oBAAoB,cAC3CpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKqjB,SAAWrjB,KAAKoT,oBAAoB,YACzCpT,KAAKigE,aAAejgE,KAAKoT,oBAAoB,gBAC7CpT,KAAKy/B,aAAez/B,KAAKoT,oBAAoB,iBAI1C,MAAMw5D,WAAwDD,GAGnEptE,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK6sE,iBAAmB7sE,KAAKoT,oBAAoB,qBC1B9C,MAAM05D,WAAyB35D,EAMpC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKsnE,aAAetnE,KAAKoT,oBAAoB,gBAC7CpT,KAAK4nE,aAAe5nE,KAAKoT,oBAAoB,iBCX1C,MAAM25D,WAA0ClD,ICAhD,MAAMmD,WAAiC75D,EAI5C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK4V,MAAQ5V,KAAKoT,oBAAoB,UCFnC,MAAM65D,WAA6B95D,EAOxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAK0T,OAAS1T,KAAKoT,oBAAoB,UACvCpT,KAAK2O,YAAc,IAAIo7D,GAAe/pE,KAAKoT,oBAAoB,iBAI5D,MAAM85D,WAAwCD,GAInD1tE,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,UC7BnC,MAAM+5D,WAAoBh6D,EAO/B5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK2M,SAAW3M,KAAKoT,oBAAoB,YACzCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAKwzB,KAAOxzB,KAAKoT,oBAAoB,QACrCpT,KAAKwxD,SAAWxxD,KAAKoT,oBAAoB,cChBtC,MAAMg6D,WAAoBj6D,EAI/B5T,YAAYmL,EAAY,MACtBoI,MAAMpI,GACM,MAARA,IAGJ1K,KAAKw3B,KAAOx3B,KAAKoT,oBAAoB,QACrCpT,KAAK2xD,OAAS3xD,KAAKoT,oBAAoB,YAAa,ICLjD,MAAMi6D,WAA2Bl6D,EAStC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QAErC,MAAMokB,EAAOx3B,KAAKoT,oBAAoB,QAC1B,MAARokB,IACFx3B,KAAKw3B,KAAO,IAAI41C,GAAY51C,IAG9B,MAAMoqB,EAAO5hD,KAAKoT,oBAAoB,QAC1B,MAARwuC,IACF5hD,KAAK4hD,KAAO,IAAIurB,GAAYvrB,IAG9B5hD,KAAKkyD,eAAiBlyD,KAAKoT,oBAAoB,kBAC/CpT,KAAKstE,kBAAoBttE,KAAKoT,oBAAoB,sBC/B/C,MAAMm6D,WAAqCp6D,EAGhD5T,YAAYqM,GACVkH,MAAMlH,GAHR,KAAA5M,GAAa,KACb,KAAAoB,IAAc,KAGZJ,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKI,IAAMJ,KAAKoT,oBAAoB,QCDjC,MAAMo6D,WAAqBr6D,EAkBhC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK8xD,SAAW9xD,KAAKoT,oBAAoB,YACzCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QACrCpT,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKi2C,MAAQj2C,KAAKoT,oBAAoB,SACtCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,OACpCpT,KAAK+xD,eAAiB/xD,KAAKoT,oBAAoB,kBAC/CpT,KAAKgyD,YAAchyD,KAAKoT,oBAAoB,eAC5CpT,KAAKy/B,aAAez/B,KAAKoT,oBAAoB,gBAC7CpT,KAAKkyD,eAAiBlyD,KAAKoT,oBAAoB,kBAC/CpT,KAAKiyD,aAAejyD,KAAKoT,oBAAoB,gBAC7CpT,KAAKmwB,SAAWnwB,KAAKoT,oBAAoB,YACzCpT,KAAK88B,QAAU98B,KAAKoT,oBAAoB,cAAe,EACvDpT,KAAKoyD,UAAYpyD,KAAKoT,oBAAoB,eAAgB,EAE1D,MAAMokB,EAAOx3B,KAAKoT,oBAAoB,QAC1B,MAARokB,IACFx3B,KAAKw3B,KAAO,IAAI41C,GAAY51C,IAG9B,MAAMoqB,EAAO5hD,KAAKoT,oBAAoB,QAC1B,MAARwuC,IACF5hD,KAAK4hD,KAAO,IAAIurB,GAAYvrB,KC5C3B,MAAM6rB,WAAmCt6D,EAI9C5T,YAAYqM,GACVkH,MAAMlH,GAFR,KAAAxL,IAAc,KAGZJ,KAAKi9D,eAAiBj9D,KAAKoT,oBAAoB,kBAC/C,MAAMs6D,EAAe1tE,KAAKoT,oBAAoB,gBAC9CpT,KAAK0tE,aAA+B,MAAhBA,EAAuB,KAAO,IAAIF,GAAaE,GACnE1tE,KAAKI,IAAMJ,KAAKoT,oBAAoB,QCLjC,MAAMu6D,WAAqBx6D,EAShC5T,YAAYqM,GACVkH,MAAMlH,GARR,KAAA4hB,QAA4B,GAC5B,KAAAE,YAA2C,GAC3C,KAAAH,QAA4B,GAE5B,KAAAI,SAA8B,GAC9B,KAAAF,MAAwB,GAKtB,MAAMgB,EAAUzuB,KAAKoT,oBAAoB,WAC1B,MAAXqb,IACFzuB,KAAKyuB,QAAU,IAAIy9C,GAAgBz9C,IAGrC,MAAMjB,EAAUxtB,KAAKoT,oBAAoB,WAC1B,MAAXoa,IACFxtB,KAAKwtB,QAAUA,EAAQvoB,KAAKmuB,GAAW,IAAI2tC,GAAe3tC,MAG5D,MAAM1F,EAAc1tB,KAAKoT,oBAAoB,eAC1B,MAAfsa,IACF1tB,KAAK0tB,YAAcA,EAAYzoB,KAAKW,GAAW,IAAIw5D,GAA0Bx5D,MAG/E,MAAM2nB,EAAUvtB,KAAKoT,oBAAoB,WAC1B,MAAXma,IACFvtB,KAAKutB,QAAUA,EAAQtoB,KAAKW,GAAW,IAAIm3D,GAAen3D,MAG5D,MAAM45D,EAAUx/D,KAAKoT,oBAAoB,WAC1B,MAAXosD,IACFx/D,KAAKw/D,QAAU,IAAIE,GAAgBF,IAGrC,MAAM7xC,EAAW3tB,KAAKoT,oBAAoB,YAC1B,MAAZua,IACF3tB,KAAK2tB,SAAWA,EAAS1oB,KAAKykB,GAAW,IAAI+iD,GAAe/iD,MAG9D,MAAM+D,EAAQztB,KAAKoT,oBAAoB,SAC1B,MAATqa,IACFztB,KAAKytB,MAAQA,EAAMxoB,KAAKwD,GAAW,IAAI+kE,GAAa/kE,OCnDnD,MAAMmlE,WAAwBz6D,EAUnC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK6tE,MAAQ7tE,KAAKoT,oBAAoB,eACtCpT,KAAK8tE,UAAY9tE,KAAKoT,oBAAoB,aAC1CpT,KAAK+tE,MAAQ/tE,KAAKoT,oBAAoB,SACtCpT,KAAKguE,MAAQhuE,KAAKoT,oBAAoB,SACtCpT,KAAK+zC,KAAO/zC,KAAKoT,oBAAoB,QACrCpT,KAAKqX,MAAQrX,KAAKoT,oBAAoB,SACtCpT,KAAKg0C,WAAah0C,KAAKoT,oBAAoB,cAC3CpT,KAAKi0C,QAAUj0C,KAAKoT,oBAAoB,YCnBrC,MAAM66D,WAAwB96D,EAOnC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKi0C,QAAUj0C,KAAKoT,oBAAoB,WACxCpT,KAAKqX,MAAQrX,KAAKoT,oBAAoB,SACtCpT,KAAKg0C,WAAah0C,KAAKoT,oBAAoB,cAC3CpT,KAAKixC,KAAOjxC,KAAKoT,oBAAoB,SCblC,MAAM86D,WAAuC/6D,EAIlD5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAKsU,IAAMtU,KAAKoT,oBAAoB,QCPjC,MAAM+6D,WAA6Bh7D,EAMxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAKqG,KAAOrG,KAAKoT,oBAAoB,QACrCpT,KAAKouE,UAAYpuE,KAAKoT,oBAAoB,aAC1CpT,KAAKquE,eAAiBruE,KAAKoT,oBAAoB,mBCX5C,MAAMk7D,WAA+Bn7D,EAI1C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAKgT,MAAQhT,KAAKoT,oBAAoB,UCLnC,MAAMm7D,WAAkCp7D,EAI7C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,SCTlC,MAAMo7D,WAAiCr7D,EAG5C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKlB,KAAOkB,KAAKoT,oBAAoB,SCJlC,MAAMq7D,WAAkCt7D,EAI7C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxC,MAAMrU,EAAOiB,KAAKoT,oBAAoB,QACtCpT,KAAKjB,KAAe,MAARA,EAAe,KAAOA,EAAKkG,KAAKqD,GAAW,IAAIomE,GAAYpmE,MAIpE,MAAMomE,WAAoBv7D,EAK/B5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKsC,KAAOtC,KAAKoT,oBAAoB,QACrCpT,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAK2uE,SAAW3uE,KAAKoT,oBAAoB,aAItC,MAAMw7D,WAA0Bz7D,EAWrC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK6uE,YAAc7uE,KAAKoT,oBAAoB,eAC5CpT,KAAK8uE,uBAAyB9uE,KAAKoT,oBAAoB,0BACvDpT,KAAK+uE,UAAY/sE,EAAMgtE,kBAAkBhvE,KAAKoT,oBAAoB,cAClEpT,KAAKivE,mBAAqBjvE,KAAKoT,oBAAoB,sBAAsBnO,KAAKW,IAC5EA,EAAE5G,GAAKgD,EAAMgtE,kBAAkBppE,EAAE5G,IAAIgF,OAC9B4B,KAET5F,KAAKkvE,WAAalvE,KAAKoT,oBAAoB,cAC3CpT,KAAKmvE,iBAAmBnvE,KAAKoT,oBAAoB,oBACjDpT,KAAKovE,GAAKpvE,KAAKoT,oBAAoB,MACnCpT,KAAKoV,QAAUpV,KAAKoT,oBAAoB,WAExC,MAAMi8D,EAAOrvE,KAAKoT,oBAAoB,QACtCi8D,EAAKrwE,GAAKgD,EAAMgtE,kBAAkBK,EAAKrwE,IAEvCgB,KAAKqvE,KAAOA,GCtDT,MAAMC,WAAiCn8D,EAS5C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK26C,QAAU36C,KAAKoT,oBAAoB,WACxCpT,KAAKuvE,KAAOvvE,KAAKoT,oBAAoB,QACrCpT,KAAKwvE,KAAOxvE,KAAKoT,oBAAoB,QACrCpT,KAAKyvE,KAAOzvE,KAAKoT,oBAAoB,QACrCpT,KAAK0vE,KAAO1vE,KAAKoT,oBAAoB,QACrCpT,KAAK2vE,KAAO3vE,KAAKoT,oBAAoB,QACrCpT,KAAK4vE,IAAM5vE,KAAKoT,oBAAoB,QCjBjC,MAAMy8D,WAAwB18D,EAInC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKujB,UAAYvjB,KAAKoT,oBAAoB,cCPvC,MAAM08D,WAAoC38D,EAG/C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKsU,IAAMtU,KAAKoT,oBAAoB,Q,ICP5B28D,G,uSCgLL,MAAM,GAOXxwE,YACU6vD,EACAhgD,EACAC,EACA2gE,EACAC,EAA0B,MAJ1B,KAAA7gB,aAAAA,EACA,KAAAhgD,qBAAAA,EACA,KAAAC,mBAAAA,EACA,KAAA2gE,eAAAA,EACA,KAAAC,gBAAAA,EARF,KAAAC,aAAc,EACd,KAAAC,iBAAkB,EASxBnwE,KAAK2vB,OAASvgB,EAAqB4f,YACnChvB,KAAKswB,WAAatwB,KAAK2vB,OAAO1rB,WAC9BjE,KAAKkwE,YACHlwE,KAAK2vB,SAAWkW,GAAWuqC,WAC3BpwE,KAAK2vB,SAAWkW,GAAWwqC,eAC3BrwE,KAAK2vB,SAAWkW,GAAWyqC,aAC3BtwE,KAAK2vB,SAAWkW,GAAW0qC,gBAC3BvwE,KAAK2vB,SAAWkW,GAAW2qC,cAC3BxwE,KAAK2vB,SAAWkW,GAAW4qC,eAC3BzwE,KAAK2vB,SAAWkW,GAAW6qC,gBAC3B1wE,KAAK2vB,SAAWkW,GAAW8qC,eAC7B3wE,KAAKmwE,gBACHnwE,KAAK2vB,SAAWkW,GAAW+qC,gBAC3B5wE,KAAK2vB,SAAWkW,GAAWgrC,cAC3B7wE,KAAK2vB,SAAWkW,GAAWirC,aAKzBC,kBACJniE,G,gDAEA,MAAMiiB,EAAU,IAAImgD,QAAQ,CAC1B,eAAgB,mDAChBC,OAAQ,mBACR,cAAejxE,KAAKswB,aAEM,MAAxBtwB,KAAKiwE,iBACPp/C,EAAQrpB,IAAI,aAAcxH,KAAKiwE,iBAEjCrhE,EAAQgiB,0BAA0BC,GAClC,MAAMjlB,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ/gD,KAAKqP,mBAAmBqc,iBAAmB,iBAAkB,CACvE5d,KAAM9N,KAAKkxE,YACTtiE,EAAQihB,gBAAgC,QAAhB,EAAAjhB,EAAQiU,gBAAQ,QAAI7iB,KAAKoP,qBAAqB+hE,mBAExE7hD,YAAatvB,KAAKoxE,iBAClBpwB,MAAO,WACPnwB,QAASA,EACTwgD,OAAQ,UAIZ,IAAIC,EAAoB,KAKxB,GAJItxE,KAAKuxE,eAAe3lE,KACtB0lE,QAAqB1lE,EAAS4lE,QAGZ,MAAhBF,EAAsB,CACxB,GAAwB,MAApB1lE,EAAS8H,OACX,OAAO,IAAI0tD,GAAsBkQ,GAC5B,GACe,MAApB1lE,EAAS8H,QACT49D,EAAaG,qBACbtpE,OAAOpJ,KAAKuyE,EAAaG,qBAAqBpuE,OAG9C,aADMrD,KAAKovD,aAAasiB,oBAAoB9iE,EAAQoE,OAC7C,IAAI+uD,GAA0BuP,GAChC,GACe,MAApB1lE,EAAS8H,QACT49D,EAAar9D,kBACb9L,OAAOpJ,KAAKuyE,EAAar9D,kBAAkB5Q,OAE3C,OAAO,IAAI89D,GAAwBmQ,GAIvC,OAAO7yE,QAAQoQ,OAAO,IAAI4E,EAAc69D,EAAc1lE,EAAS8H,QAAQ,OAGnE4xB,uB,0CACJ,UACQtlC,KAAK2xE,gBACX,MAAO/yE,GACP,OAAOH,QAAQoQ,OAAO,UAMpB+iE,a,0CACJ,MAAM/rE,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB,MAAM,GAAM,GAClE,OAAO,IAAIgsE,GAAgBrmE,MAGvBgsE,iB,0CACJ,MAAMhsE,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB,MAAM,GAAM,GAClE,OAAO,IAAIk9D,GAAgBv3D,MAGvBisE,sB,0CACJ,MAAMjsE,QAAU7F,KAAKE,KAAK,MAAO,yBAA0B,MAAM,GAAM,GACvE,OAAO,IAAIuoE,GAAqB5iE,MAG5BksE,a,0CACJ,MAAMlsE,QAAU7F,KAAKE,KAAK,MAAO,gBAAiB,MAAM,GAAM,GAC9D,OAAO,IAAI0tE,GAAgB/nE,MAGvBmsE,WAAWpjE,G,0CACf,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB0O,GAAS,GAAM,GACrE,OAAO,IAAIs9D,GAAgBrmE,MAG7BosE,WAAWrjE,GACT,OAAO5O,KAAKE,KAAK,MAAO,gBAAiB0O,GAAS,GAAM,GAGpDsjE,aAAatjE,G,0CACjB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,qBAAsB0O,GAAS,GAAO,GACxE,OAAO,IAAI89D,GAAiB7mE,MAG9BssE,eAAevjE,GACb,OAAO5O,KAAKE,KAAK,OAAQ,wBAAyB0O,GAAS,GAAM,GAGnEwjE,UAAUxjE,GACR,OAAO5O,KAAKE,KAAK,OAAQ,kBAAmB0O,GAAS,GAAM,GAG7DyjE,aAAazjE,GACX,OAAO5O,KAAKE,KAAK,OAAQ,qBAAsB0O,GAAS,GAAM,GAGhEiZ,YAAYjZ,GACV,OAAO5O,KAAKE,KAAK,OAAQ,yBAA0B0O,GAAS,GAAM,GAGpE0jE,uBAAuB1jE,GACrB,OAAO5O,KAAKE,KAAK,OAAQ,kCAAmC0O,GAAS,GAAM,GAG7E2jE,kBAAkB3jE,GAChB,OAAO5O,KAAKE,KAAK,OAAQ,2BAA4B0O,GAAS,GAAM,GAGtE4jE,cAAc5jE,GACZ,OAAO5O,KAAKE,KAAK,SAAU,YAAa0O,GAAS,GAAM,GAGnD6jE,yB,0CAEJ,aADgBzyE,KAAKE,KAAK,MAAO,0BAA2B,MAAM,GAAM,MAI1EsW,iBAAiB5H,GACf,OAAO5O,KAAKE,KAAK,OAAQ,0BAA2B0O,GAAS,GAAO,GAGtEuW,aAAavW,GACX,OAAO5O,KAAKE,KAAK,OAAQ,qBAAsB0O,GAAS,GAAO,GAG3D8jE,YAAYhoE,G,0CAChB,MAAM7E,QAAU7F,KAAKE,KAAK,OAAQ,oBAAqBwK,GAAM,GAAM,GACnE,OAAO,IAAI4hE,GAAgBzmE,MAGvB8sE,aAAa/jE,G,0CACjB,OAAO5O,KAAKE,KAAK,OAAQ,sBAAuB0O,GAAS,GAAM,MAGjEgkE,uBACE,OAAO5yE,KAAKE,KAAK,OAAQ,8BAA+B,MAAM,GAAM,GAGtE2yE,oBACE,OAAO7yE,KAAKE,KAAK,OAAQ,2BAA4B,MAAM,GAAM,GAG7D4yE,mBAAmBlkE,G,0CACvB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,oBAAqB0O,GAAS,GAAM,GACtE,OAAO,IAAI09D,GAAgBzmE,MAG7BktE,mBAAmBnkE,GACjB,OAAO5O,KAAKE,KAAK,OAAQ,oBAAqB0O,GAAS,GAAM,GAG/DokE,mBAAmBtoE,GACjB,OAAO1K,KAAKE,KAAK,OAAQ,oBAAqBwK,GAAM,GAAM,GAG5DuoE,gBAAgBrkE,GACd,OAAO5O,KAAKE,KAAK,OAAQ,iBAAkB0O,GAAS,GAAM,GAG5DskE,eAAetkE,GACb,OAAO5O,KAAKE,KAAK,OAAQ,gBAAiB0O,GAAS,GAAM,GAG3DukE,yBACE,OAAOnzE,KAAKE,KAAK,OAAQ,yBAA0B,MAAM,GAAM,GAGjEkzE,4BAA4BxkE,GAC1B,OAAO5O,KAAKE,KAAK,OAAQ,+BAAgC0O,GAAS,GAAO,GAG3E6M,0BAA0B7M,GACxB,OAAO5O,KAAKE,KAAK,OAAQ,4BAA6B0O,GAAS,GAAM,GAGvEykE,yBAAyBzkE,GACvB,OAAO5O,KAAKE,KAAK,OAAQ,2BAA4B0O,GAAS,GAAO,GAGvE0kE,8BAA8B1kE,GAC5B,OAAO5O,KAAKE,KAAK,OAAQ,iCAAkC0O,GAAS,GAAO,GAG7E2kE,eAAe3kE,GACb,OAAO5O,KAAKE,KAAK,OAAQ,gBAAiB0O,GAAS,GAAM,GAGrD4kE,cAAcx9B,G,0CAClB,OAAOh2C,KAAKE,KAAK,SAAU,iBAAmB81C,EAAgB,MAAM,GAAM,MAGtEpqB,uB,0CACJ,OAAO5rB,KAAKE,KAAK,MAAO,gCAAiC,MAAM,GAAM,MAGjEuzE,eAAez0E,EAAY4P,G,0CAC/B,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,oBAAqB0O,GAAS,GAAM,GACtE,OAAO,IAAIwtD,GAAev2D,MAGtB6tE,qBACJ10E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,2BAA4B0O,GAAS,GAAM,GAC7E,OAAO,IAAIwtD,GAAev2D,MAG5BwwB,sBAAsBznB,GACpB,OAAO5O,KAAKE,KAAK,MAAO,iCAAkC0O,GAAS,GAAM,GAG3E+kE,wBACE,OAAO3zE,KAAKE,KAAK,OAAQ,wBAAyB,MAAM,GAAM,GAGhE0zE,qBAAqBhlE,GACnB,OAAO5O,KAAKE,KAAK,OAAQ,uBAAwB0O,GAAS,GAAM,GAGlEilE,4BACE,OAAO7zE,KAAKE,KAAK,OAAQ,qCAAsC,MAAM,GAAM,GAKvE4zE,UAAU90E,G,0CACd,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAI,MAAM,GAAM,GAC/D,OAAO,IAAI+hE,GAAel7D,MAGtBkuE,WAAWnlE,G,0CACf,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,WAAY0O,GAAS,GAAM,GAC7D,OAAO,IAAImyD,GAAel7D,MAGtBmuE,UAAUh1E,EAAY4P,G,0CAC1B,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAI4P,GAAS,GAAM,GAClE,OAAO,IAAImyD,GAAel7D,MAG5BouE,aAAaj1E,GACX,OAAOgB,KAAKE,KAAK,SAAU,YAAclB,EAAI,MAAM,GAAM,GAKrDk1E,QAAQl1E,G,0CACZ,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,UAAYlB,EAAI,MAAM,GAAM,GAC7D,OAAO,IAAIwuE,GAAa3nE,MAGpBsuE,eACJn1E,EACA4P,EACAmB,G,0CAEA,MAGMlK,QAAU7F,KAAKE,KACnB,OACA,iBAAmBlB,EACnB4P,GACA,GACA,EACAmB,GATuB8gB,IACvBA,EAAQrpB,IAAI,UAAWxI,MAWzB,OAAO,IAAIquE,GAAmBxnE,MAG1BuuE,wBACJl0E,EACA0O,EACAmB,G,0CAEA,MAGMlK,QAAU7F,KAAKE,KACnB,OACA,UAAYA,EAAKlB,GAAK,gBAAkBkB,EAAK0hD,KAAK5iD,GAClD4P,GACA,GACA,EACAmB,GATuB8gB,IACvBA,EAAQrpB,IAAI,UAAWtH,EAAKlB,OAW9B,OAAO,IAAIuuE,GAA6B1nE,MAGpCwuE,W,0CACJ,MAAMxuE,QAAU7F,KAAKE,KAAK,MAAO,SAAU,MAAM,GAAM,GACvD,OAAO,IAAI+hE,GAAap8D,EAAG2nE,OAGvB8G,SAAS1lE,G,0CACb,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,SAAU0O,GAAS,GAAM,GAC3D,OAAO,IAAI4+D,GAAa3nE,MAGpB0uE,iBAAiB3lE,G,0CACrB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,iBAAkB0O,GAAS,GAAM,GACnE,OAAO,IAAI6+D,GAA2B5nE,MAGlC2uE,uBACJ5gB,EACA6gB,G,0CAEA,MAAM5uE,QAAU7F,KAAKE,KAAK,MAAO,UAAY0zD,EAAS,SAAW6gB,EAAQ,MAAM,GAAM,GACrF,OAAO,IAAIhH,GAA2B5nE,MAGxC6uE,aAAa9gB,EAAgB6gB,EAAgB/pE,GAC3C,OAAO1K,KAAKE,KAAK,OAAQ,UAAY0zD,EAAS,SAAW6gB,EAAQ/pE,GAAM,GAAM,GAOzEiqE,mBAAmBjqE,G,0CACvB,MAAM7E,QAAU7F,KAAKE,KAAK,OAAQ,cAAewK,GAAM,GAAM,GAC7D,OAAO,IAAI8iE,GAAa3nE,MAGpB+uE,QAAQ51E,EAAY4P,G,0CACxB,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,UAAYlB,EAAI4P,GAAS,GAAM,GAChE,OAAO,IAAI4+D,GAAa3nE,MAGpBgvE,sBAAsB71E,G,0CAC1B,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,UAAYlB,EAAK,mBAAoB,MAAM,GAAM,GAClF,OAAO,IAAIwuE,GAAa3nE,MAG1BivE,WAAW91E,GACT,OAAOgB,KAAKE,KAAK,SAAU,UAAYlB,EAAI,MAAM,GAAM,GAKnD+1E,UAAU/1E,G,0CACd,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAI,MAAM,GAAM,GAC/D,OAAO,IAAI+9D,GAAel3D,MAGtBmvE,eAAeh2E,G,0CACnB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAK,SAAU,MAAM,GAAM,GAC1E,OAAO,IAAI+9D,GAAel3D,MAGtBovE,uBAAuBj/B,G,0CAC3B,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,gDAAkD81C,EAClD,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAGk3D,OAGvBmY,WAAWtmE,G,0CACf,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,WAAY0O,GAAS,GAAM,GAC7D,OAAO,IAAImuD,GAAel3D,MAGtBsvE,iBAAiBvmE,G,0CACrB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAmB0O,GAAS,GAAM,GACpE,OAAO,IAAImuD,GAAel3D,MAGtBuvE,gBAAgBxmE,G,0CACpB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,iBAAkB0O,GAAS,GAAM,GACnE,OAAO,IAAImuD,GAAel3D,MAGtBwvE,UAAUr2E,EAAY4P,G,0CAC1B,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAI4P,GAAS,GAAM,GAClE,OAAO,IAAImuD,GAAel3D,MAGtByvE,eAAet2E,EAAY4P,G,0CAC/B,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAK,SAAU4P,GAAS,GAAM,GAC7E,OAAO,IAAImuD,GAAel3D,MAG5B81C,aAAa38C,GACX,OAAOgB,KAAKE,KAAK,SAAU,YAAclB,EAAI,MAAM,GAAM,GAG3Du2E,kBAAkBv2E,GAChB,OAAOgB,KAAKE,KAAK,SAAU,YAAclB,EAAK,SAAU,MAAM,GAAM,GAGtEw2E,kBAAkB5mE,GAChB,OAAO5O,KAAKE,KAAK,SAAU,WAAY0O,GAAS,GAAM,GAGxD6mE,uBAAuB7mE,GACrB,OAAO5O,KAAKE,KAAK,SAAU,iBAAkB0O,GAAS,GAAM,GAG9D8mE,eAAe9mE,GACb,OAAO5O,KAAKE,KAAK,MAAO,gBAAiB0O,GAAS,GAAM,GAGpD+mE,eAAe32E,EAAY4P,G,0CAC/B,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAK,SAAU4P,GAAS,GAAM,GAC7E,OAAO,IAAImuD,GAAel3D,MAG5B+vE,gBAAgBhnE,GACd,OAAO5O,KAAKE,KAAK,MAAO,iBAAkB0O,GAAS,GAAM,GAG3DinE,qBAAqB72E,EAAY4P,GAC/B,OAAO5O,KAAKE,KAAK,MAAO,YAAclB,EAAK,eAAgB4P,GAAS,GAAM,GAG5EknE,0BAA0B92E,EAAY4P,GACpC,OAAO5O,KAAKE,KAAK,MAAO,YAAclB,EAAK,qBAAsB4P,GAAS,GAAM,GAGlFmnE,iBACEnnE,EACAonC,EAAyB,MAEzB,IAAI52B,EAAO,iBAIX,OAHsB,MAAlB42B,IACF52B,GAAQ,mBAAqB42B,GAExBh2C,KAAKE,KAAK,OAAQkf,EAAMxQ,GAAS,GAAM,GAGhDonE,kBAAkBpnE,GAChB,OAAO5O,KAAKE,KAAK,OAAQ,kBAAmB0O,GAAS,GAAM,GAG7DqnE,8BACEjgC,EACApnC,GAEA,OAAO5O,KAAKE,KACV,OACA,+CAAiD81C,EACjDpnC,GACA,GACA,GAIJsnE,gBAAgBl3E,GACd,OAAOgB,KAAKE,KAAK,MAAO,YAAclB,EAAK,UAAW,MAAM,GAAM,GAGpEm3E,qBAAqBn3E,GACnB,OAAOgB,KAAKE,KAAK,MAAO,YAAclB,EAAK,gBAAiB,MAAM,GAAM,GAG1Eo3E,qBAAqBxnE,GACnB,OAAO5O,KAAKE,KAAK,MAAO,kBAAmB0O,GAAS,GAAM,GAG5DynE,0BAA0BznE,GACxB,OAAO5O,KAAKE,KAAK,MAAO,wBAAyB0O,GAAS,GAAM,GAG5D0nE,iBAAiBt3E,G,0CACrB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAK,WAAY,MAAM,GAAM,GAC5E,OAAO,IAAI+9D,GAAel3D,MAGtB0wE,sBAAsBv3E,G,0CAC1B,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,YAAclB,EAAK,iBAAkB,MAAM,GAAM,GAClF,OAAO,IAAI+9D,GAAel3D,MAGtB2wE,sBACJ5nE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,mBAAoB0O,GAAS,GAAM,GACpE,OAAO,IAAIqzD,GAA6Bp8D,EAAGk3D,OAKvClc,kBACJ9F,EACA+G,EACA3B,G,0CAEA,MAAM/gC,GACkB,MAArB+gC,EAA4B,qBAAuBA,EAAoB,IAAM,aAC9EpF,EACA,eACA+G,EACIj8C,QAAU7F,KAAKE,KAAK,MAAOkf,EAAM,MAAM,GAAM,GACnD,OAAO,IAAIk9C,GAAmBz2D,MAG1B4wE,qBACJz3E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,YAAclB,EAAK,iBAAkB4P,GAAS,GAAM,GACtF,OAAO,IAAIouD,GAA6Bn3D,MAOpC6wE,2BAA2B13E,EAAY0L,G,0CAC3C,MAAM7E,QAAU7F,KAAKE,KAAK,OAAQ,YAAclB,EAAK,cAAe0L,GAAM,GAAM,GAChF,OAAO,IAAIqyD,GAAel3D,MAOtB8wE,gCAAgC33E,EAAY0L,G,0CAChD,MAAM7E,QAAU7F,KAAKE,KAAK,OAAQ,YAAclB,EAAK,oBAAqB0L,GAAM,GAAM,GACtF,OAAO,IAAIqyD,GAAel3D,MAG5B66C,uBAAuB1hD,EAAY8iD,GACjC,OAAO9hD,KAAKE,KAAK,SAAU,YAAclB,EAAK,eAAiB8iD,EAAc,MAAM,GAAM,GAG3F80B,4BAA4B53E,EAAY8iD,GACtC,OAAO9hD,KAAKE,KACV,SACA,YAAclB,EAAK,eAAiB8iD,EAAe,SACnD,MACA,GACA,GAIJ+0B,0BACE73E,EACA8iD,EACAp3C,EACAsrC,GAEA,OAAOh2C,KAAKE,KACV,OACA,YAAclB,EAAK,eAAiB8iD,EAAe,yBAA2B9L,EAC9EtrC,GACA,GACA,GAIEosE,yBACJ93E,EACA8iD,G,0CAEA,MAAMj8C,QAAU7F,KAAKE,KACnB,MACA,YAAclB,EAAK,eAAiB8iD,EAAe,SACnD,MACA,GACA,GAEF,OAAO,IAAIkb,GAA6Bn3D,MAG1CkxE,mBAAmB/3E,EAAY8iD,EAAsBp3C,GACnD,OAAO1K,KAAKE,KAAK,OAAQ,YAAclB,EAAK,eAAiB8iD,EAAcp3C,GAAM,GAAM,GAKnFssE,qBACJhhC,EACAh3C,G,0CAEA,MAAM6G,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,gBAAkBh3C,EAAK,WAC5D,MACA,GACA,GAEF,OAAO,IAAIqgE,GAA+Bx5D,MAGtCoxE,qB,0CACJ,MAAMpxE,QAAU7F,KAAKE,KAAK,MAAO,eAAgB,MAAM,GAAM,GAC7D,OAAO,IAAI+hE,GAAap8D,EAAGq5D,OAGvBgY,eAAelhC,G,0CACnB,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,eACrC,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAGq5D,OAGvBiY,mBACJnhC,EACAh3C,G,0CASA,aAPgBgB,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,gBAAkBh3C,EAAK,SAC5D,MACA,GACA,IAEOiG,KAAKi9D,GAAY,IAAIlD,GAA0BkD,QAGpDkV,eACJphC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,eACrCpnC,GACA,GACA,GAEF,OAAO,IAAIswD,GAAmBr5D,MAG1BwxE,cACJrhC,EACAh3C,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,gBAAkBh3C,EACvD4P,GACA,GACA,GAEF,OAAO,IAAIswD,GAAmBr5D,MAG1ByxE,mBACJthC,EACAh3C,EACA4P,G,gDAEM5O,KAAKE,KACT,MACA,kBAAoB81C,EAAiB,gBAAkBh3C,EAAK,SAC5D4P,GACA,GACA,MAIJ2oE,iBAAiBvhC,EAAwBh3C,GACvC,OAAOgB,KAAKE,KACV,SACA,kBAAoB81C,EAAiB,gBAAkBh3C,EACvD,MACA,GACA,GAIJw4E,qBACExhC,EACAh3C,EACAkmB,GAEA,OAAOllB,KAAKE,KACV,SACA,kBAAoB81C,EAAiB,gBAAkBh3C,EAAK,SAAWkmB,EACvE,MACA,GACA,GAMEuyD,gBAAgBzhC,EAAwBh3C,G,0CAC5C,MAAM6G,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,WAAah3C,EAAK,WACvD,MACA,GACA,GAEF,OAAO,IAAIkiE,GAAqBr7D,MAG5B6xE,UAAU1hC,G,0CACd,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,UACrC,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAGm7D,OAGvB2W,cAAc3hC,EAAwBh3C,G,0CAQ1C,aAPgBgB,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,WAAah3C,EAAK,SACvD,MACA,GACA,MAKE44E,UAAU5hC,EAAwBpnC,G,0CACtC,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,UACrCpnC,GACA,GACA,GAEF,OAAO,IAAIoyD,GAAcn7D,MAGrBgyE,SACJ7hC,EACAh3C,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,WAAah3C,EAClD4P,GACA,GACA,GAEF,OAAO,IAAIoyD,GAAcn7D,MAGrBiyE,cAAc9hC,EAAwBh3C,EAAY4P,G,gDAChD5O,KAAKE,KACT,MACA,kBAAoB81C,EAAiB,WAAah3C,EAAK,SACvD4P,GACA,GACA,MAIJmpE,YAAY/hC,EAAwBh3C,GAClC,OAAOgB,KAAKE,KACV,SACA,kBAAoB81C,EAAiB,WAAah3C,EAClD,MACA,GACA,GAIJg5E,gBAAgBhiC,EAAwBh3C,EAAYkmB,GAClD,OAAOllB,KAAKE,KACV,SACA,kBAAoB81C,EAAiB,WAAah3C,EAAK,SAAWkmB,EAClE,MACA,GACA,GAME+yD,UAAUjiC,EAAwB5qC,G,0CACtC,MAAMvF,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,aAAe5qC,EACpD,MACA,GACA,GAEF,OAAO,IAAIqhE,GAAe5mE,MAGtBqyE,YAAYliC,G,0CAChB,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,YACrC,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAG4mE,OAGvB0L,mBACJniC,EACAv0B,EACAzO,EACAkS,G,0CAEA,MAAMrf,QAAU7F,KAAKE,KACnB,MACA,kBACE81C,EADF,yBAIElyC,mBAAmB2d,GACnB,UACA3d,mBAAmBkP,GACnB,uBACAkS,EACF,MACA,GACA,GAEF,OAAO,IAAI+8C,GAAap8D,EAAG4mE,OAGvB2L,yBACJpiC,EACAhuB,G,0CAEA,MAAMniB,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAApB,iCAA6EhuB,EAC7E,MACA,GACA,GAEF,OAAO,IAAIi6C,GAAap8D,EAAG4mE,OAGvB4L,UACJriC,EACA5qC,EACAwD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,aAAe5qC,EACpDwD,GACA,GACA,GAEF,OAAO,IAAI69D,GAAe5mE,MAKtByyE,oBACJtiC,EACAh3C,G,0CAEA,MAAM6G,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,UAAYh3C,EACjD,MACA,GACA,GAEF,OAAO,IAAIosE,GAAgCvlE,MAGvC0yE,0BAA0BviC,EAAwBh3C,G,0CAQtD,aAPgBgB,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,UACtD,MACA,GACA,MAKEw5E,qBACJxiC,G,0CAEA,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,SACrC,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAGqlE,OAGvBuN,wCACJziC,EACAh3C,G,0CAEA,MAAM6G,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,0BACtD,MACA,GACA,GAEF,OAAO,IAAIqsE,GAA4CxlE,MAGnD4hB,gCACJJ,G,0CAEA,MAAMxhB,QAAU7F,KAAKE,KACnB,MACA,kBAAoBmnB,EAAa,sBACjC,MACA,GACA,GAEF,OAAO,IAAIw9C,GAAqCh/D,MAGlD6yE,2BACE1iC,EACApnC,GAEA,OAAO5O,KAAKE,KACV,OACA,kBAAoB81C,EAAiB,gBACrCpnC,GACA,GACA,GAIJ+pE,6BAA6B3iC,EAAwBh3C,GACnD,OAAOgB,KAAKE,KACV,OACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,YACtD,MACA,GACA,GAIE45E,iCACJ5iC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,kBACrCpnC,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGikE,OAG7B+O,2BACE7iC,EACAh3C,EACA4P,GAEA,OAAO5O,KAAKE,KACV,OACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,UACtD4P,GACA,GACA,GAIJkqE,4BACE9iC,EACAh3C,EACA4P,GAEA,OAAO5O,KAAKE,KACV,OACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,WACtD4P,GACA,GACA,GAIEmqE,+BACJ/iC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,qBACrCpnC,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGgkE,OAGvBmP,gCACJhjC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,iBACrCpnC,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGikE,OAG7BmP,oBACEjjC,EACAh3C,EACA4P,GAEA,OAAO5O,KAAKE,KACV,MACA,kBAAoB81C,EAAiB,UAAYh3C,EACjD4P,GACA,GACA,GAIJsqE,0BACEljC,EACAh3C,EACA4P,GAEA,OAAO5O,KAAKE,KACV,MACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,UACtD4P,GACA,GACA,GAIJ2Z,2CACEytB,EACAhuB,EACApZ,GAEA,OAAO5O,KAAKE,KACV,MACA,kBAAoB81C,EAAiB,UAAYhuB,EAAS,6BAC1DpZ,GACA,GACA,GAIJuqE,iCACEnjC,EACAh3C,EACA4P,GAEA,OAAO5O,KAAKE,KACV,MACA,kBAAoB81C,EAAiB,UAAYh3C,EAAK,kBACtD4P,GACA,GACA,GAIJwqE,uBAAuBpjC,EAAwBh3C,GAC7C,OAAOgB,KAAKE,KACV,SACA,kBAAoB81C,EAAiB,UAAYh3C,EACjD,MACA,GACA,GAIEq6E,4BACJrjC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,SACA,kBAAoB81C,EAAiB,SACrCpnC,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGikE,OAKvBwP,W,0CACJ,MAAMzzE,QAAU7F,KAAKE,KAAK,MAAO,UAAW,MAAM,GAAM,GACxD,OAAO,IAAI+hE,GAAap8D,EAAGm/D,OAGvBuU,oBAAoBvjC,EAAwBpnC,G,0CAChD,OAAO5O,KAAKE,KAAK,OAAQ,kBAAoB81C,EAAiB,UAAWpnC,GAAS,GAAM,MAGpF4qE,0BAA0B5qE,G,0CAC9B,OAAO5O,KAAKE,KAAK,OAAQ,8BAA+B0O,GAAS,GAAM,MAGnE6qE,c,0CACJ,MAAM5zE,QAAU7F,KAAKE,KAAK,MAAO,0BAA2B,MAAM,GAAM,GACxE,OAAO,IAAI+hE,GAAap8D,EAAGooE,OAKvByL,qB,0CACJ,MAAM7zE,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB,MAAM,GAAM,GAClE,OAAO,IAAIw/D,GAAgB75D,MAGvB8zE,mBAAmB/qE,G,0CACvB,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB0O,GAAS,GAAM,GACrE,OAAO,IAAI8wD,GAAgB75D,MAKvB+zE,U,0CACJ,MAAMx6D,EAAOpf,KAAKmwE,iBAAmBnwE,KAAKkwE,YAAc,4BAA8B,QAChFrqE,QAAU7F,KAAKE,KAAK,MAAOkf,EAAM,MAAM,GAAM,GACnD,OAAO,IAAIuuD,GAAa9nE,MAKpBg0E,wB,0CACJ,MAAMh0E,QAAU7F,KAAKE,KAAK,MAAO,cAAe,MAAM,GAAM,GAC5D,OAAO,IAAI+hE,GAAap8D,EAAG0oE,OAGvBuL,kCACJ9jC,G,0CAEA,MAAMnwC,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,cACrC,MACA,GACA,GAEF,OAAO,IAAIisB,GAAap8D,EAAG0oE,OAGvBwL,0BACJnrE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,gCAAiC0O,GAAS,GAAM,GAClF,OAAO,IAAIs/D,GAA+BroE,MAGtCm0E,kBAAkBprE,G,0CACtB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,wBAAyB0O,GAAS,GAAM,GAC1E,OAAO,IAAI0/D,GAAuBzoE,MAG9Bo0E,gBAAgBrrE,G,0CACpB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,sBAAuB0O,GAAS,GAAM,GACxE,OAAO,IAAIu/D,GAAqBtoE,MAG5Bq0E,4BACJlkC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoB81C,EAAiB,sBACrCpnC,GACA,GACA,GAEF,OAAO,IAAIu/D,GAAqBtoE,MAG5Bs0E,oBAAoBvrE,G,0CACxB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,0BAA2B0O,GAAS,GAAM,GAC5E,OAAO,IAAI0gE,GAAyBzpE,MAGhCu0E,qBACJxrE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,2BAA4B0O,GAAS,GAAM,GAC7E,OAAO,IAAI6/D,GAA0B5oE,MAGjCw0E,8BACJzrE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,qCAAsC0O,GAAS,GAAM,GACvF,OAAO,IAAIggE,GAAkB/oE,MAGzBy0E,oBAAoB1rE,G,0CACxB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,0BAA2B0O,GAAS,GAAM,GAC5E,OAAO,IAAI4/D,GAAyB3oE,MAGhC00E,0BACJ3rE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,4BAA6B0O,GAAS,GAAM,GAC7E,OAAO,IAAIs/D,GAA+BroE,MAGtC20E,kBAAkB5rE,G,0CACtB,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,oBAAqB0O,GAAS,GAAM,GACrE,OAAO,IAAI0/D,GAAuBzoE,MAG9B40E,gBAAgB7rE,G,0CACpB,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,kBAAmB0O,GAAS,GAAM,GACnE,OAAO,IAAIu/D,GAAqBtoE,MAG5B60E,4BACJ1kC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,kBACrCpnC,GACA,GACA,GAEF,OAAO,IAAIu/D,GAAqBtoE,MAG5B80E,oBACJ/rE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,sBAAuB0O,GAAS,GAAM,GACvE,OAAO,IAAI0gE,GAAyBzpE,MAGhC+0E,qBACJhsE,G,0CAEA,MAAMhD,EAAWgD,EAAQisE,eAAejvE,SAClClB,EAAYvC,OAAOC,OAAO,GAAIwG,GAEpClE,EAAKmwE,eAAiB,CACpB77E,GAAI4P,EAAQisE,eAAe77E,GAC3B87E,MAAOx2E,KAAKsK,EAAQisE,eAAe77E,IACnCoM,KAAMwD,EAAQisE,eAAezvE,KAC7B8jE,WAAYtgE,EAAQisE,eAAeE,4BACnCnvE,SAAU,CACRovE,kBAAmBh5E,EAAMwC,gBAAgBoH,EAASqvE,mBAClDC,eAAgBl5E,EAAMwC,gBAAgBoH,EAASuvE,kBAInD,MAAMt1E,QAAU7F,KAAKE,KAAK,MAAO,uBAAwBwK,GAAM,GAAM,GACrE,OAAO,IAAI+jE,GAA0B5oE,MAGjCu1E,wBACJxsE,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,SAAU,uBAAwB0O,GAAS,GAAM,GAC3E,OAAO,IAAI6/D,GAA0B5oE,MAGjCw1E,oBAAoBzsE,G,0CACxB,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,sBAAuB0O,GAAS,GAAM,GACvE,OAAO,IAAI2/D,GAA0B1oE,MAGjCy1E,gCACJtlC,EACApnC,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,MACA,kBAAoB81C,EAAiB,sBACrCpnC,GACA,GACA,GAEF,OAAO,IAAI2/D,GAA0B1oE,MAGvC01E,qBAAqB3sE,GACnB,OAAO5O,KAAKE,KAAK,OAAQ,sBAAuB0O,GAAS,GAAO,GAGlE4sE,wBAAwB5sE,GACtB,OAAO5O,KAAKE,KAAK,OAAQ,yBAA0B0O,GAAS,GAAM,GAGpEklB,mBAAmBllB,GACjB,OAAO5O,KAAKE,KAAK,OAAQ,+BAAgC0O,GAAS,GAAO,GAKrE6sE,4B,0CACJ,MAAM51E,QAAU7F,KAAKE,KAAK,MAAO,4BAA6B,MAAM,GAAM,GAC1E,OAAO,IAAI+hE,GAAap8D,EAAGi6D,OAGvB4b,4B,0CACJ,MAAM71E,QAAU7F,KAAKE,KAAK,MAAO,4BAA6B,MAAM,GAAM,GAC1E,OAAO,IAAI+hE,GAAap8D,EAAGq6D,OAGvByb,mBAAmB38E,G,0CACvB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,qBAAuBlB,EAAI,MAAM,GAAM,GACxE,OAAO,IAAI8gE,GAAsCj6D,MAG7C+1E,4BAA4B58E,G,0CAChC,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,qBAAuBlB,EAAK,YAAa,MAAM,GAAM,GACtF,OAAO,IAAIijE,GAAap8D,EAAG4mE,OAG7BoP,mBAAmB78E,EAAY4P,GAC7B,OAAO5O,KAAKE,KAAK,MAAO,qBAAuBlB,EAAI4P,GAAS,GAAM,GAGpEktE,sBAAsB98E,GACpB,OAAOgB,KAAKE,KAAK,SAAU,qBAAuBlB,EAAI,MAAM,GAAM,GAGpE+8E,0BAA0BntE,GACxB,OAAO5O,KAAKE,KAAK,OAAQ,2BAA4B0O,GAAS,GAAM,GAGtEotE,4BAA4Bh9E,GAC1B,OAAOgB,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,YAAa,MAAM,GAAM,GAGhFi9E,0BAA0Bj9E,EAAY4P,GACpC,OAAO5O,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,UAAW4P,GAAS,GAAM,GAGjFstE,2BAA2Bl9E,EAAY4P,GACrC,OAAO5O,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,WAAY4P,GAAS,GAAM,GAGlFutE,4BAA4Bn9E,GAC1B,OAAOgB,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,YAAa,MAAM,GAAM,GAGhFo9E,2BAA2Bp9E,GACzB,OAAOgB,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,WAAY,MAAM,GAAM,GAG/Eq9E,0BAA0Br9E,GACxB,OAAOgB,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,UAAW,MAAM,GAAM,GAGxEs9E,4BAA4Bt9E,G,0CAChC,MAAM6G,QAAU7F,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,YAAa,MAAM,GAAM,GACvF,OAAO,IAAIohE,GAAgCv6D,MAGvC02E,4BACJv9E,EACA4P,G,gDAEgB5O,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,YAAa4P,GAAS,GAAM,MAGtF4tE,wBAAwBx9E,G,0CAC5B,MAAM6G,QAAU7F,KAAKE,KAAK,OAAQ,qBAAuBlB,EAAK,QAAS,MAAM,GAAM,GACnF,OAAO,IAAIshE,GAA4Bz6D,MAKnC42E,gBAAgBz9E,G,0CACpB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAI,MAAM,GAAM,GACrE,OAAO,IAAIqoE,GAAqBxhE,MAG5B62E,uBAAuB19E,G,0CAC3B,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,WAAY,MAAM,GAAM,GAClF,OAAO,IAAIo+D,GAAgBv3D,MAGvB82E,4BAA4B39E,G,0CAChC,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,gBAAiB,MAAM,GAAM,GACvF,OAAO,IAAI4qE,GAAiC/jE,MAGxC+2E,uBAAuB59E,EAAY69E,G,0CACvC,OAAO78E,KAAKE,KACV,MACA,kBAAoBlB,EAAK,2BAA6B69E,EACtD,MACA,GACA,MAIEC,uBAAuB99E,G,0CAC3B,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,OAAQ,MAAM,GAAM,GAC9E,OAAO,IAAI4uE,GAAgB/nE,MAGvBk3E,mBAAmB/9E,G,0CACvB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,OAAQ,MAAM,GAAM,GAC9E,OAAO,IAAIslE,GAAwBz+D,MAG/Bm3E,iBAAiBpuE,G,0CACrB,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,iBAAkB0O,GAAS,GAAM,GACnE,OAAO,IAAIy4D,GAAqBxhE,MAG5Bo3E,gBACJj+E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAI4P,GAAS,GAAM,GACxE,OAAO,IAAIy4D,GAAqBxhE,MAG5Bq3E,uBACJl+E,EACA4P,G,0CAEA,OAAO5O,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,OAAQ4P,GAAS,GAAM,MAG1EwX,sBAAsBpnB,GACpB,OAAOgB,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,SAAU,MAAM,GAAM,GAGpEm+E,wBAAwBzyE,G,0CAC5B,MAAM7E,QAAU7F,KAAKE,KAAK,OAAQ,yBAA0BwK,GAAM,GAAM,GACxE,OAAO,IAAI28D,GAAqBxhE,MAG5Bu3E,8BAA8Bp+E,EAAY0L,G,0CAC9C,OAAO1K,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,WAAY0L,GAAM,GAAM,MAGtE2yE,uBACJr+E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,WAAY4P,GAAS,GAAM,GACtF,OAAO,IAAIwtD,GAAev2D,MAGtBy3E,6BACJt+E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,kBAAoBlB,EAAK,kBACzB4P,GACA,GACA,GAEF,OAAO,IAAIwtD,GAAev2D,MAGtB03E,oBACJv+E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,OAAQ4P,GAAS,GAAM,GAClF,OAAO,IAAI01D,GAAwBz+D,MAG/B23E,wBACJx+E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,WAAY4P,GAAS,GAAM,GACtF,OAAO,IAAI09D,GAAgBzmE,MAGvB43E,mCACJz+E,EACA4P,G,0CAEA,OAAO5O,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,gBAAiB4P,GAAS,GAAM,MAG9E8uE,qBAAqB1+E,EAAY4P,G,0CACrC,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,QAAS4P,GAAS,GAAM,GACnF,OAAO,IAAI09D,GAAgBzmE,MAGvB83E,wBAAwB3+E,EAAY4P,G,0CACxC,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,WAAY4P,GAAS,GAAM,GACtF,OAAO,IAAI09D,GAAgBzmE,MAG7B+3E,wBAAwB5+E,EAAY4P,GAClC,OAAO5O,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,WAAY4P,GAAS,GAAM,GAG/EivE,2BAA2B7+E,EAAY4P,GACrC,OAAO5O,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,eAAgB4P,GAAS,GAAM,GAGnFkvE,uBAAuB9+E,GACrB,OAAOgB,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,UAAW,MAAM,GAAM,GAG3E++E,0BAA0B/+E,GACxB,OAAOgB,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,aAAc,MAAM,GAAM,GAG9Eg/E,mBAAmBh/E,EAAY4P,GAC7B,OAAO5O,KAAKE,KAAK,SAAU,kBAAoBlB,EAAI4P,GAAS,GAAM,GAG9DmZ,oBAAoB/oB,G,0CACxB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,kBAAoBlB,EAAK,QAAS,MAAM,GAAM,GAC/E,OAAO,IAAI+lE,GAAyBl/D,MAGhCo4E,qBACJj/E,EACA4P,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,kBAAoBlB,EAAK,QAAS4P,GAAS,GAAM,GACnF,OAAO,IAAIm2D,GAAyBl/D,MAKhCq4E,kBAAkBl/E,EAAY4P,G,0CAClC,MAAM/I,QAAU7F,KAAKE,KAAK,OAAQ,cAAgBlB,EAAK,SAAU4P,GAAS,GAAM,GAChF,OAAO,IAAIk+D,GAAiBjnE,MAGxBs4E,YAAYn/E,G,0CAChB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,cAAgBlB,EAAI,MAAM,GAAM,GACjE,OAAO,IAAI8tE,GAAiBjnE,MAGxBu4E,YAAYp/E,EAAY4P,G,0CAC5B,MAAM/I,QAAU7F,KAAKE,KAAK,MAAO,cAAgBlB,EAAI4P,GAAS,GAAM,GACpE,OAAO,IAAIk+D,GAAiBjnE,MAKxBw4E,iBACJ7d,G,0CAEA,MAAM36D,QAAU7F,KAAKE,KAAK,MAAO,cAAgBsgE,EAAa,SAAU,MAAM,GAAM,GACpF,OAAO,IAAIyB,GAAap8D,EAAGqnE,OAGvBoR,gBAAgB9d,EAAoBxhE,G,0CACxC,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,cAAgBsgE,EAAa,UAAYxhE,EAAI,MAAM,GAAM,GAC1F,OAAO,IAAIiuE,GAAqBpnE,MAGlC04E,uBAAuB/d,EAAoB5xD,GACzC,OAAO5O,KAAKE,KAAK,OAAQ,cAAgBsgE,EAAa,gBAAiB5xD,GAAS,GAAM,GAGxF4vE,yBAAyBhe,EAAoBxhE,GAC3C,OAAOgB,KAAKE,KACV,OACA,cAAgBsgE,EAAa,UAAYxhE,EAAK,YAC9C,MACA,GACA,GAIEy/E,6BACJje,EACA5xD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,cAAgBsgE,EAAa,kBAC7B5xD,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGmnE,OAGvB0R,4BACJle,EACA5xD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,cAAgBsgE,EAAa,iBAC7B5xD,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGmnE,OAGvB2R,wBACJne,EACA5xD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KAAK,SAAU,cAAgBsgE,EAAa,SAAU5xD,GAAS,GAAM,GAC1F,OAAO,IAAIqzD,GAAap8D,EAAGmnE,OAG7B4R,uBACEpe,EACAxhE,EACA4P,GAEA,OAAO5O,KAAKE,KACV,OACA,cAAgBsgE,EAAa,UAAYxhE,EAAK,UAC9C4P,GACA,GACA,GAIJiwE,wBACEre,EACAxhE,EACA4P,GAEA,OAAO5O,KAAKE,KACV,OACA,cAAgBsgE,EAAa,UAAYxhE,EAAK,WAC9C4P,GACA,GACA,GAIEkwE,2BACJte,EACA5xD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,cAAgBsgE,EAAa,qBAC7B5xD,GACA,GACA,GAEF,OAAO,IAAIqzD,GAAap8D,EAAGknE,OAG7BgS,gBACEve,EACAxhE,EACA4P,GAEA,OAAO5O,KAAKE,KAAK,MAAO,cAAgBsgE,EAAa,UAAYxhE,EAAI4P,GAAS,GAAM,GAGtFowE,mBAAmBxe,EAAoBxhE,GACrC,OAAOgB,KAAKE,KAAK,SAAU,cAAgBsgE,EAAa,UAAYxhE,EAAI,MAAM,GAAM,GAKhFigF,mBACJze,G,0CAEA,MAAM36D,QAAU7F,KAAKE,KACnB,MACA,cAAgBsgE,EAAa,iBAC7B,MACA,GACA,GAEF,OAAO,IAAIyB,GAAap8D,EAAG+mE,OAG7BsS,4BACE1e,EACA5xD,GAEA,OAAO5O,KAAKE,KACV,OACA,cAAgBsgE,EAAa,qBAC7B5xD,GACA,GACA,GAIEuwE,+BACJ3e,EACA5xD,G,0CAEA,MAAM/I,QAAU7F,KAAKE,KACnB,OACA,cAAgBsgE,EAAa,iBAC7B5xD,GACA,GACA,GAEF,OAAO,IAAI+9D,GAA6B9mE,MAG1Cu5E,2BAA2B5e,EAAoBxhE,GAC7C,OAAOgB,KAAKE,KACV,SACA,cAAgBsgE,EAAa,kBAAoBxhE,EACjD,MACA,GACA,GAMEqgF,UAAUv/D,EAAew/D,EAAa79D,G,0CAC1C,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBAAmB,UAAWz/D,EAAOw/D,EAAK79D,GAC/C,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBif,gBACJxgF,EACA8gB,EACAw/D,EACA79D,G,0CAEA,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBAAmB,YAAcvgF,EAAK,UAAW8gB,EAAOw/D,EAAK79D,GAClE,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBkf,sBACJzgF,EACA8gB,EACAw/D,EACA79D,G,0CAEA,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBAAmB,kBAAoBvgF,EAAK,UAAW8gB,EAAOw/D,EAAK79D,GACxE,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBmf,0BACJ1pC,EACAh3C,EACA8gB,EACAw/D,EACA79D,G,0CAEA,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBACH,kBAAoBvpC,EAAiB,UAAYh3C,EAAK,UACtD8gB,EACAw/D,EACA79D,GAEF,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBof,kBACJ3gF,EACA8gB,EACAw/D,EACA79D,G,0CAEA,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBAAmB,cAAgBvgF,EAAK,UAAW8gB,EAAOw/D,EAAK79D,GACpE,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBqf,sBACJpf,EACAxhE,EACA8gB,EACAw/D,EACA79D,G,0CAEA,MAAM5b,QAAU7F,KAAKE,KACnB,MACAF,KAAKu/E,mBACH,cAAgB/e,EAAa,UAAYxhE,EAAK,UAC9C8gB,EACAw/D,EACA79D,GAEF,MACA,GACA,GAEF,OAAO,IAAIwgD,GAAap8D,EAAG06D,OAGvBsf,kBAAkBjxE,G,0CACtB,MAAMkxE,QAAmB9/E,KAAK+/E,uBACxBlvD,EAAU,IAAImgD,QAAQ,CAC1B,cAAehxE,KAAKswB,WACpB0vD,cAAe,UAAYF,EAC3B,eAAgB,oCAEU,MAAxB9/E,KAAKiwE,iBACPp/C,EAAQrpB,IAAI,aAAcxH,KAAKiwE,iBAWjC,GAAwB,aATDjwE,KAAK8gD,MAC1B,IAAIC,QAAQ/gD,KAAKqP,mBAAmB4wE,eAAiB,WAAY,CAC/Dj/B,MAAO,WACP1xB,YAAatvB,KAAKoxE,iBAClBC,OAAQ,OACRvjE,KAAMR,KAAKC,UAAUqB,GACrBiiB,QAASA,MAGAnd,OACX,OAAOjV,QAAQoQ,OAAO,yBAMpBqxE,iBAAiBlhF,G,0CACrB,MAAM6G,QAAU7F,KAAKE,KAAK,MAAO,UAAYlB,EAAK,cAAe,MAAM,GAAM,GAC7E,OAAO,IAAI6wE,GAAgBhqE,MAKvBs6E,cAAcjwD,G,0CAElB,aADgBlwB,KAAKE,KAAK,MAAO,yBAA2BgwB,EAAU,MAAM,GAAM,IACzEjrB,KAAK2C,GAAW,IAAI22D,GAAsB32D,QAK/Cw4E,kBAAkBxxE,G,0CAEtB,aADgB5O,KAAKE,KAAK,OAAQ,kBAAmB0O,GAAS,GAAM,MAIhEyxE,mB,0CAEJ,aADgBrgF,KAAKE,KAAK,OAAQ,iBAAkB,MAAM,GAAM,MAM5DogF,2BAA2Bxe,G,0CAC/B,MAAMge,QAAmB9/E,KAAK+/E,uBAExBn0E,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ+gB,EAAkB,aAAc,CAC1C9gB,MAAO,WACPqwB,OAAQ,MACRxgD,QAAS,IAAImgD,QAAQ,CACnBC,OAAQ,mBACR+O,cAAe,UAAYF,OAKjC,GAAwB,MAApBl0E,EAAS8H,OAAgB,CAC3B,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,GAAO,GACtD,OAAOnN,QAAQoQ,OAAO+G,GAGxB,OAAO,IAAIk6D,SAAkClkE,EAAS4lE,WAGlDgP,0BACJ1e,EACAlzD,G,0CAEA,MAAMkxE,QAAmB9/E,KAAK+/E,uBAExBn0E,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ+gB,EAAkB,aAAc,CAC1C9gB,MAAO,WACPqwB,OAAQ,OACRxgD,QAAS,IAAImgD,QAAQ,CACnBC,OAAQ,mBACR+O,cAAe,UAAYF,EAC3B,eAAgB,oCAElBhyE,KAAMR,KAAKC,UAAUqB,MAIzB,GAAwB,MAApBhD,EAAS8H,OAAgB,CAC3B,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,GAAO,GACtD,OAAOnN,QAAQoQ,OAAO+G,OAIpB6qE,qBAAqB3e,G,0CACzB,MAAMl2D,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ+gB,EAAkB,SAAU,CACtC9gB,MAAO,WACPqwB,OAAQ,MACRxgD,QAAS,IAAImgD,QAAQ,CACnBC,OAAQ,mBACR,eAAgB,uCAKtB,GAAwB,MAApBrlE,EAAS8H,OAAgB,CAC3B,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,GAAO,GACtD,OAAOnN,QAAQoQ,OAAO+G,OAMpBmqE,uB,0CACJ,IAAI1e,QAAoBrhE,KAAKovD,aAAasxB,WAK1C,aAJU1gF,KAAKovD,aAAauxB,6BACpB3gF,KAAK2xE,gBACXtQ,QAAoBrhE,KAAKovD,aAAasxB,YAEjCrf,KAGTvgB,MAAMlyC,GAKJ,MAJuB,QAAnBA,EAAQyiE,SACVziE,EAAQiiB,QAAQrpB,IAAI,gBAAiB,YACrCoH,EAAQiiB,QAAQrpB,IAAI,SAAU,aAEzBxH,KAAK4gF,YAAYhyE,GAG1BgyE,YAAYhyE,GACV,OAAOkyC,MAAMlyC,GAGT6c,eAAepE,G,0CACnB,GAAkB,MAAdA,GAAqC,KAAfA,EACxB,MAAM,IAAIxoB,MAAM,6CAElB,MAAMgyB,EAAU,IAAImgD,QAAQ,CAC1BC,OAAQ,mBACR,cAAejxE,KAAKswB,aAEM,MAAxBtwB,KAAKiwE,iBACPp/C,EAAQrpB,IAAI,aAAcxH,KAAKiwE,iBAGjC,MAAM7wD,EAAO,mCAAmCtb,mBAAmBujB,KAC7Dzb,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ/gD,KAAKqP,mBAAmBqc,iBAAmBtM,EAAM,CAC3D4hC,MAAO,WACP1xB,YAAatvB,KAAKoxE,iBAClBvgD,QAASA,EACTwgD,OAAQ,SAIZ,GAAwB,MAApBzlE,EAAS8H,OACX,OAAO,EACF,CACL,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,GAAO,GACtD,OAAOnN,QAAQoQ,OAAO+G,OAIpBirE,sBACJC,EACAlyE,G,0CAEA,aAAa5O,KAAKE,KAChB,OACA,6BAA+B4gF,EAAiB,2BAChDlyE,GACA,GACA,MAIEmyE,wBAAwBC,G,0CAC5B,aAAahhF,KAAKE,KAChB,SACA,6BAA+B8gF,EAC/B,MACA,GACA,MAIEC,wBAAwBC,G,0CAC5B,aAAalhF,KAAKE,KAChB,SACA,uCAAyCghF,EACzC,MACA,GACA,MAIEC,gCAAgCC,G,0CASpC,aARgBphF,KAAKE,KACnB,OACA,6DACE4D,mBAAmBs9E,GACrB,MACA,GACA,MAKEC,sBACJD,EACAxyE,G,0CAEA,aAAa5O,KAAKE,KAChB,OACA,qDAAuD4D,mBAAmBs9E,GAC1ExyE,GACA,GACA,MAIE0yE,2BAA2BJ,G,0CAC/B,aAAalhF,KAAKE,KAChB,OACA,6BAA+BghF,EAAkB,kCACjD,MACA,GACA,MAIYvP,gB,0CACd,MAAMlQ,QAAqBzhE,KAAKovD,aAAamyB,kBAC7C,GAAoB,MAAhB9f,GAAyC,KAAjBA,EAC1B,OAAOzhE,KAAKwhF,iBAGd,MAAM3+D,QAAiB7iB,KAAKovD,aAAaqyB,cACnC7xD,QAAqB5vB,KAAKovD,aAAasyB,kBAC7C,IAAK1/E,EAAMmS,mBAAmB0O,KAAc7gB,EAAMmS,mBAAmByb,GACnE,OAAO5vB,KAAK2hF,oBAGd,MAAM,IAAI9iF,MAAM,oEAGF8iF,oB,0CACd,MAAM9+D,QAAiB7iB,KAAKovD,aAAaqyB,cACnC7xD,QAAqB5vB,KAAKovD,aAAasyB,kBAC7C,GACE1/E,EAAMmS,mBAAmB0O,IACzB7gB,EAAMmS,mBAAmByb,IACH,MAAtB5vB,KAAK4hF,cAEL,MAAM,IAAI/iF,YAGNmB,KAAK4hF,cAAc/+D,EAAU+M,MAGrB4xD,iB,0CACd,MAAM/f,QAAqBzhE,KAAKovD,aAAamyB,kBAC7C,GAAoB,MAAhB9f,GAAyC,KAAjBA,EAC1B,MAAM,IAAI5iE,MAEZ,MAAMgyB,EAAU,IAAImgD,QAAQ,CAC1B,eAAgB,mDAChBC,OAAQ,mBACR,cAAejxE,KAAKswB,aAEM,MAAxBtwB,KAAKiwE,iBACPp/C,EAAQrpB,IAAI,aAAcxH,KAAKiwE,iBAGjC,MAAM4R,QAAqB7hF,KAAKovD,aAAa0yB,cACvCl2E,QAAiB5L,KAAK8gD,MAC1B,IAAIC,QAAQ/gD,KAAKqP,mBAAmBqc,iBAAmB,iBAAkB,CACvE5d,KAAM9N,KAAKkxE,YAAY,CACrBlhD,WAAY,gBACZD,UAAW8xD,EAAa9xD,UACxB2xC,cAAeD,IAEjBzgB,MAAO,WACP1xB,YAAatvB,KAAKoxE,iBAClBvgD,QAASA,EACTwgD,OAAQ,UAIZ,GAAwB,MAApBzlE,EAAS8H,OAQN,CACL,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,GAAM,GACrD,OAAOnN,QAAQoQ,OAAO+G,GAVK,CAC3B,MAAM07D,QAAqB1lE,EAAS4lE,OAC9BuQ,EAAgB,IAAI3gB,GAAsBkQ,SAC1CtxE,KAAKovD,aAAa4yB,UACtBD,EAAc1gB,YACd0gB,EAActgB,aACd,UAQQvhE,KACZmxE,EACAjyD,EACAtR,EACAm0E,EACAC,EACAnyE,EACAoyE,G,0CAIA,MAAMC,GAFNryE,EAAS/N,EAAMmS,mBAAmBpE,GAAU/P,KAAKqP,mBAAmBgzE,YAActyE,GAEtDqP,EAE5B,GAAI,IAAIhW,IAAIg5E,GAAY34E,OAAS24E,EAC/B,OAAO3jF,QAAQoQ,OAAO,6BAGxB,MAAMgiB,EAAU,IAAImgD,QAAQ,CAC1B,cAAehxE,KAAKswB,aAEM,MAAxBtwB,KAAKiwE,iBACPp/C,EAAQrpB,IAAI,aAAcxH,KAAKiwE,iBAGjC,MAAMqS,EAA2B,CAC/BthC,MAAO,WACP1xB,YAAatvB,KAAKoxE,iBAClBC,OAAQA,GAGV,GAAI4Q,EAAQ,CACV,MAAMnC,QAAmB9/E,KAAK+/E,uBAC9BlvD,EAAQrpB,IAAI,gBAAiB,UAAYs4E,GAE/B,MAARhyE,IACkB,iBAATA,GACTw0E,EAAYx0E,KAAOA,EACnB+iB,EAAQrpB,IAAI,eAAgB,qDACH,iBAATsG,IACZA,aAAgBy0E,SAClBD,EAAYx0E,KAAOA,GAEnB+iB,EAAQrpB,IAAI,eAAgB,mCAC5B86E,EAAYx0E,KAAOR,KAAKC,UAAUO,MAIpCo0E,GACFrxD,EAAQrpB,IAAI,SAAU,oBAEJ,MAAhB26E,GACFA,EAAatxD,GAGfyxD,EAAYzxD,QAAUA,EACtB,MAAMjlB,QAAiB5L,KAAK8gD,MAAM,IAAIC,QAAQqhC,EAAYE,IAE1D,GAAIJ,GAAmC,MAApBt2E,EAAS8H,OAAgB,CAE1C,aAD2B9H,EAAS4lE,OAE/B,GAAwB,MAApB5lE,EAAS8H,OAAgB,CAClC,MAAMkC,QAAc5V,KAAKugF,YAAY30E,GAAU,EAAOq2E,GACtD,OAAOxjF,QAAQoQ,OAAO+G,OAIZ2qE,YACZ30E,EACA42E,EACAP,G,0CAEA,GACEA,IACEO,GAAkC,MAApB52E,EAAS8H,QACH,MAApB9H,EAAS8H,QACW,MAApB9H,EAAS8H,QAGX,aADM1T,KAAKgwE,gBAAe,GACnB,KAGT,IAAIsB,EAAoB,KAOxB,OANItxE,KAAKuxE,eAAe3lE,GACtB0lE,QAAqB1lE,EAAS4lE,OACrBxxE,KAAKyiF,eAAe72E,KAC7B0lE,EAAe,CAAEoR,cAAe92E,EAAS4rB,SAGpC,IAAI/jB,EAAc69D,EAAc1lE,EAAS8H,OAAQ8uE,MAGlDtR,YAAYvwD,GAClB,OAAOxY,OAAOpJ,KAAK4hB,GAChB1b,KAAKqP,GACGxQ,mBAAmBwQ,GAAO,IAAMxQ,mBAAmB6c,EAAOrM,MAElEjP,KAAK,KAGF+rE,iBACN,IAAKpxE,KAAKkwE,aAAelwE,KAAKqP,mBAAmBszE,aAC/C,MAAO,UAKHpD,mBAAmB3vE,EAAckQ,EAAew/D,EAAa79D,GAYnE,OAXa,MAAT3B,IACFlQ,GAAQ,UAAYkQ,GAEX,MAAPw/D,IACF1vE,GAAQA,EAAKnJ,QAAQ,MAAQ,EAAI,IAAM,IACvCmJ,GAAQ,OAAS0vE,GAEN,MAAT79D,IACF7R,GAAQA,EAAKnJ,QAAQ,MAAQ,EAAI,IAAM,IACvCmJ,GAAQ,qBAAuB6R,GAE1B7R,EAGD2hE,eAAe3lE,GACrB,MAAMg3E,EAAah3E,EAASilB,QAAQiC,IAAI,gBACxC,OAAqB,MAAd8vD,GAAsBA,EAAWn8E,QAAQ,qBAAuB,EAGjEg8E,eAAe72E,GACrB,MAAMg3E,EAAah3E,EAASilB,QAAQiC,IAAI,gBACxC,OAAqB,MAAd8vD,GAAsBA,EAAWn8E,QAAQ,SAAW,ID77E/D,SAAYspE,GACV,gBACA,kBACA,oBAHF,CAAYA,KAAAA,GAAmB,K,6gCEYxB,MAAM,GACXxwE,YACUuX,EACAT,GADA,KAAAS,sBAAAA,EACA,KAAAT,WAAAA,EAIJomC,eAAetsB,G,0CACnB,MAAM0yD,QAAkB7iF,KAAK8W,sBAAsBW,KAAK0Y,EAAU,QAC5D1Y,EAAOzV,EAAM8gF,gBAAgBD,GAAWl6E,cACxCo6E,EAAYtrE,EAAK9T,OAAO,EAAG,GAC3Bq/E,EAAavrE,EAAK9T,OAAO,GAEzBiI,QAAiB5L,KAAKqW,WAAWuqE,YAAY,IAAI7/B,QAfjC,wCAe6DgiC,IAE7E55E,SADqByC,EAAS4rB,QACTpwB,MAAM,SAASwuC,MAAMn1B,GACvCA,EAAErZ,MAAM,KAAK,KAAO47E,IAG7B,OAAgB,MAAT75E,EAAgBzF,SAASyF,EAAM/B,MAAM,KAAK,GAAI,IAAM,KAGvD67E,iBAAiB/yD,G,0CACrB,IACE,aAAalwB,KAAKqW,WAAW8pE,cAAcjwD,GAC3C,MAAOtxB,GAEP,GAAyB,MADXA,EACJwV,WACR,MAAO,GAET,MAAM,IAAIvV,WCpCT,IAAkBqkF,GAAeC,GDatC,KCbuBD,GDYb,ICZ4BC,GDYvB,IAAM,iBCXd,CACLl7E,EACAoqC,EACA+wC,KAEA,MAAMC,EAAmCD,EAAW7vD,MAC9C+vD,EAAe,IAAIn8E,IAYzB,MAAO,CACLosB,MAAO,YAAagwD,GAClB,MAAMC,EAZW,CAACn7E,IACpB,IAAIm7E,EAAYF,EAAaxwD,IAAIzqB,GACjC,OAAiB,MAAbm7E,IAGJA,EAAY,IAAIr8E,IAChBm8E,EAAa97E,IAAIa,EAAKm7E,IAHbA,GASWC,CAAazjF,MACzB0jF,EAAkBP,GAAYI,GACpC,IAAII,EAAQH,EAAU1wD,IAAI4wD,GAM1B,OALa,MAATC,IACFA,EAAQ,GACRH,EAAUh8E,IAAIk8E,EAAiBC,IAG1B,IAAIllF,SAAW,CAACC,EAASmQ,KAC9B,MAAM+0E,EAAO,KACX,MAAMC,EAAY,KAChBF,EAAMzoD,OAAOyoD,EAAMl9E,QAAQm9E,GAAO,GAC9BD,EAAMtgF,QAAU6/E,GAClBS,EAAMT,GAAQ,KACY,IAAjBS,EAAMtgF,SACfmgF,EAAU9nD,OAAOgoD,GACM,IAAnBF,EAAUhwD,MACZ8vD,EAAa5nD,OAAO17B,QAI1BqjF,EACGz+E,MAAM5E,KAAMujF,GACZ5kF,MAAMirB,IACLi6D,IACOj6D,KAERgmB,OAAOk0C,IAEN,MADAD,IACMC,KAEPnlF,KAAKD,EAASmQ,IAEnB80E,EAAM7uE,KAAK8uE,GACPD,EAAMtgF,QAAU6/E,IAClBU,W,iIC5DL,MAAMG,GAQXxkF,YAAYqM,GACM,MAAZA,IAGJ5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKI,IAAMwL,EAASxL,IACpBJ,KAAK2M,SAAWf,EAASe,SACzB3M,KAAKsU,IAAM1I,EAAS0I,IACpBtU,KAAKwzB,KAAO5nB,EAAS4nB,KACrBxzB,KAAKwxD,SAAW5lD,EAAS4lD,WCjBtB,MAAMwyB,GAQXzkF,YAAYmL,GACE,MAARA,IAIJ1K,KAAK2yC,eAAiBjoC,EAAKioC,eAC3B3yC,KAAKozC,MAAQ1oC,EAAK0oC,MAClBpzC,KAAKo5B,OAAS1uB,EAAK0uB,OACnBp5B,KAAK4yC,SAAWloC,EAAKkoC,SACrB5yC,KAAK6yC,QAAUnoC,EAAKmoC,QACpB7yC,KAAKlB,KAAO4L,EAAK5L,OCfd,MAAMmlF,GAMX1kF,YAAYqM,GACM,MAAZA,IAGJ5L,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAKuzB,MAAQ3nB,EAAS2nB,MACtBvzB,KAAKm9C,SAAWvxC,EAASuxC,WChBtB,MAAM+mC,GAoBX3kF,YAAYmL,GACE,MAARA,IAIJ1K,KAAK6L,MAAQnB,EAAKmB,MAClB7L,KAAKy0C,UAAY/pC,EAAK+pC,UACtBz0C,KAAK2zC,WAAajpC,EAAKipC,WACvB3zC,KAAK00C,SAAWhqC,EAAKgqC,SACrB10C,KAAK4zC,SAAWlpC,EAAKkpC,SACrB5zC,KAAK6zC,SAAWnpC,EAAKmpC,SACrB7zC,KAAK8zC,SAAWppC,EAAKopC,SACrB9zC,KAAK+zC,KAAOrpC,EAAKqpC,KACjB/zC,KAAKqX,MAAQ3M,EAAK2M,MAClBrX,KAAKg0C,WAAatpC,EAAKspC,WACvBh0C,KAAKi0C,QAAUvpC,EAAKupC,QACpBj0C,KAAKk0C,QAAUxpC,EAAKwpC,QACpBl0C,KAAKgT,MAAQtI,EAAKsI,MAClBhT,KAAKm0C,MAAQzpC,EAAKypC,MAClBn0C,KAAKo0C,IAAM1pC,EAAK0pC,IAChBp0C,KAAKkwB,SAAWxlB,EAAKwlB,SACrBlwB,KAAKq0C,eAAiB3pC,EAAK2pC,eAC3Br0C,KAAKs0C,cAAgB5pC,EAAK4pC,gBCxCvB,MAAM6vC,GAIX5kF,YAAYmL,GAFZ,KAAAvB,MAAsB,KAGR,MAARuB,IAGJ1K,KAAK26B,IAAMjwB,EAAKiwB,IAChB36B,KAAKmJ,MAAQuB,EAAKvB,QCTf,MAAMi7E,GAQX7kF,YAAYmL,GACE,MAARA,IAIJ1K,KAAKkwB,SAAWxlB,EAAKwlB,SACrBlwB,KAAKmwB,SAAWzlB,EAAKylB,SACrBnwB,KAAKk1C,qBAAuBxqC,EAAKwqC,qBACjCl1C,KAAKm1C,KAAOzqC,EAAKyqC,KACjBn1C,KAAKq1C,mBAAqB3qC,EAAK2qC,mBAE3B3qC,EAAK0qC,OACPp1C,KAAKo1C,KAAO1qC,EAAK0qC,KAAKnwC,KAAKywC,GAAM,IAAIyuC,GAAazuC,QCtBjD,MAAM2uC,GAIX9kF,YAAYqM,GACM,MAAZA,IAIJ5L,KAAKmwB,SAAWvkB,EAASukB,SACzBnwB,KAAKw8D,aAAe5wD,EAAS4wD,eCR1B,MAAM8nB,GAGX/kF,YAAYmL,GACE,MAARA,IAIJ1K,KAAKoL,KAAOV,EAAKU,OCCd,MAAMm5E,GAyBXhlF,YAAYqM,EAA2Boc,EAAiB2uB,GACtD,GAAgB,MAAZ/qC,EAAJ,CAoBA,OAhBA5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKg2C,eAAiBpqC,EAASoqC,eAC/Bh2C,KAAKmgC,SAAWv0B,EAASu0B,SACzBngC,KAAKgoB,OAASA,EACdhoB,KAAKo2C,KAAOxqC,EAASwqC,KACrBp2C,KAAKq2C,aAAezqC,EAASyqC,aAC7Br2C,KAAKm2C,oBAAsBvqC,EAASuqC,oBACpCn2C,KAAKk2C,SAAWtqC,EAASsqC,SACzBl2C,KAAKy/B,aAAe7zB,EAAS6zB,aAC7Bz/B,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAKi2C,MAAQrqC,EAASqqC,MACtBj2C,KAAK22C,cAAiC,MAAjBA,EAAwBA,EAAgB/qC,EAAS+qC,cACtE32C,KAAK42C,YAAchrC,EAASgrC,YAC5B52C,KAAK62C,SAAWjrC,EAASirC,SAEjB72C,KAAKoL,MACX,KAAKgmC,GAAW4F,MACdh3C,KAAK85B,MAAQ,IAAIsqD,GAAUx4E,EAASkuB,OACpC,MACF,KAAKsX,GAAW6F,WACdj3C,KAAKu2C,WAAa,IAAI+tC,GAAe14E,EAAS2qC,YAC9C,MACF,KAAKnF,GAAW8F,KACdl3C,KAAKs2C,KAAO,IAAI0tC,GAASp4E,EAAS0qC,MAClC,MACF,KAAKlF,GAAW+F,SACdn3C,KAAKkQ,SAAW,IAAIg0E,GAAat4E,EAASsE,UAMvB,MAAnBtE,EAAS6qC,SACXz2C,KAAKy2C,OAAS7qC,EAAS6qC,OAAOxxC,KAAKmuB,GAAM,IAAI6wD,GAAU7wD,MAE7B,MAAxBxnB,EAAS4qC,cACXx2C,KAAKw2C,YAAc5qC,EAAS4qC,YAAYvxC,KAAK2C,GAAM,IAAIm8E,GAAen8E,MAExC,MAA5BgE,EAAS8qC,kBACX12C,KAAK02C,gBAAkB9qC,EAAS8qC,gBAAgBzxC,KAAKu/E,GAAO,IAAIH,GAAoBG,QC9EnF,MAAMC,GAQXllF,YAAYqI,GAPZ,KAAA5I,GAAa,KACb,KAAAoB,IAAc,KACd,KAAAozB,KAAe,KACf,KAAAg+B,SAAmB,KACnB,KAAA7kD,SAAmB,KACnB,KAAA2H,IAA0B,KAGnB1M,IAIL5H,KAAKhB,GAAK4I,EAAE5I,GACZgB,KAAKI,IAAMwH,EAAExH,IACbJ,KAAKwzB,KAAO5rB,EAAE4rB,KACdxzB,KAAKwxD,SAAW5pD,EAAE4pD,UAGhBC,eACF,IACE,GAAiB,MAAbzxD,KAAKwzB,KACP,OAAO9vB,SAAS1D,KAAKwzB,KAAM,MAE7B,UAGF,OAAO,GC5BJ,MAAMkxD,GAYXnlF,YAAY+U,EAAkBiE,GAC5B,GAAW,MAAPjE,EACF,MAAM,IAAIzV,MAAM,oBAGlB,GAAe,MAAX0Z,EACF,GAAuB,KAAnBjE,EAAInQ,WACNoU,EAAUP,GAAea,kBACpB,IAAuB,KAAnBvE,EAAInQ,WAGb,MAAM,IAAItF,MAAM,gCAFhB0Z,EAAUP,GAAec,yBAS7B,GAHA9Y,KAAKsU,IAAMA,EACXtU,KAAKuY,QAAUA,EAEXA,IAAYP,GAAea,eAAoC,KAAnBvE,EAAInQ,WAClDnE,KAAK4a,OAAStG,EACdtU,KAAK2kF,OAAS,UACT,GAAIpsE,IAAYP,GAAeY,0BAA+C,KAAnBtE,EAAInQ,WACpEnE,KAAK4a,OAAStG,EAAIlP,MAAM,EAAG,IAC3BpF,KAAK2kF,OAASrwE,EAAIlP,MAAM,GAAI,QACvB,IAAImT,IAAYP,GAAec,0BAA+C,KAAnBxE,EAAInQ,WAIpE,MAAM,IAAItF,MAAM,mCAHhBmB,KAAK4a,OAAStG,EAAIlP,MAAM,EAAG,IAC3BpF,KAAK2kF,OAASrwE,EAAIlP,MAAM,GAAI,IAKd,MAAZpF,KAAKsU,MACPtU,KAAK4kF,OAAS5iF,EAAMwC,gBAAgBxE,KAAKsU,MAExB,MAAftU,KAAK4a,SACP5a,KAAK6kF,UAAY7iF,EAAMwC,gBAAgBxE,KAAK4a,SAE3B,MAAf5a,KAAK2kF,SACP3kF,KAAK8kF,UAAY9iF,EAAMwC,gBAAgBxE,KAAK2kF,U,2SC1C3C,MAAMI,WAAmBl8D,GAQ9BtpB,YAAY8I,EAAsB2gB,GAA4B,GAC5DlW,QACW,MAAPzK,IAIJrI,KAAKwzB,KAAOnrB,EAAImrB,KAChBxzB,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJoB,IAAK,KACLoxD,SAAU,KACV7kD,SAAU,KACV2H,IAAK,MAEP0U,EACA,CAAC,KAAM,MAAO,cAIZ/P,QAAQC,EAAe0B,G,0CAC3B,MAAMosC,QAAahnD,KAAKqpB,WACtB,IAAIo7D,GAAezkF,MACnB,CACE2M,SAAU,MAEZuM,EACA0B,GAGF,GAAgB,MAAZ5a,KAAKsU,IAAa,CACpB,IAAI8E,EACJ,MAAMC,EAAoBrX,EAAMY,OAAN,0BAC1B,IAAIyW,EAGF,MAAM,IAAIxa,MAAM,qDAFhBua,EAAgBC,EAAiBC,mBAKnC,IACE,MAAM0rE,QAAe5rE,EAAcG,UAAUL,GACvC+rE,QAAiB7rE,EAAc8rE,eAAellF,KAAKsU,IAAK0wE,MAAAA,EAAAA,EAAUpqE,GACxEosC,EAAK1yC,IAAM,IAAIowE,GAAmBO,GAClC,MAAOrmF,KAKX,OAAOooD,KAGTm+B,mBACE,MAAMv9E,EAAI,IAAIm8E,GAcd,OAbAn8E,EAAE4rB,KAAOxzB,KAAKwzB,KACdxzB,KAAKmpB,eACHnpB,KACA4H,EACA,CACE5I,GAAI,KACJoB,IAAK,KACLoxD,SAAU,KACV7kD,SAAU,KACV2H,IAAK,MAEP,CAAC,KAAM,MAAO,aAET1M,GChFJ,MAAM,WAAaihB,GAQxBtpB,YAAY8I,EAAgB2gB,GAA4B,GACtDlW,QACW,MAAPzK,GAIJrI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACEsqC,eAAgB,KAChBS,MAAO,KACPha,OAAQ,KACRwZ,SAAU,KACVC,QAAS,KACT/zC,KAAM,MAERkqB,EACA,IAIJ/P,QAAQC,EAAe0B,GACrB,OAAO5a,KAAKqpB,WACV,IAAIqpB,GAAS1yC,MACb,CACE2yC,eAAgB,KAChBS,MAAO,KACPha,OAAQ,KACRwZ,SAAU,KACVC,QAAS,KACT/zC,KAAM,MAERoa,EACA0B,GAIJwqE,aACE,MAAMx/E,EAAI,IAAIo+E,GASd,OARAhkF,KAAKmpB,eAAenpB,KAAM4F,EAAG,CAC3B+sC,eAAgB,KAChBS,MAAO,KACPha,OAAQ,KACRwZ,SAAU,KACVC,QAAS,KACT/zC,KAAM,OAED8G,GCrDJ,MAAM,WAAcijB,GAMzBtpB,YAAY8I,EAAiB2gB,GAA4B,GACvDlW,QACW,MAAPzK,IAIJrI,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAKm9C,SAAW90C,EAAI80C,SACpBn9C,KAAK8oB,iBACH9oB,KACAqI,EACA,CACE/F,KAAM,KACNixB,MAAO,MAETvK,EACA,KAIJ/P,QAAQC,EAAe0B,GACrB,OAAO5a,KAAKqpB,WACV,IAAI2zB,GAAUh9C,MACd,CACEsC,KAAM,KACNixB,MAAO,MAETra,EACA0B,GAIJyqE,cACE,MAAMjyD,EAAI,IAAI6wD,GAYd,OAXAjkF,KAAKmpB,eACHnpB,KACAozB,EACA,CACE9wB,KAAM,KACNixB,MAAO,KACPnoB,KAAM,KACN+xC,SAAU,MAEZ,CAAC,OAAQ,aAEJ/pB,GCtDJ,MAAM,WAAiBvK,GAoB5BtpB,YAAY8I,EAAoB2gB,GAA4B,GAC1DlW,QACW,MAAPzK,GAIJrI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACEwD,MAAO,KACP4oC,UAAW,KACXd,WAAY,KACZe,SAAU,KACVd,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,KAAM,KACN18B,MAAO,KACP28B,WAAY,KACZC,QAAS,KACTC,QAAS,KACTlhC,MAAO,KACPmhC,MAAO,KACPC,IAAK,KACLlkB,SAAU,KACVmkB,eAAgB,KAChBC,cAAe,MAEjBtrB,EACA,IAIJ/P,QAAQC,EAAe0B,GACrB,OAAO5a,KAAKqpB,WACV,IAAIqqB,GAAa1zC,MACjB,CACE6L,MAAO,KACP4oC,UAAW,KACXd,WAAY,KACZe,SAAU,KACVd,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,KAAM,KACN18B,MAAO,KACP28B,WAAY,KACZC,QAAS,KACTC,QAAS,KACTlhC,MAAO,KACPmhC,MAAO,KACPC,IAAK,KACLlkB,SAAU,KACVmkB,eAAgB,KAChBC,cAAe,MAEjBp7B,EACA0B,GAIJ0qE,iBACE,MAAMhiF,EAAI,IAAI4gF,GAqBd,OApBAlkF,KAAKmpB,eAAenpB,KAAMsD,EAAG,CAC3BuI,MAAO,KACP4oC,UAAW,KACXd,WAAY,KACZe,SAAU,KACVd,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,KAAM,KACN18B,MAAO,KACP28B,WAAY,KACZC,QAAS,KACTC,QAAS,KACTlhC,MAAO,KACPmhC,MAAO,KACPC,IAAK,KACLlkB,SAAU,KACVmkB,eAAgB,KAChBC,cAAe,OAEVhxC,GCtGJ,MAAM,WAAiBulB,GAI5BtpB,YAAY8I,EAAoB2gB,GAA4B,GAC1DlW,QACW,MAAPzK,IAIJrI,KAAKmJ,MAAQd,EAAIc,MACjBnJ,KAAK8oB,iBACH9oB,KACAqI,EACA,CACEsyB,IAAK,MAEP3R,EACA,KAIJ/P,QAAQC,EAAe0B,GACrB,OAAO5a,KAAKqpB,WACV,IAAIwuB,GAAa73C,MACjB,CACE26B,IAAK,MAEPzhB,EACA0B,GAIJ2qE,iBACE,MAAM7vC,EAAI,IAAIyuC,GASd,OARAnkF,KAAKmpB,eACHnpB,KACA01C,EACA,CACE/a,IAAK,MAEP,CAAC,UAEI+a,G,2SC3CJ,MAAM,WAAc7sB,GAQzBtpB,YAAY8I,EAAiB2gB,GAA4B,GACvDlW,QACW,MAAPzK,IAIJrI,KAAKk1C,qBACyB,MAA5B7sC,EAAI6sC,qBAA+B,IAAInoC,KAAK1E,EAAI6sC,sBAAwB,KAC1El1C,KAAKq1C,mBAAqBhtC,EAAIgtC,mBAC9Br1C,KAAK8oB,iBACH9oB,KACAqI,EACA,CACE6nB,SAAU,KACVC,SAAU,KACVglB,KAAM,MAERnsB,EACA,IAGE3gB,EAAI+sC,OACNp1C,KAAKo1C,KAAO,GACZ/sC,EAAI+sC,KAAK/tC,SAASquC,IAChB11C,KAAKo1C,KAAKtgC,KAAK,IAAI,GAAS4gC,EAAG1sB,SAK/B/P,QAAQC,EAAe0B,G,0CAC3B,MAAMosC,QAAahnD,KAAKqpB,WACtB,IAAI2rB,GAAUh1C,MACd,CACEkwB,SAAU,KACVC,SAAU,KACVglB,KAAM,MAERj8B,EACA0B,GAGF,GAAiB,MAAb5a,KAAKo1C,KAAc,CACrB4R,EAAK5R,KAAO,GACZ,IAAK,IAAI9xC,EAAI,EAAGA,EAAItD,KAAKo1C,KAAK/xC,OAAQC,IAAK,CACzC,MAAMq3B,QAAY36B,KAAKo1C,KAAK9xC,GAAG2V,QAAQC,EAAO0B,GAC9CosC,EAAK5R,KAAKtgC,KAAK6lB,IAInB,OAAOqsB,KAGTw+B,cACE,MAAMvwC,EAAI,IAAImvC,GAiBd,OAhBAnvC,EAAEC,qBAC6B,MAA7Bl1C,KAAKk1C,qBAA+Bl1C,KAAKk1C,qBAAqBmiB,cAAgB,KAChFpiB,EAAEI,mBAAqBr1C,KAAKq1C,mBAC5Br1C,KAAKmpB,eAAenpB,KAAMi1C,EAAG,CAC3B/kB,SAAU,KACVC,SAAU,KACVglB,KAAM,OAGS,MAAbn1C,KAAKo1C,MAAgBp1C,KAAKo1C,KAAK/xC,OAAS,IAC1C4xC,EAAEG,KAAO,GACTp1C,KAAKo1C,KAAK/tC,SAASquC,IACjBT,EAAEG,KAAKtgC,KAAK4gC,EAAE6vC,sBAIXtwC,GCpFJ,MAAMwwC,GAIXlmF,YAAYilF,GAHZ,KAAAr0D,SAAmB,KACnB,KAAAqsC,aAAqB,KAGdgoB,IAILxkF,KAAKw8D,aAAegoB,EAAGhoB,eCLpB,MAAM5f,WAAiB/zB,GAI5BtpB,YAAY8I,EAA2B2gB,GAA4B,GACjElW,QACW,MAAPzK,IAIJrI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACE8nB,SAAU,MAEZnH,GAEFhpB,KAAKw8D,aAAe,IAAIzvD,KAAK1E,EAAIm0D,eAGnCvjD,QAAQC,EAAe0B,GACrB,OAAO5a,KAAKqpB,WACV,IAAIo8D,GAAoBzlF,MACxB,CACEmwB,SAAU,MAEZjX,EACA0B,GAIJ8qE,wBACE,MAAMlB,EAAK,IAAIH,GAKf,OAJAG,EAAGhoB,aAAex8D,KAAKw8D,aAAanF,cACpCr3D,KAAKmpB,eAAenpB,KAAMwkF,EAAI,CAC5Br0D,SAAU,OAELq0D,GCrCJ,MAAM,WAAmB37D,GAG9BtpB,YAAY8I,EAAsB2gB,GAA4B,GAC5DlW,QACW,MAAPzK,IAIJrI,KAAKoL,KAAO/C,EAAI+C,MAGlB6N,QAAQC,EAAe0B,GACrB,OAAOnc,QAAQC,QAAQ,IAAIm3C,GAAe71C,OAG5C2lF,mBACE,MAAM7vC,EAAI,IAAIwuC,GAEd,OADAxuC,EAAE1qC,KAAOpL,KAAKoL,KACP0qC,G,2SCVJ,MAAM,WAAejtB,GAwB1BtpB,YAAY8I,EAAkB2gB,GAA4B,EAAO+tB,EAAiB,MAEhF,GADAjkC,QACW,MAAPzK,EAAJ,CAkCA,OA9BArI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJgpB,OAAQ,KACRguB,eAAgB,KAChB7V,SAAU,KACV79B,KAAM,KACN2zC,MAAO,MAETjtB,EACA,CAAC,KAAM,SAAU,iBAAkB,aAGrChpB,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAKk2C,SAAW7tC,EAAI6tC,SACpBl2C,KAAKm2C,oBAAsB9tC,EAAI8tC,oBAC/Bn2C,KAAKo2C,KAAO/tC,EAAI+tC,KACQ,MAApB/tC,EAAIguC,aACNr2C,KAAKq2C,aAAehuC,EAAIguC,aAExBr2C,KAAKq2C,cAAe,EAEtBr2C,KAAKy/B,aAAmC,MAApBp3B,EAAIo3B,aAAuB,IAAI1yB,KAAK1E,EAAIo3B,cAAgB,KAC5Ez/B,KAAK22C,cAAgBtuC,EAAIsuC,cACzB32C,KAAK+2C,UAAYA,EACjB/2C,KAAK42C,YAAiC,MAAnBvuC,EAAIuuC,YAAsB,IAAI7pC,KAAK1E,EAAIuuC,aAAe,KACzE52C,KAAK62C,SAAWxuC,EAAIwuC,SAEZ72C,KAAKoL,MACX,KAAKgmC,GAAW4F,MACdh3C,KAAK85B,MAAQ,IAAI,GAAMzxB,EAAIyxB,MAAO9Q,GAClC,MACF,KAAKooB,GAAW6F,WACdj3C,KAAKu2C,WAAa,IAAI,GAAWluC,EAAIkuC,WAAYvtB,GACjD,MACF,KAAKooB,GAAW8F,KACdl3C,KAAKs2C,KAAO,IAAI,GAAKjuC,EAAIiuC,KAAMttB,GAC/B,MACF,KAAKooB,GAAW+F,SACdn3C,KAAKkQ,SAAW,IAAI,GAAS7H,EAAI6H,SAAU8Y,GAMxB,MAAnB3gB,EAAImuC,YACNx2C,KAAKw2C,YAAcnuC,EAAImuC,YAAYvxC,KAAK2C,GAAM,IAAIm9E,GAAWn9E,EAAGohB,KAEhEhpB,KAAKw2C,YAAc,KAGH,MAAdnuC,EAAIouC,OACNz2C,KAAKy2C,OAASpuC,EAAIouC,OAAOxxC,KAAKmuB,GAAM,IAAI,GAAMA,EAAGpK,KAEjDhpB,KAAKy2C,OAAS,KAGW,MAAvBpuC,EAAIquC,gBACN12C,KAAK02C,gBAAkBruC,EAAIquC,gBAAgBzxC,KAAKu/E,GAAO,IAAI5nC,GAAS4nC,EAAIx7D,KAExEhpB,KAAK02C,gBAAkB,MAIrBz9B,QAAQ2B,G,0CACZ,MAAMgrE,EAAQ,IAAI7vC,GAAW/1C,MAY7B,aAVMA,KAAKqpB,WACTu8D,EACA,CACEtjF,KAAM,KACN2zC,MAAO,MAETj2C,KAAKg2C,eACLp7B,GAGM5a,KAAKoL,MACX,KAAKgmC,GAAW4F,MACd4uC,EAAM9rD,YAAc95B,KAAK85B,MAAM7gB,QAAQjZ,KAAKg2C,eAAgBp7B,GAC5D,MACF,KAAKw2B,GAAW6F,WACd2uC,EAAMrvC,iBAAmBv2C,KAAKu2C,WAAWt9B,QAAQjZ,KAAKg2C,eAAgBp7B,GACtE,MACF,KAAKw2B,GAAW8F,KACd0uC,EAAMtvC,WAAat2C,KAAKs2C,KAAKr9B,QAAQjZ,KAAKg2C,eAAgBp7B,GAC1D,MACF,KAAKw2B,GAAW+F,SACdyuC,EAAM11E,eAAiBlQ,KAAKkQ,SAAS+I,QAAQjZ,KAAKg2C,eAAgBp7B,GAMtE,MAAM1B,EAAQlZ,KAAKg2C,eAEnB,GAAwB,MAApBh2C,KAAKw2C,aAAuBx2C,KAAKw2C,YAAYnzC,OAAS,EAAG,CAC3D,MAAMmzC,EAAqB,SACrBx2C,KAAKw2C,YAAYqvC,QAAO,CAACC,EAASrlC,IAC/BqlC,EACJnnF,MAAK,IACG8hD,EAAWxnC,QAAQC,EAAO0B,KAElCjc,MAAMonF,IACLvvC,EAAY1hC,KAAKixE,OAEpBtnF,QAAQC,WACXknF,EAAMpvC,YAAcA,EAGtB,GAAmB,MAAfx2C,KAAKy2C,QAAkBz2C,KAAKy2C,OAAOpzC,OAAS,EAAG,CACjD,MAAMozC,EAAgB,SAChBz2C,KAAKy2C,OAAOovC,QAAO,CAACC,EAAS3nC,IAC1B2nC,EACJnnF,MAAK,IACGw/C,EAAMllC,QAAQC,EAAO0B,KAE7Bjc,MAAMqnF,IACLvvC,EAAO3hC,KAAKkxE,OAEfvnF,QAAQC,WACXknF,EAAMnvC,OAASA,EAGjB,GAA4B,MAAxBz2C,KAAK02C,iBAA2B12C,KAAK02C,gBAAgBrzC,OAAS,EAAG,CACnE,MAAMqzC,EAAyB,SACzB12C,KAAK02C,gBAAgBmvC,QAAO,CAACC,EAAStB,IACnCsB,EACJnnF,MAAK,IACG6lF,EAAGvrE,QAAQC,EAAO0B,KAE1Bjc,MAAMsnF,IACLvvC,EAAgB5hC,KAAKmxE,OAExBxnF,QAAQC,WACXknF,EAAMlvC,gBAAkBA,EAG1B,OAAOkvC,KAGTM,aAAal+D,GACX,MAAMpiB,EAAI,IAAI2+E,GAoBd,OAnBA3+E,EAAE5G,GAAKgB,KAAKhB,GACZ4G,EAAEowC,eAAiBh2C,KAAKg2C,eACxBpwC,EAAEu6B,SAAWngC,KAAKmgC,SAClBv6B,EAAEoiB,OAAgC,MAAvBhoB,KAAKg2C,eAAyBhuB,EAAS,KAClDpiB,EAAEwwC,KAAOp2C,KAAKo2C,KACdxwC,EAAEywC,aAAer2C,KAAKq2C,aACtBzwC,EAAEuwC,oBAAsBn2C,KAAKm2C,oBAC7BvwC,EAAEswC,SAAWl2C,KAAKk2C,SAClBtwC,EAAE65B,aAAoC,MAArBz/B,KAAKy/B,aAAuBz/B,KAAKy/B,aAAa43B,cAAgB,KAC/EzxD,EAAEwF,KAAOpL,KAAKoL,KACdxF,EAAE+wC,cAAgB32C,KAAK22C,cACvB/wC,EAAEgxC,YAAkC,MAApB52C,KAAK42C,YAAsB52C,KAAK42C,YAAYygB,cAAgB,KAC5EzxD,EAAEixC,SAAW72C,KAAK62C,SAElB72C,KAAKmpB,eAAenpB,KAAM4F,EAAG,CAC3BtD,KAAM,KACN2zC,MAAO,OAGDrwC,EAAEwF,MACR,KAAKgmC,GAAW4F,MACdpxC,EAAEk0B,MAAQ95B,KAAK85B,MAAM0rD,cACrB,MACF,KAAKp0C,GAAW6F,WACdrxC,EAAE2wC,WAAav2C,KAAKu2C,WAAWovC,mBAC/B,MACF,KAAKv0C,GAAW8F,KACdtxC,EAAE0wC,KAAOt2C,KAAKs2C,KAAK8uC,aACnB,MACF,KAAKh0C,GAAW+F,SACdvxC,EAAEsK,SAAWlQ,KAAKkQ,SAASo1E,iBAe/B,OATmB,MAAftlF,KAAKy2C,SACP7wC,EAAE6wC,OAASz2C,KAAKy2C,OAAOxxC,KAAKmuB,GAAMA,EAAEiyD,iBAEd,MAApBrlF,KAAKw2C,cACP5wC,EAAE4wC,YAAcx2C,KAAKw2C,YAAYvxC,KAAK2C,GAAMA,EAAEu9E,sBAEpB,MAAxBnlF,KAAK02C,kBACP9wC,EAAE8wC,gBAAkB12C,KAAK02C,gBAAgBzxC,KAAKu/E,GAAOA,EAAGkB,2BAEnD9/E,GC9OJ,MAAMugF,GAIX5mF,YAAY6mF,EAAepwC,GACzBh2C,KAAKomF,IAAa,MAAPA,EAAc,GAAKA,EAC9BpmF,KAAKg2C,eAAiBA,GCNnB,MAAMqwC,GAIX9mF,YAAY6mF,EAAejmD,GACzBngC,KAAKomF,IAAa,MAAPA,EAAc,GAAKA,EAC9BpmF,KAAKmgC,SAAWA,GCNb,MAAMmmD,GAGX/mF,YAAY6mF,GACVpmF,KAAKomF,IAAa,MAAPA,EAAc,GAAKA,GCJ3B,MAAMG,ICeN,MAAMC,GAmBXjnF,YAAYs6B,GAUV,OATA75B,KAAKoL,KAAOyuB,EAAOzuB,KACnBpL,KAAKmgC,SAAWtG,EAAOsG,SACvBngC,KAAKg2C,eAAiBnc,EAAOmc,eAC7Bh2C,KAAKsC,KAAOu3B,EAAOv3B,KAAOu3B,EAAOv3B,KAAKkW,gBAAkB,KACxDxY,KAAKi2C,MAAQpc,EAAOoc,MAAQpc,EAAOoc,MAAMz9B,gBAAkB,KAC3DxY,KAAKk2C,SAAWrc,EAAOqc,SACvBl2C,KAAKymF,sBAAwB5sD,EAAO4F,aACpCz/B,KAAK62C,SAAWhd,EAAOgd,SAEf72C,KAAKoL,MACX,KAAKgmC,GAAW4F,MACdh3C,KAAK85B,MAAQ,IAAI+iC,GACjB78D,KAAK85B,MAAMsb,KAAO,KAClBp1C,KAAK85B,MAAM5J,SAAW2J,EAAOC,MAAM5J,SAAW2J,EAAOC,MAAM5J,SAAS1X,gBAAkB,KACtFxY,KAAK85B,MAAM3J,SAAW0J,EAAOC,MAAM3J,SAAW0J,EAAOC,MAAM3J,SAAS3X,gBAAkB,KACtFxY,KAAK85B,MAAMob,qBAC4B,MAArCrb,EAAOC,MAAMob,qBACTrb,EAAOC,MAAMob,qBAAqBmiB,cAClC,KACNr3D,KAAK85B,MAAMqb,KAAOtb,EAAOC,MAAMqb,KAAOtb,EAAOC,MAAMqb,KAAK38B,gBAAkB,KAC1ExY,KAAK85B,MAAMub,mBAAqBxb,EAAOC,MAAMub,mBAEpB,MAArBxb,EAAOC,MAAMsb,OACfp1C,KAAK85B,MAAMsb,KAAOvb,EAAOC,MAAMsb,KAAKnwC,KAAKywC,IACvC,MAAM/a,EAAM,IAAIiiC,GAGhB,OAFAjiC,EAAIA,IAAe,MAAT+a,EAAE/a,IAAc+a,EAAE/a,IAAIniB,gBAAkB,KAClDmiB,EAAIxxB,MAAmB,MAAXusC,EAAEvsC,MAAgBusC,EAAEvsC,MAAQ,KACjCwxB,MAGX,MACF,KAAKyW,GAAW6F,WACdj3C,KAAKu2C,WAAa,IAAIumB,GACtB98D,KAAKu2C,WAAWnrC,KAAOyuB,EAAO0c,WAAWnrC,KACzC,MACF,KAAKgmC,GAAW8F,KACdl3C,KAAKs2C,KAAO,IAAImmB,GAChBz8D,KAAKs2C,KAAK3D,eACsB,MAA9B9Y,EAAOyc,KAAK3D,eAAyB9Y,EAAOyc,KAAK3D,eAAen6B,gBAAkB,KACpFxY,KAAKs2C,KAAKlD,MAA6B,MAArBvZ,EAAOyc,KAAKlD,MAAgBvZ,EAAOyc,KAAKlD,MAAM56B,gBAAkB,KAClFxY,KAAKs2C,KAAKld,OAA+B,MAAtBS,EAAOyc,KAAKld,OAAiBS,EAAOyc,KAAKld,OAAO5gB,gBAAkB,KACrFxY,KAAKs2C,KAAK1D,SACgB,MAAxB/Y,EAAOyc,KAAK1D,SAAmB/Y,EAAOyc,KAAK1D,SAASp6B,gBAAkB,KACxExY,KAAKs2C,KAAKzD,QACe,MAAvBhZ,EAAOyc,KAAKzD,QAAkBhZ,EAAOyc,KAAKzD,QAAQr6B,gBAAkB,KACtExY,KAAKs2C,KAAKx3C,KAA2B,MAApB+6B,EAAOyc,KAAKx3C,KAAe+6B,EAAOyc,KAAKx3C,KAAK0Z,gBAAkB,KAC/E,MACF,KAAK44B,GAAW+F,SACdn3C,KAAKkQ,SAAW,IAAIysD,GACpB38D,KAAKkQ,SAASrE,MACa,MAAzBguB,EAAO3pB,SAASrE,MAAgBguB,EAAO3pB,SAASrE,MAAM2M,gBAAkB,KAC1ExY,KAAKkQ,SAASukC,UACiB,MAA7B5a,EAAO3pB,SAASukC,UAAoB5a,EAAO3pB,SAASukC,UAAUj8B,gBAAkB,KAClFxY,KAAKkQ,SAASyjC,WACkB,MAA9B9Z,EAAO3pB,SAASyjC,WAAqB9Z,EAAO3pB,SAASyjC,WAAWn7B,gBAAkB,KACpFxY,KAAKkQ,SAASwkC,SACgB,MAA5B7a,EAAO3pB,SAASwkC,SAAmB7a,EAAO3pB,SAASwkC,SAASl8B,gBAAkB,KAChFxY,KAAKkQ,SAAS0jC,SACgB,MAA5B/Z,EAAO3pB,SAAS0jC,SAAmB/Z,EAAO3pB,SAAS0jC,SAASp7B,gBAAkB,KAChFxY,KAAKkQ,SAAS2jC,SACgB,MAA5Bha,EAAO3pB,SAAS2jC,SAAmBha,EAAO3pB,SAAS2jC,SAASr7B,gBAAkB,KAChFxY,KAAKkQ,SAAS4jC,SACgB,MAA5Bja,EAAO3pB,SAAS4jC,SAAmBja,EAAO3pB,SAAS4jC,SAASt7B,gBAAkB,KAChFxY,KAAKkQ,SAAS6jC,KACY,MAAxBla,EAAO3pB,SAAS6jC,KAAela,EAAO3pB,SAAS6jC,KAAKv7B,gBAAkB,KACxExY,KAAKkQ,SAASmH,MACa,MAAzBwiB,EAAO3pB,SAASmH,MAAgBwiB,EAAO3pB,SAASmH,MAAMmB,gBAAkB,KAC1ExY,KAAKkQ,SAAS8jC,WACkB,MAA9Bna,EAAO3pB,SAAS8jC,WAAqBna,EAAO3pB,SAAS8jC,WAAWx7B,gBAAkB,KACpFxY,KAAKkQ,SAAS+jC,QACe,MAA3Bpa,EAAO3pB,SAAS+jC,QAAkBpa,EAAO3pB,SAAS+jC,QAAQz7B,gBAAkB,KAC9ExY,KAAKkQ,SAASgkC,QACe,MAA3Bra,EAAO3pB,SAASgkC,QAAkBra,EAAO3pB,SAASgkC,QAAQ17B,gBAAkB,KAC9ExY,KAAKkQ,SAAS8C,MACa,MAAzB6mB,EAAO3pB,SAAS8C,MAAgB6mB,EAAO3pB,SAAS8C,MAAMwF,gBAAkB,KAC1ExY,KAAKkQ,SAASikC,MACa,MAAzBta,EAAO3pB,SAASikC,MAAgBta,EAAO3pB,SAASikC,MAAM37B,gBAAkB,KAC1ExY,KAAKkQ,SAASkkC,IACW,MAAvBva,EAAO3pB,SAASkkC,IAAcva,EAAO3pB,SAASkkC,IAAI57B,gBAAkB,KACtExY,KAAKkQ,SAASggB,SACgB,MAA5B2J,EAAO3pB,SAASggB,SAAmB2J,EAAO3pB,SAASggB,SAAS1X,gBAAkB,KAChFxY,KAAKkQ,SAASmkC,eACsB,MAAlCxa,EAAO3pB,SAASmkC,eACZxa,EAAO3pB,SAASmkC,eAAe77B,gBAC/B,KACNxY,KAAKkQ,SAASokC,cACqB,MAAjCza,EAAO3pB,SAASokC,cACZza,EAAO3pB,SAASokC,cAAc97B,gBAC9B,KAMW,MAAjBqhB,EAAO4c,SACTz2C,KAAKy2C,OAAS5c,EAAO4c,OAAOxxC,KAAKmuB,IAC/B,MAAM+qB,EAAQ,IAAIue,GAKlB,OAJAve,EAAM/yC,KAAOgoB,EAAEhoB,KACf+yC,EAAM77C,KAAO8wB,EAAE9wB,KAAO8wB,EAAE9wB,KAAKkW,gBAAkB,KAC/C2lC,EAAM5qB,MAAQH,EAAEG,MAAQH,EAAEG,MAAM/a,gBAAkB,KAClD2lC,EAAMhB,SAAW/pB,EAAE+pB,SACZgB,MAImB,MAA1BtkB,EAAO6c,kBACT12C,KAAK02C,gBAAkB,GACvB7c,EAAO6c,gBAAgBrvC,SAASm9E,IAC9BxkF,KAAK02C,gBAAgB5hC,KAAK,CACxB0nD,aAAcgoB,EAAGhoB,aACjBrsC,SAAUq0D,EAAGr0D,SAAWq0D,EAAGr0D,SAAS3X,gBAAkB,WAKlC,MAAtBqhB,EAAO2c,cACTx2C,KAAKw2C,YAAc,GACnBx2C,KAAK0mF,aAAe,GACpB7sD,EAAO2c,YAAYnvC,SAASo5C,IAC1B,MAAM9zC,EAAW8zC,EAAW9zC,SAAW8zC,EAAW9zC,SAAS6L,gBAAkB,KAC7ExY,KAAKw2C,YAAYiK,EAAWzhD,IAAM2N,EAClC,MAAMg6E,EAAoB,IAAIJ,GAC9BI,EAAkBh6E,SAAWA,EACP,MAAlB8zC,EAAWnsC,MACbqyE,EAAkBryE,IAAMmsC,EAAWnsC,IAAIkE,iBAEzCxY,KAAK0mF,aAAajmC,EAAWzhD,IAAM2nF,OC7JpC,MAAMC,WAA4BJ,GAGvCjnF,YAAYs6B,GACV/mB,MAAM+mB,GACN75B,KAAKhB,GAAK66B,EAAO76B,ICLd,MAAM6nF,GAIXtnF,YAAYguB,EAAmBopB,GACd,MAAXppB,IACFvtB,KAAKutB,QAAU,GACfA,EAAQlmB,SAASzB,IACf5F,KAAKutB,QAAQzY,KAAK,IAAI8xE,GAAoBhhF,QAG9C5F,KAAK22C,cAAgBA,GCflB,MAAMmwC,GAGXvnF,YAAYo3C,GACV32C,KAAK22C,cAAiC,MAAjBA,EAAwB,GAAKA,GCA/C,MAAMowC,GAIXxnF,YAAYs6B,GACV75B,KAAK65B,OAAS,IAAI2sD,GAAc3sD,GAChC75B,KAAK22C,cAAgB9c,EAAO8c,eCNzB,MAAMqwC,GAIXznF,YAAYs6B,GACV75B,KAAK65B,OAAS,IAAI2sD,GAAc3sD,GAChC75B,KAAK22C,cAAgB9c,EAAO8c,eCNzB,MAAMswC,GAIX1nF,YAA6B2nF,GAAA,KAAAA,WAAAA,EAHZ,KAAAC,mBAA2C,IAAIhgF,IAC/C,KAAAigF,SAA6B,IAAIjgF,IAIlDkgF,SAASjnF,GACP,OAAOJ,KAAKmnF,mBAAmBvxD,IAAIx1B,GAGrCknF,WAAWlnF,EAAamtB,GACtBA,EAAQ4D,KAAKnxB,KAAKknF,YAClBlnF,KAAKmnF,mBAAmB3/E,IAAIpH,EAAK,IAAImnF,GAAQh6D,IAC7CvtB,KAAKwnF,WAAWpnF,GAGlBqnF,YAAYrnF,GAEV,OADAJ,KAAKwnF,WAAWpnF,GACTJ,KAAKqnF,SAASjnF,GAAOJ,KAAKmnF,mBAAmBr0D,IAAI1yB,GAAKqnF,cAAgB,KAG/EC,gBAAgBtnF,GACd,OAAOJ,KAAKqnF,SAASjnF,GAAOJ,KAAKmnF,mBAAmBr0D,IAAI1yB,GAAKsnF,kBAAoB,KAGnFC,QAAQvnF,GAEN,OADAJ,KAAKwnF,WAAWpnF,GACTJ,KAAKqnF,SAASjnF,GAAOJ,KAAKmnF,mBAAmBr0D,IAAI1yB,GAAKunF,UAAY,KAG3EC,oBAAoBxnF,GACdJ,KAAKqnF,SAASjnF,IAChBJ,KAAKmnF,mBAAmBr0D,IAAI1yB,GAAKwnF,sBAIrC9wD,QACE92B,KAAKmnF,mBAAmBrwD,QACxB92B,KAAKonF,SAAStwD,QAGR0wD,WAAWpnF,GACjBmlB,aAAavlB,KAAKonF,SAASt0D,IAAI1yB,IAC/BJ,KAAKonF,SAAS5/E,IACZpH,EACAse,YAAW,KACT1e,KAAKmnF,mBAAmBzrD,OAAOt7B,GAC/BJ,KAAKonF,SAAS1rD,OAAOt7B,KAjDZ,OAuDjB,MAAMmnF,GAGJhoF,YAA6BguB,GAAA,KAAAA,QAAAA,EAF7B,KAAAs6D,eAAiB,EAIjBJ,cAEE,OADAznF,KAAK6nF,cAAgB/hF,KAAK8mC,IAAI5sC,KAAK6nF,cAAe,GAC3C7nF,KAAKutB,QAAQvtB,KAAK6nF,eAG3BH,kBAKE,OAJoB1nF,KAAKutB,QAAQtsB,QAAQ44B,IAAU,MAAC,OAAgB,QAAhB,EAAAA,EAAOkd,iBAAS,eAAE+wC,gBACpC32D,MAChC,CAAChsB,EAAG4iF,IAAMA,EAAEhxC,UAAU+wC,aAAaE,UAAY7iF,EAAE4xC,UAAU+wC,aAAaE,YAErD,GAGvBC,eACE,OAAQjoF,KAAK6nF,cAAgB,GAAK7nF,KAAKutB,QAAQlqB,OAGjDskF,UACE,OAAO3nF,KAAKutB,QAAQvtB,KAAKioF,gBAG3BL,sBACE5nF,KAAK6nF,cAAgB7nF,KAAKioF,gBC1EvB,SAASC,GAAcC,GAC5B,MAAO,CAAClgF,EAAaoqC,EAA8B+wC,KACjD,MAAMC,EAAqCD,EAAW7vD,MAChD60D,EAAS,IAAIjhF,IAYnB,MAAO,CACLosB,MAAO,YAAagwD,GAClB,MAAMviC,EAZO,CAAC34C,IAChB,IAAI24C,EAAQonC,EAAOt1D,IAAIzqB,GACvB,OAAa,MAAT24C,IAGJA,EAAQ,IAAI75C,IACZihF,EAAO5gF,IAAIa,EAAK24C,IAHPA,GASOqnC,CAASroF,MACjBsoF,EAAeH,EAAS5E,GAC9B,IAAI33E,EAAWo1C,EAAMluB,IAAIw1D,GACzB,GAAgB,MAAZ18E,EACF,OAAOA,EAGT,MAAMi4E,EAAY,KAChB7iC,EAAMtlB,OAAO4sD,GACM,IAAftnC,EAAMxtB,MACR40D,EAAO1sD,OAAO17B,OAelB,OAZA4L,EAAWy3E,EACRz+E,MAAM5E,KAAMujF,GACZ5kF,MAAMirB,IACLi6D,IACOj6D,KAERgmB,OAAOk0C,IAEN,MADAD,IACMC,KAGV9iC,EAAMx5C,IAAI8gF,EAAc18E,GACjBA,K,kuBCEf,MAAM28E,GAAuB,IAAIphF,IAAyB,CACxD,CAAC,aAAc,IAAIs0B,IAAI,CAAC,yBAGnB,MAAM,GAKXl8B,YACU6Z,EACAovE,EACAnyE,EACAoyE,EACA/gF,EACA06C,EACA7sC,EACA3V,GAPA,KAAAwZ,cAAAA,EACA,KAAAovE,gBAAAA,EACA,KAAAnyE,WAAAA,EACA,KAAAoyE,kBAAAA,EACA,KAAA/gF,YAAAA,EACA,KAAA06C,cAAAA,EACA,KAAA7sC,WAAAA,EACA,KAAA3V,aAAAA,EAZF,KAAA8oF,mBAAyC,IAAIzB,GACnDjnF,KAAK2oF,uBAcDC,0B,0CAEJ,aAD+B5oF,KAAKJ,aAAaipF,yBAI7CC,wBAAwBv1D,G,gDACtBvzB,KAAKJ,aAAampF,oBAAoBx1D,GAClB,MAAtBvzB,KAAKoiD,gBACM,MAAT7uB,EACFvzB,KAAKoiD,gBAAgB4mC,aAErBhpF,KAAKoiD,gBAAgB6mC,mBAKrBC,WAAWlhE,G,gDACThoB,KAAKmpF,2BAA2BnhE,MAGlC/L,QACJ2pE,EACAtxE,EACA80E,EAAyB,M,0CAGzB,GAAgB,MAAZxD,EAAM5mF,GAAY,CAIpB,GAHsB,MAAlBoqF,IACFA,QAAuBppF,KAAK8yB,IAAI8yD,EAAM5mF,KAElB,MAAlBoqF,EAAwB,CAC1B,MAAMC,QAAuBD,EAAenwE,UAE5C,GADA2sE,EAAMlvC,gBAAkB2yC,EAAe3yC,iBAAmB,GACtDkvC,EAAMx6E,OAASgmC,GAAW4F,OAASqyC,EAAej+E,OAASgmC,GAAW4F,MACxE,GACmC,MAAjCqyC,EAAevvD,MAAM3J,UACa,KAAlCk5D,EAAevvD,MAAM3J,UACrBk5D,EAAevvD,MAAM3J,WAAay1D,EAAM9rD,MAAM3J,SAC9C,CACA,MAAMq0D,EAAK,IAAIiB,GACfjB,EAAGr0D,SAAWk5D,EAAevvD,MAAM3J,SACnCq0D,EAAGhoB,aAAeopB,EAAM9rD,MAAMob,qBAAuB,IAAInoC,KACzD64E,EAAMlvC,gBAAgBxb,OAAO,EAAG,EAAGspD,QAEnCoB,EAAM9rD,MAAMob,qBAAuBm0C,EAAevvD,MAAMob,qBAG5D,GAAIm0C,EAAe9xC,UAAW,CAC5B,MAAM+xC,EAAuBD,EAAe5yC,OAAOx1C,QAChDmyB,GACCA,EAAEhoB,OAASwtC,GAAU6E,QACX,MAAVrqB,EAAE9wB,MACS,KAAX8wB,EAAE9wB,MACS,MAAX8wB,EAAEG,OACU,KAAZH,EAAEG,QAEAg2D,EACY,MAAhB3D,EAAMnvC,OACF,GACAmvC,EAAMnvC,OAAOx1C,QACVmyB,GAAMA,EAAEhoB,OAASwtC,GAAU6E,QAAoB,MAAVrqB,EAAE9wB,MAA2B,KAAX8wB,EAAE9wB,OAElEgnF,EAAqBjiF,SAASmiF,IAC5B,MAAMC,EAAeF,EAAa3zC,MAAMxiB,GAAMA,EAAE9wB,OAASknF,EAAGlnF,OAC5D,GAAoB,MAAhBmnF,GAAwBA,EAAal2D,QAAUi2D,EAAGj2D,MAAO,CAC3D,MAAMixD,EAAK,IAAIiB,GACfjB,EAAGr0D,SAAWq5D,EAAGlnF,KAAO,KAAOknF,EAAGj2D,MAClCixD,EAAGhoB,aAAe,IAAIzvD,KACtB64E,EAAMlvC,gBAAgBxb,OAAO,EAAG,EAAGspD,QAKd,MAAzBoB,EAAMlvC,iBAA4D,IAAjCkvC,EAAMlvC,gBAAgBrzC,OACzDuiF,EAAMlvC,gBAAkB,KACU,MAAzBkvC,EAAMlvC,iBAA2BkvC,EAAMlvC,gBAAgBrzC,OAAS,IAEzEuiF,EAAMlvC,gBAAkBkvC,EAAMlvC,gBAAgBtxC,MAAM,EAAG,IAI3D,MAAMy0B,EAAS,IAAI,GAUnB,GATAA,EAAO76B,GAAK4mF,EAAM5mF,GAClB66B,EAAOsG,SAAWylD,EAAMzlD,SACxBtG,EAAOqc,SAAW0vC,EAAM1vC,SACxBrc,EAAOmc,eAAiB4vC,EAAM5vC,eAC9Bnc,EAAOzuB,KAAOw6E,EAAMx6E,KACpByuB,EAAO8c,cAAgBivC,EAAMjvC,cAC7B9c,EAAO4F,aAAemmD,EAAMnmD,aAC5B5F,EAAOgd,SAAW+uC,EAAM/uC,SAEb,MAAPviC,GAAwC,MAAzBulB,EAAOmc,gBAEb,OADX1hC,QAAYtU,KAAKoZ,cAAcG,UAAUsgB,EAAOmc,iBAE9C,MAAM,IAAIn3C,MAAM,mDAyBpB,aAtBMJ,QAAQorB,IAAI,CAChB7pB,KAAK0pF,mBACH9D,EACA/rD,EACA,CACEv3B,KAAM,KACN2zC,MAAO,MAET3hC,GAEFtU,KAAK2pF,kBAAkB9vD,EAAQ+rD,EAAOtxE,GACtCtU,KAAK4pF,cAAchE,EAAMnvC,OAAQniC,GAAK3V,MAAM83C,IAC1C5c,EAAO4c,OAASA,KAElBz2C,KAAK6pF,yBAAyBjE,EAAMlvC,gBAAiBpiC,GAAK3V,MAAM6lF,IAC9D3qD,EAAO6c,gBAAkB8tC,KAE3BxkF,KAAK8pF,mBAAmBlE,EAAMpvC,YAAaliC,GAAK3V,MAAM63C,IACpD3c,EAAO2c,YAAcA,OAIlB3c,KAGHiwD,mBACJC,EACAz1E,G,0CAEA,GAAwB,MAApBy1E,GAAwD,IAA5BA,EAAiB1mF,OAC/C,OAAO,KAGT,MAAMkmB,EAA2B,GAC3BygE,EAA+B,GAwBrC,OAvBAD,EAAiB1iF,SAAeu+E,GAAU,mCACxC,MAAMnlC,EAAa,IAAIskC,GACvBtkC,EAAWzhD,GAAK4mF,EAAM5mF,GACtByhD,EAAWjtB,KAAOoyD,EAAMpyD,KACxBitB,EAAW+Q,SAAWo0B,EAAMp0B,SAC5B/Q,EAAWrgD,IAAMwlF,EAAMxlF,IACvB,MAAM0lF,EAAU9lF,KAAK0pF,mBACnB9D,EACAnlC,EACA,CACE9zC,SAAU,MAEZ2H,GACA3V,MAAK,IAAY,mCACA,MAAbinF,EAAMtxE,MACRmsC,EAAWnsC,UAAYtU,KAAKoZ,cAAc6C,QAAQ2pE,EAAMtxE,IAAIA,IAAKA,IAEnE01E,EAAel1E,KAAK2rC,QAEtBl3B,EAASzU,KAAKgxE,cAGVrnF,QAAQorB,IAAIN,GACXygE,KAGHJ,cAAcK,EAA0B31E,G,0CAC5C,IAAK21E,IAAgBA,EAAY5mF,OAC/B,OAAO,KAGT,MAAMmmB,EAAOxpB,KACPkqF,EAAqB,GAO3B,aANMD,EAAYpE,QAAO,CAAOC,EAAS3nC,IAAU,yCAC3C2nC,EACN,MAAMqE,QAAiB3gE,EAAK4gE,aAAajsC,EAAO7pC,GAChD41E,EAAUp1E,KAAKq1E,OACd1rF,QAAQC,WAEJwrF,KAGHE,aAAaC,EAAuB/1E,G,0CACxC,MAAM6pC,EAAQ,IAAI,GAkBlB,OAjBAA,EAAM/yC,KAAOi/E,EAAWj/E,KACxB+yC,EAAMhB,SAAWktC,EAAWltC,SAExBktC,EAAWj/E,OAASwtC,GAAU8E,SAAgC,SAArB2sC,EAAW92D,QACtD82D,EAAW92D,MAAQ,eAGfvzB,KAAK0pF,mBACTW,EACAlsC,EACA,CACE77C,KAAM,KACNixB,MAAO,MAETjf,GAGK6pC,KAGH0rC,yBACJS,EACAh2E,G,0CAEA,IAAKg2E,IAAaA,EAASjnF,OACzB,OAAO,KAGT,MAAMmmB,EAAOxpB,KACPuqF,EAAqB,GAO3B,aANMD,EAASzE,QAAO,CAAOC,EAAStB,IAAO,yCACrCsB,EACN,MAAM0E,QAAchhE,EAAKihE,uBAAuBjG,EAAIlwE,GACpDi2E,EAAOz1E,KAAK01E,OACX/rF,QAAQC,WAEJ6rF,KAGHE,uBACJC,EACAp2E,G,0CAEA,MAAMkwE,EAAK,IAAI5nC,GAYf,OAXA4nC,EAAGhoB,aAAekuB,EAAQluB,mBAEpBx8D,KAAK0pF,mBACTgB,EACAlG,EACA,CACEr0D,SAAU,MAEZ7b,GAGKkwE,KAGH1xD,IAAI9zB,G,0CACR,MAAMuuB,QAAgBvtB,KAAKJ,aAAa+qF,sBACxC,GAAe,MAAXp9D,IAAoBA,EAAQhZ,eAAevV,GAC7C,OAAO,KAGT,MAAM+3C,QAAkB/2C,KAAKJ,aAAagrF,eAC1C,OAAO,IAAI,GAAOr9D,EAAQvuB,IAAK,EAAO+3C,EAAYA,EAAU/3C,GAAM,SAG9DqtC,S,0CACJ,MAAM0K,QAAkB/2C,KAAKJ,aAAagrF,eACpCr9D,QAAgBvtB,KAAKJ,aAAa+qF,sBAClC/+E,EAAqB,GAC3B,IAAK,MAAM5M,KAAMuuB,EACXA,EAAQhZ,eAAevV,IACzB4M,EAASkJ,KAAK,IAAI,GAAOyY,EAAQvuB,IAAK,EAAO+3C,EAAYA,EAAU/3C,GAAM,OAG7E,OAAO4M,KAIH60B,kB,gDACJ,MAAMzY,QAAehoB,KAAKJ,aAAaqoB,YACvC,GAA8C,aAAnCjoB,KAAK4oF,2BAOd,OALwB,MAAtB5oF,KAAKoiD,gBACgC,QAApC,EAAApiD,KAAKoiD,gBAAgBD,uBAAe,QAAIn6B,KAAYA,UAE/ChoB,KAAKoiD,gBAAgB6mC,aAAajhE,QAAchoB,KAAK4oF,kCAEhD5oF,KAAK4oF,0BAGpB,MAAMiC,EAA2B,GAEjC,WADqB7qF,KAAKoZ,cAAc0xE,UAEtC,MAAM,IAAIjsF,MAAM,WAGlB,MAAM0qB,EAAkB,GASxB,aARsBvpB,KAAKqsC,UACnBhlC,SAAewyB,GAAW,mCAChCtQ,EAASzU,KAAK+kB,EAAO5gB,UAAUta,MAAMiH,GAAMilF,EAAW/1E,KAAKlP,iBAGvDnH,QAAQorB,IAAIN,GAClBshE,EAAW15D,KAAKnxB,KAAK+qF,kCACf/qF,KAAK8oF,wBAAwB+B,GAC5BA,KAGHG,2BACJC,EACAlrD,GAAkB,G,0CAIlB,aAFsB//B,KAAKygC,mBAEZx/B,QAAQ44B,IACjBA,EAAO4d,eAGP1X,GAAUlG,EAAOsG,WAAa8qD,KAG/BlrD,GACuB,MAAxBlG,EAAO8c,eACP9c,EAAO8c,cAAclwC,QAAQwkF,IAAe,QAS5C1gC,sBACJnqD,EACA8qF,EACAC,EAA6B,M,0CAE7B,GAAW,MAAP/qF,GAAoC,MAArB8qF,EACjB,OAAOzsF,QAAQC,QAAQ,IAGzB,MAAMuI,EAASjF,EAAMgF,UAAU5G,GACzBgrF,EACM,MAAVnkF,EACIxI,QAAQC,QAAQ,IAChBsB,KAAKwoF,gBAAgB6C,uBAAuB1sF,MAAM2sF,IAChD,IAAI5uC,EAAiB,GAWrB,OAVA4uC,EAAUjkF,SAASkkF,IACbA,EAASloF,QAAUkoF,EAAS9kF,QAAQQ,IAAW,IACjDy1C,EAAUA,EAAQvnC,OAAOo2E,OAIxB7uC,EAAQr5C,QACXq5C,EAAQ5nC,KAAK7N,GAGRy1C,KAGT7V,QAAepoC,QAAQorB,IAAI,CAACuhE,EAAkBprF,KAAKygC,oBACnD+qD,EAAkB3kD,EAAO,GACzBtZ,EAAUsZ,EAAO,GASvB,OAPoB,MAAhBskD,GAEkB,OADpBA,QAAqBnrF,KAAKJ,aAAayjC,wBAErC8nD,EAAe5qD,GAAa1X,QAIzB0E,EAAQtsB,QAAQ44B,IACrB,GAA0B,MAAtBA,EAAO+c,YACT,OAAO,EAET,GAAyB,MAArBs0C,GAA6BA,EAAkBzkF,QAAQozB,EAAOzuB,OAAS,EACzE,OAAO,EAGT,GAAW,MAAPhL,GAAey5B,EAAOzuB,OAASgmC,GAAW4F,OAA8B,MAArBnd,EAAOC,MAAMsb,KAClE,IAAK,IAAI9xC,EAAI,EAAGA,EAAIu2B,EAAOC,MAAMsb,KAAK/xC,OAAQC,IAAK,CACjD,MAAMoyC,EAAI7b,EAAOC,MAAMsb,KAAK9xC,GAC5B,GAAa,MAAToyC,EAAE/a,IACJ,SAIF,OADyB,MAAX+a,EAAEvsC,MAAgBgiF,EAAez1C,EAAEvsC,OAE/C,KAAKo3B,GAAa1X,OAChB,GAAc,MAAV5hB,GAA8B,MAAZyuC,EAAEzuC,QAAkBukF,EAAgB/kF,QAAQivC,EAAEzuC,SAAW,EAAG,CAChF,IAAIshF,GAAqB3yD,IAAI8f,EAAEzuC,QAM7B,OAAO,EAN+B,CACtC,MAAMwkF,EAAgBzpF,EAAMm2C,QAAQ/3C,GACpC,IAAKmoF,GAAqBz1D,IAAI4iB,EAAEzuC,QAAQ2uB,IAAI61D,GAC1C,OAAO,GAMb,MACF,KAAKlrD,GAAavN,KAChB,MAAM04D,EAAU1pF,EAAMm2C,QAAQ/3C,GAC9B,GAAe,MAAXsrF,GAAmBA,IAAY1pF,EAAMm2C,QAAQzC,EAAE/a,KACjD,OAAO,EAET,MACF,KAAK4F,GAAa+B,MAChB,GAAIliC,IAAQs1C,EAAE/a,IACZ,OAAO,EAET,MACF,KAAK4F,GAAa6B,WAChB,GAAIhiC,EAAImG,WAAWmvC,EAAE/a,KACnB,OAAO,EAET,MACF,KAAK4F,GAAa8B,kBAChB,IAEE,GADc,IAAIr8B,OAAO0vC,EAAE/a,IAAK,KACtB10B,KAAK7F,GACb,OAAO,EAET,MAAOxB,GACPoB,KAAKuV,WAAWK,MAAMhX,GAG1B,KAAK2hC,GAAagC,QAOxB,OAAO,QAILopD,6BAA6B31C,G,0CACjC,MAAMzoB,QAAgBvtB,KAAKqW,WAAW4+D,uBAAuBj/B,GAC7D,GAAe,MAAXzoB,GAAmC,MAAhBA,EAAQ7iB,MAAgB6iB,EAAQ7iB,KAAKrH,OAAQ,CAClE,MAAMwnF,EAA2B,GAC3BthE,EAAkB,GAQxB,OAPAgE,EAAQ7iB,KAAKrD,SAASxB,IACpB,MAAM6E,EAAO,IAAI65E,GAAW1+E,GACtBg0B,EAAS,IAAI,GAAOnvB,GAC1B6e,EAASzU,KAAK+kB,EAAO5gB,UAAUta,MAAMiH,GAAMilF,EAAW/1E,KAAKlP,eAEvDnH,QAAQorB,IAAIN,GAClBshE,EAAW15D,KAAKnxB,KAAK+qF,4BACdF,EAEP,MAAO,MAILe,kBAAkBxrF,EAAai1C,GAA8B,G,0CACjE,OAAOr1C,KAAK6rF,gBAAgBzrF,GAAK,GAAM,EAAOi1C,MAG1Cy2C,sBACJ1rF,EACAi1C,GAA8B,G,0CAE9B,OAAOr1C,KAAK6rF,gBAAgBzrF,GAAK,GAAO,EAAMi1C,MAG1C02C,oBAAoB3rF,G,0CACxB,OAAOJ,KAAK6rF,gBAAgBzrF,GAAK,GAAO,GAAO,MAGjD4rF,0BAA0B5rF,GACxBJ,KAAK0oF,mBAAmBd,oBAAoBxnF,GAGxC6rF,mBAAmBjtF,G,0CACvB,IAAIktF,QAAyBlsF,KAAKJ,aAAagrF,eAC1CsB,IACHA,EAAmB,IAGjBA,EAAiBltF,GACnBktF,EAAiBltF,GAAIw9D,cAAe,IAAIzvD,MAAOC,UAE/Ck/E,EAAiBltF,GAAM,CACrBw9D,cAAc,IAAIzvD,MAAOC,iBAIvBhN,KAAKJ,aAAausF,aAAaD,GAErC,MAAME,QAA6BpsF,KAAKJ,aAAaipF,sBACrD,GAAKuD,EAAL,CAIA,IAAK,IAAI9oF,EAAI,EAAGA,EAAI8oF,EAAqB/oF,OAAQC,IAAK,CACpD,MAAM+oF,EAASD,EAAqB9oF,GACpC,GAAI+oF,EAAOrtF,KAAOA,EAAI,CACpBqtF,EAAOt1C,UAAYm1C,EAAiBltF,GACpC,aAGEgB,KAAKJ,aAAampF,oBAAoBqD,OAGxC3jC,uBAAuBzpD,G,0CAC3B,IAAIktF,QAAyBlsF,KAAKJ,aAAagrF,eAC1CsB,IACHA,EAAmB,IAGjBA,EAAiBltF,GACnBktF,EAAiBltF,GAAI8oF,cAAe,IAAI/6E,MAAOC,UAE/Ck/E,EAAiBltF,GAAM,CACrBw9D,cAAc,IAAIzvD,MAAOC,iBAIvBhN,KAAKJ,aAAausF,aAAaD,GAErC,MAAME,QAA6BpsF,KAAKJ,aAAaipF,sBACrD,GAAKuD,EAAL,CAIA,IAAK,IAAI9oF,EAAI,EAAGA,EAAI8oF,EAAqB/oF,OAAQC,IAAK,CACpD,MAAM+oF,EAASD,EAAqB9oF,GACpC,GAAI+oF,EAAOrtF,KAAOA,EAAI,CACpBqtF,EAAOt1C,UAAYm1C,EAAiBltF,GACpC,aAGEgB,KAAKJ,aAAampF,oBAAoBqD,OAGxCE,gBAAgBrlF,G,0CACpB,GAAc,MAAVA,EACF,OAGF,IAAIu4D,QAAgBx/D,KAAKJ,aAAa86B,kBACjC8kC,IACHA,EAAU,IAEZA,EAAQv4D,GAAU,WACZjH,KAAKJ,aAAaw7B,gBAAgBokC,MAGpCx/B,eAAenG,G,0CACnB,IAAIjuB,EACJ,GAAiB,MAAbiuB,EAAO76B,GAAY,CACrB,GAA4B,MAAxB66B,EAAO8c,cAAuB,CAChC,MAAM/nC,EAAU,IAAIm4E,GAAoBltD,GACxCjuB,QAAiB5L,KAAKqW,WAAW8+D,iBAAiBvmE,OAC7C,CACL,MAAMA,EAAU,IAAI43E,GAAc3sD,GAClCjuB,QAAiB5L,KAAKqW,WAAW6+D,WAAWtmE,GAE9CirB,EAAO76B,GAAK4M,EAAS5M,OAChB,CACL,MAAM4P,EAAU,IAAI43E,GAAc3sD,GAClCjuB,QAAiB5L,KAAKqW,WAAWg/D,UAAUx7C,EAAO76B,GAAI4P,GAGxD,MAAMlE,EAAO,IAAI65E,GACf34E,QACM5L,KAAKJ,aAAaqoB,YACxB4R,EAAO8c,qBAEH32C,KAAKusF,OAAO7hF,MAGdqkD,gBACJl1B,EACAmc,EACAW,G,0CAEA,MAAM61C,EAAqC,GACjB,MAAtB3yD,EAAO2c,aACT3c,EAAO2c,YAAYnvC,SAASo5C,IACJ,MAAlBA,EAAWnsC,KACbk4E,EAAmB13E,KACjB9U,KAAKysF,0BAA0BhsC,EAAY5mB,EAAO76B,GAAIg3C,aAKxDv3C,QAAQorB,IAAI2iE,GAElB3yD,EAAOmc,eAAiBA,EACxBnc,EAAO8c,cAAgBA,EACvB,MAAM+1C,QAAkB1sF,KAAKic,QAAQ4d,GAC/BjrB,EAAU,IAAIo4E,GAAmB0F,GACjC9gF,QAAiB5L,KAAKqW,WAAWs/D,eAAe97C,EAAO76B,GAAI4P,GAC3DlE,EAAO,IAAI65E,GAAW34E,QAAgB5L,KAAKJ,aAAaqoB,YAAa0uB,SACrE32C,KAAKusF,OAAO7hF,MAGdiiF,oBACJp/D,EACAyoB,EACAW,G,0CAEA,MAAMptB,EAA2B,GAC3BqjE,EAAuB,GAC7B,IAAK,MAAM/yD,KAAUtM,EACnBsM,EAAOmc,eAAiBA,EACxBnc,EAAO8c,cAAgBA,EACvBptB,EAASzU,KACP9U,KAAKic,QAAQ4d,GAAQl7B,MAAMiH,IACzBgnF,EAAW93E,KAAKlP,aAIhBnH,QAAQorB,IAAIN,GAClB,MAAM3a,EAAU,IAAIi4E,GAAuB+F,EAAYj2C,SACjD32C,KAAKqW,WAAWu/D,gBAAgBhnE,GACtC,MAAMoZ,QAAehoB,KAAKJ,aAAaqoB,kBACjCjoB,KAAKusF,OAAOK,EAAW3nF,KAAKW,GAAMA,EAAEsgF,aAAal+D,SAGzD65B,yBAAyBhoB,EAAgBgzD,EAAsBrrC,GAAQ,GACrE,OAAO,IAAI/iD,SAAQ,CAACC,EAASmQ,KAC3B,MAAMi+E,EAAS,IAAIC,WACnBD,EAAOE,kBAAkBH,GACzBC,EAAOG,OAAgBC,GAAa,mCAClC,IACE,MAAMC,QAAcntF,KAAKyhD,4BACvB5nB,EACAgzD,EAAgBvqF,KAChB4qF,EAAIjlF,OAAO4+B,OACX2a,GAEF9iD,EAAQyuF,GACR,MAAOvuF,GACPiQ,EAAOjQ,OAGXkuF,EAAOM,QAAWC,IAChBx+E,EAAO,2BAKP4yC,4BACJ5nB,EACAyzD,EACA5iF,EACA82C,GAAQ,G,0CAER,MAAMltC,QAAYtU,KAAKoZ,cAAcG,UAAUsgB,EAAOmc,gBAChDu3C,QAAoBvtF,KAAKoZ,cAAc6C,QAAQqxE,EAAUh5E,GAEzDk5E,QAAmBxtF,KAAKoZ,cAAcyL,WAAWvQ,GACjDm5E,QAAgBztF,KAAKoZ,cAAcs0E,eAAehjF,EAAM8iF,EAAW,IAEnE5+E,EAA6B,CACjC0F,IAAKk5E,EAAW,GAAGh1E,gBACnB7L,SAAU4gF,EAAY/0E,gBACtBi5C,SAAUg8B,EAAQzpF,OAAOG,WACzBwpF,aAAcnsC,GAGhB,IAAI51C,EACJ,IACE,MAAMgiF,QAA2B5tF,KAAKqW,WAAWogE,qBAAqB58C,EAAO76B,GAAI4P,GACjFhD,EAAW41C,EAAQosC,EAAmBzwB,mBAAqBywB,EAAmB1wB,qBACxEl9D,KAAKyoF,kBAAkBoF,uBAC3BrsC,EACAosC,EACAL,EACAE,GAEF,MAAO7uF,GACP,KACGA,aAAa6U,GAAqD,MAAnC7U,EAAoBwV,YAChB,MAAnCxV,EAAoBwV,YAShB,MAAIxV,aAAa6U,EAChB,IAAI5U,MAAOD,EAAoByV,oBAE/BzV,EAVNgN,QAAiB5L,KAAK8tF,iCACpBtsC,EACA3nB,EAAO76B,GACPuuF,EACAE,EACAD,EAAW,IASjB,MAAML,EAAQ,IAAI5I,GAChB34E,QACM5L,KAAKJ,aAAaqoB,YACxB4R,EAAO8c,eAKT,OAHK6K,UACGxhD,KAAKusF,OAAOY,IAEb,IAAI,GAAOA,MAOdW,iCACJtsC,EACAzG,EACAwyC,EACAE,EACAn5E,G,0CAEA,MAAMy5E,EAAK,IAAIxL,SACf,IACE,MAAM/0E,EAAO,IAAIC,KAAK,CAACggF,EAAQzpF,QAAS,CAAEoH,KAAM,6BAChD2iF,EAAGl8D,OAAO,MAAOvd,EAAIkE,iBACrBu1E,EAAGl8D,OAAO,OAAQrkB,EAAM+/E,EAAY/0E,iBACpC,MAAO5Z,GACP,IAAIoD,EAAMG,QAAWH,EAAMO,UAWzB,MAAM3D,EAVNmvF,EAAGl8D,OAAO,MAAOvd,EAAIkE,iBACrBu1E,EAAGl8D,OACD,OACA7uB,OAAOC,KAAKwqF,EAAQzpF,QACpB,CACEgqF,SAAUT,EAAY/0E,gBACtBy1E,YAAa,6BAQrB,IAAIriF,EACJ,IAEIA,EADE41C,QACexhD,KAAKqW,WAAWsgE,gCAAgC57B,EAAUgzC,SAE1D/tF,KAAKqW,WAAWqgE,2BAA2B37B,EAAUgzC,GAExE,MAAOnvF,GACP,MAAM,IAAIC,MAAOD,EAAoByV,oBAGvC,OAAOzI,KAGHq9C,0BAA0BpvB,G,0CAC9B,MAAMjrB,EAAU,IAAIk4E,GAAyBjtD,EAAO8c,qBAC9C32C,KAAKqW,WAAWw/D,qBAAqBh8C,EAAO76B,GAAI4P,GACtD,MAAMlE,EAAOmvB,EAAOqsD,mBAAmBlmF,KAAKJ,aAAaqoB,mBACnDjoB,KAAKusF,OAAO7hF,MAGd6hF,OAAO1yD,G,0CACX,IAAItM,QAAgBvtB,KAAKJ,aAAa+qF,sBAKtC,GAJe,MAAXp9D,IACFA,EAAU,IAGRsM,aAAkB0qD,GAAY,CAChC,MAAM3+E,EAAIi0B,EACVtM,EAAQ3nB,EAAE5G,IAAM4G,OAEfi0B,EAAwBxyB,SAASzB,IAChC2nB,EAAQ3nB,EAAE5G,IAAM4G,WAId5F,KAAK0E,QAAQ6oB,MAGf7oB,QAAQ6oB,G,gDACNvtB,KAAKmpF,mCACLnpF,KAAKJ,aAAasuF,oBAAoB3gE,MAGxCuJ,MAAM9O,G,gDACJhoB,KAAKmuF,2BAA2BnmE,SAChChoB,KAAKkpF,WAAWlhE,MAGlBomE,mBAAmBhI,EAAejmD,G,gDAChCngC,KAAKqW,WAAWq/D,eAAe,IAAI2Q,GAAsBD,EAAKjmD,IAEpE,IAAI5S,QAAgBvtB,KAAKJ,aAAa+qF,sBACvB,MAAXp9D,IACFA,EAAU,IAGZ64D,EAAI/+E,SAASrI,IACPuuB,EAAQhZ,eAAevV,KACzBuuB,EAAQvuB,GAAImhC,SAAWA,YAIrBngC,KAAKkpF,mBACLlpF,KAAKJ,aAAasuF,oBAAoB3gE,MAGxCmO,OAAO18B,G,0CACX,MAAMuuB,QAAgBvtB,KAAKJ,aAAa+qF,sBACxC,GAAe,MAAXp9D,EAAJ,CAIA,GAAkB,iBAAPvuB,EAAiB,CAC1B,GAAmB,MAAfuuB,EAAQvuB,GACV,cAEKuuB,EAAQvuB,QAEdA,EAAgBqI,SAAS/D,WACjBiqB,EAAQjqB,YAIbtD,KAAKkpF,mBACLlpF,KAAKJ,aAAasuF,oBAAoB3gE,OAGxC2S,iBAAiBlhC,G,gDACfgB,KAAKqW,WAAWslC,aAAa38C,SAC7BgB,KAAK07B,OAAO18B,MAGdqvF,qBAAqBjI,G,gDACnBpmF,KAAKqW,WAAWm/D,kBAAkB,IAAI2Q,GAAwBC,UAC9DpmF,KAAK07B,OAAO0qD,MAGdkI,iBAAiBtvF,EAAY8iD,G,0CACjC,MAAMv0B,QAAgBvtB,KAAKJ,aAAa+qF,sBAExC,GAAe,MAAXp9D,GAAoBA,EAAQhZ,eAAevV,IAAkC,MAA3BuuB,EAAQvuB,GAAIw3C,YAAlE,CAIA,IAAK,IAAIlzC,EAAI,EAAGA,EAAIiqB,EAAQvuB,GAAIw3C,YAAYnzC,OAAQC,IAC9CiqB,EAAQvuB,GAAIw3C,YAAYlzC,GAAGtE,KAAO8iD,GACpCv0B,EAAQvuB,GAAIw3C,YAAYtb,OAAO53B,EAAG,SAIhCtD,KAAKkpF,mBACLlpF,KAAKJ,aAAasuF,oBAAoB3gE,OAGxCw0B,2BAA2B/iD,EAAY8iD,G,0CAC3C,UACQ9hD,KAAKqW,WAAWqqC,uBAAuB1hD,EAAI8iD,GACjD,MAAOljD,GACP,OAAOH,QAAQoQ,OAAQjQ,EAAoByV,0BAEvCrU,KAAKsuF,iBAAiBtvF,EAAI8iD,MAGlC6mC,sBAAsB/gF,EAAeC,GACnC,MAAM0mF,EACJ3mF,EAAEmvC,WAAanvC,EAAEmvC,UAAUylB,aAAgB50D,EAAEmvC,UAAUylB,aAA0B,KAC7EgyB,EACJ3mF,EAAEkvC,WAAalvC,EAAEkvC,UAAUylB,aAAgB30D,EAAEkvC,UAAUylB,aAA0B,KAE7EiyB,EAA2B,MAAbF,GAAkC,MAAbC,EACzC,OAAIC,GAAeF,EAAYC,EACtB,EAEQ,MAAbD,GAAkC,MAAbC,GAIrBC,GAAeF,EAAYC,GAHrB,EAMO,MAAbA,GAAkC,MAAbD,EAChB,EAGF,EAGT7jC,8BAA8B9iD,EAAeC,GAC3C,MAAMg/B,EAAS7mC,KAAK2oF,sBAAsB/gF,EAAGC,GAC7C,OAAe,IAAXg/B,EACKA,EAGF7mC,KAAK+qF,0BAAL/qF,CAAgC4H,EAAGC,GAG5CkjF,2BACE,MAAO,CAACnjF,EAAGC,KACT,IAAI6mF,EAAQ9mF,EAAEtF,KACVqsF,EAAQ9mF,EAAEvF,KAEd,GAAa,MAATosF,GAA0B,MAATC,EACnB,OAAQ,EAEV,GAAa,MAATD,GAA0B,MAATC,EACnB,OAAO,EAET,GAAa,MAATD,GAA0B,MAATC,EACnB,OAAO,EAGT,MAAM9nD,EAAS7mC,KAAK0H,YAAYI,SAC5B9H,KAAK0H,YAAYI,SAASC,QAAQ2mF,EAAOC,GACzCD,EAAM1mF,cAAc2mF,GAExB,OAAe,IAAX9nD,GAAgBj/B,EAAEwD,OAASgmC,GAAW4F,OAASnvC,EAAEuD,OAASgmC,GAAW4F,MAChEnQ,GAGe,MAApBj/B,EAAEkyB,MAAM5J,WACVw+D,GAAS9mF,EAAEkyB,MAAM5J,UAGK,MAApBroB,EAAEiyB,MAAM5J,WACVy+D,GAAS9mF,EAAEiyB,MAAM5J,UAGZlwB,KAAK0H,YAAYI,SACpB9H,KAAK0H,YAAYI,SAASC,QAAQ2mF,EAAOC,GACzCD,EAAM1mF,cAAc2mF,KAItBC,WAAW5vF,G,0CACf,MAAMuuB,QAAgBvtB,KAAKJ,aAAa+qF,sBACxC,GAAe,MAAXp9D,EACF,OAGF,MAAMshE,EAAkB9zC,IACG,MAArBxtB,EAAQwtB,KAGZxtB,EAAQwtB,GAAUnE,aAAc,IAAI7pC,MAAOsqD,gBAG3B,iBAAPr4D,EACT6vF,EAAe7vF,GAEdA,EAAgBqI,QAAQwnF,SAGrB7uF,KAAKkpF,mBACLlpF,KAAKJ,aAAasuF,oBAAoB3gE,MAGxCuvB,qBAAqB99C,G,gDACnBgB,KAAKqW,WAAW6/D,gBAAgBl3E,SAChCgB,KAAK4uF,WAAW5vF,MAGlB8vF,yBAAyB1I,G,gDACvBpmF,KAAKqW,WAAW+/D,qBAAqB,IAAI+P,GAAwBC,UACjEpmF,KAAK4uF,WAAWxI,MAGlB9qC,QACJzhB,G,0CAEA,MAAMtM,QAAgBvtB,KAAKJ,aAAa+qF,sBACxC,GAAe,MAAXp9D,EACF,OAGF,MAAMwhE,EAAoBnpF,IACH,MAAjB2nB,EAAQ3nB,EAAE5G,MAGduuB,EAAQ3nB,EAAE5G,IAAI43C,YAAc,KAC5BrpB,EAAQ3nB,EAAE5G,IAAIygC,aAAe75B,EAAE65B,eAGD,UAA5B5F,EAAOt6B,YAAY+C,KACpBu3B,EAAkDxyB,QAAQ0nF,GAE3DA,EAAiBl1D,SAGb75B,KAAKkpF,mBACLlpF,KAAKJ,aAAasuF,oBAAoB3gE,MAGxCwvB,kBAAkB/9C,G,0CACtB,MAAM4M,QAAiB5L,KAAKqW,WAAWigE,iBAAiBt3E,SAClDgB,KAAKs7C,QAAQ,CAAEt8C,GAAIA,EAAIygC,aAAc7zB,EAAS6zB,kBAGhDuvD,sBAAsB5I,G,0CAC1B,MAAMx6E,QAAiB5L,KAAKqW,WAAWmgE,sBAAsB,IAAI8P,GAAyBF,IACpF6I,EAAmD,GACzD,IAAK,MAAMp1D,KAAUjuB,EAASlB,KAC5BukF,EAASn6E,KAAK,CAAE9V,GAAI66B,EAAO76B,GAAIygC,aAAc5F,EAAO4F,qBAEhDz/B,KAAKs7C,QAAQ2zC,MAKPxC,0BACZyC,EACAn0C,EACA/E,G,0CAEA,MAAMm5C,QAA2BnvF,KAAKqW,WAAWuqE,YAC/C,IAAI7/B,QAAQmuC,EAAe9uF,IAAK,CAAE4gD,MAAO,cAE3C,GAAkC,MAA9BmuC,EAAmBz7E,OACrB,MAAM7U,MAAM,kCAAoCswF,EAAmBz7E,OAAOzP,YAG5E,MAAMg9C,QAAYkuC,EAAmBjuC,cAC/BC,QAAenhD,KAAKoZ,cAAcgoC,iBAAiBH,EAAK,MACxD3sC,QAAYtU,KAAKoZ,cAAcG,UAAUy8B,GACzCu3C,QAAoBvtF,KAAKoZ,cAAc6C,QAAQizE,EAAeviF,SAAU2H,GAExEk5E,QAAmBxtF,KAAKoZ,cAAcyL,WAAWvQ,GACjDm5E,QAAgBztF,KAAKoZ,cAAcs0E,eAAevsC,EAAQqsC,EAAW,IAErEO,EAAK,IAAIxL,SACf,IACE,MAAM/0E,EAAO,IAAIC,KAAK,CAACggF,EAAQzpF,QAAS,CAAEoH,KAAM,6BAChD2iF,EAAGl8D,OAAO,MAAO27D,EAAW,GAAGh1E,iBAC/Bu1E,EAAGl8D,OAAO,OAAQrkB,EAAM+/E,EAAY/0E,iBACpC,MAAO5Z,GACP,IAAIoD,EAAMG,QAAWH,EAAMO,UAWzB,MAAM3D,EAVNmvF,EAAGl8D,OAAO,MAAO27D,EAAW,GAAGh1E,iBAC/Bu1E,EAAGl8D,OACD,OACA7uB,OAAOC,KAAKwqF,EAAQzpF,QACpB,CACEgqF,SAAUT,EAAY/0E,gBACtBy1E,YAAa,6BAQrB,UACQjuF,KAAKqW,WAAWwgE,0BACpB97B,EACAm0C,EAAelwF,GACf+uF,EACA/3C,GAEF,MAAOp3C,GACP,MAAM,IAAIC,MAAOD,EAAoByV,wBAI3Bq1E,mBACZ9D,EACAv9E,EACApD,EACAqP,G,0CAEA,MAAMiV,EAAW,GACXC,EAAOxpB,KAEb,IAAK,MAAM2H,KAAQ1C,EACZA,EAAIsP,eAAe5M,IAKxB,SAAW8hB,EAAS2lE,GAClB,MAAM1lE,EAAIjrB,QAAQC,UACfC,MAAK,KACJ,MAAM0wF,EAAazJ,EAAc3gF,EAAIwkB,IAAYA,GACjD,OAAI4lE,GAA2B,KAAdA,EACR7lE,EAAKpQ,cAAc6C,QAAQozE,EAAW/6E,GAExC,QAER3V,MAAMirB,IACJwlE,EAAe3lE,GAAWG,KAE/BL,EAASzU,KAAK4U,GAZhB,CAaG/hB,EAAMU,SAGL5J,QAAQorB,IAAIN,MAGNogE,kBAAkB9vD,EAAgB+rD,EAAmBtxE,G,0CACjE,OAAQulB,EAAOzuB,MACb,KAAKgmC,GAAW4F,MAed,GAdAnd,EAAOC,MAAQ,IAAI,GACnBD,EAAOC,MAAMob,qBAAuB0wC,EAAM9rD,MAAMob,qBAChDrb,EAAOC,MAAMub,mBAAqBuwC,EAAM9rD,MAAMub,yBACxCr1C,KAAK0pF,mBACT9D,EAAM9rD,MACND,EAAOC,MACP,CACE5J,SAAU,KACVC,SAAU,KACVglB,KAAM,MAER7gC,GAGsB,MAApBsxE,EAAM9rD,MAAMsb,KAAc,CAC5Bvb,EAAOC,MAAMsb,KAAO,GACpB,IAAK,IAAI9xC,EAAI,EAAGA,EAAIsiF,EAAM9rD,MAAMsb,KAAK/xC,OAAQC,IAAK,CAChD,MAAM+tD,EAAW,IAAI,GACrBA,EAASloD,MAAQy8E,EAAM9rD,MAAMsb,KAAK9xC,GAAG6F,YAC/BnJ,KAAK0pF,mBACT9D,EAAM9rD,MAAMsb,KAAK9xC,GACjB+tD,EACA,CACE12B,IAAK,MAEPrmB,GAEFulB,EAAOC,MAAMsb,KAAKtgC,KAAKu8C,IAG3B,OACF,KAAKjgB,GAAW6F,WAGd,OAFApd,EAAO0c,WAAa,IAAI,QACxB1c,EAAO0c,WAAWnrC,KAAOw6E,EAAMrvC,WAAWnrC,MAE5C,KAAKgmC,GAAW8F,KAed,OAdArd,EAAOyc,KAAO,IAAI,cACZt2C,KAAK0pF,mBACT9D,EAAMtvC,KACNzc,EAAOyc,KACP,CACE3D,eAAgB,KAChBS,MAAO,KACPha,OAAQ,KACRwZ,SAAU,KACVC,QAAS,KACT/zC,KAAM,MAERwV,IAGJ,KAAK88B,GAAW+F,SA2Bd,OA1BAtd,EAAO3pB,SAAW,IAAI,cAChBlQ,KAAK0pF,mBACT9D,EAAM11E,SACN2pB,EAAO3pB,SACP,CACErE,MAAO,KACP4oC,UAAW,KACXd,WAAY,KACZe,SAAU,KACVd,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,KAAM,KACN18B,MAAO,KACP28B,WAAY,KACZC,QAAS,KACTC,QAAS,KACTlhC,MAAO,KACPmhC,MAAO,KACPC,IAAK,KACLlkB,SAAU,KACVmkB,eAAgB,KAChBC,cAAe,MAEjBhgC,IAGJ,QACE,MAAM,IAAIzV,MAAM,4BAIRgtF,gBACZzrF,EACAkvF,EACAxH,EACAzyC,G,0CAEA,MAAM8yC,EAAW9yC,EAAqB,sBAAwBj1C,EAAMA,EAEpE,IAAKJ,KAAK0oF,mBAAmBrB,SAASc,GAAW,CAC/C,IAAI56D,QAAgBvtB,KAAKuqD,sBAAsBnqD,GAC/C,IAAKmtB,EACH,OAAO,KAGT,GAAI8nB,EAAoB,CACtB,MAAMk6C,QAAkCvvF,KAAKJ,aAAa+iC,+BAM1D,GALApV,EAAUA,EAAQtsB,QACf44B,GACCA,EAAOC,MAAMub,oBACuB,MAAnCxb,EAAOC,MAAMub,qBAA4D,IAA9Bk6C,IAEzB,IAAnBhiE,EAAQlqB,OACV,OAAO,KAIXrD,KAAK0oF,mBAAmBpB,WAAWa,EAAU56D,GAG/C,OAAIu6D,EACK9nF,KAAK0oF,mBAAmBhB,gBAAgBS,GACtCmH,EACFtvF,KAAK0oF,mBAAmBjB,YAAYU,GAEpCnoF,KAAK0oF,mBAAmBf,QAAQQ,MAI7BgG,2BAA2BnmE,G,gDACjChoB,KAAKJ,aAAasuF,oBAAoB,KAAM,CAAElmE,OAAQA,OAGhDmhE,2BAA2BnhE,G,gDACjChoB,KAAKJ,aAAampF,oBAAoB,KAAM,CAAE/gE,OAAQA,IAC5DhoB,KAAKwvF,wBAGCA,qBACNxvF,KAAK0oF,mBAAmB5xD,SAr7B1B,IADCoxD,IAAc,IAAM,oB,4HCxUhB,MAAMuH,GAOXlwF,YAAYqM,GACV5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKg2C,eAAiBpqC,EAASoqC,eAC/Bh2C,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAKm/D,WAAavzD,EAASuzD,WAC3Bn/D,KAAK68C,SAAWjxC,EAASixC,UCPtB,MAAM6yC,GAQXnwF,YAAYqG,GAPZ,KAAA5G,GAAa,KACb,KAAAg3C,eAAyB,KACzB,KAAA1zC,KAAe,KACf,KAAA68D,WAAqB,KACrB,KAAAtiB,SAAoB,KACpB,KAAAoiB,cAAyB,KAGlBr5D,IAIL5F,KAAKhB,GAAK4G,EAAE5G,GACZgB,KAAKg2C,eAAiBpwC,EAAEowC,eACxBh2C,KAAKm/D,WAAav5D,EAAEu5D,WAChBv5D,aAAa,KACf5F,KAAK68C,SAAWj3C,EAAEi3C,SAClB78C,KAAKi/D,cAAgBr5D,EAAEq5D,iBClBtB,MAAM,WAAmBp2C,GAQ9BtpB,YAAY8I,EAAsB2gB,GAA4B,GAC5DlW,QACW,MAAPzK,GAIJrI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJg3C,eAAgB,KAChB1zC,KAAM,KACN68D,WAAY,KACZtiB,SAAU,KACVoiB,cAAe,MAEjBj2C,EACA,CAAC,KAAM,iBAAkB,aAAc,WAAY,kBAIvD/P,UACE,OAAOjZ,KAAKqpB,WACV,IAAIqmE,GAAe1vF,MACnB,CACEsC,KAAM,MAERtC,KAAKg2C,iBC3CJ,MAAM25C,GAKXpwF,YAAYuoD,EAASxlD,EAAcke,GAFnC,KAAAwnC,SAA0B,GAGxBhoD,KAAKwgB,OAASA,EACdxgB,KAAK8nD,KAAOA,EACZ9nD,KAAK8nD,KAAKxlD,KAAOA,GCNd,MAAMstF,GACX3tF,sBACE4tF,EACAC,EACAvoF,EACAc,EACAmY,EACAuvE,GAEA,GAAIxoF,EAAMlE,QAAUysF,EAClB,OAGF,MAAMxQ,EAAMwQ,IAAcvoF,EAAMlE,OAAS,EACnC2sF,EAAWzoF,EAAMuoF,GAEvB,IAAK,IAAIxsF,EAAI,EAAGA,EAAIusF,EAASxsF,OAAQC,IACnC,GAAIusF,EAASvsF,GAAGwkD,KAAKxlD,OAASiF,EAAMuoF,GAGpC,OAAIxQ,GAAOuQ,EAASvsF,GAAGwkD,KAAK9oD,KAAOqJ,EAAIrJ,QAErC6wF,EAAS/6E,KAAK,IAAI66E,GAAStnF,EAAK2nF,EAAUxvE,SAG5CovE,GAAaK,eACXJ,EAASvsF,GAAG0kD,SACZ8nC,EAAY,EACZvoF,EACAc,EACAwnF,EAASvsF,GAAGwkD,KACZioC,GAKJ,GAAgE,IAA5DF,EAAS5uF,QAAQ60C,GAAMA,EAAEgS,KAAKxlD,OAAS0tF,IAAU3sF,OAAc,CACjE,GAAIi8E,EAEF,YADAuQ,EAAS/6E,KAAK,IAAI66E,GAAStnF,EAAK2nF,EAAUxvE,IAG5C,MAAM0vE,EAAc3oF,EAAMuoF,GAAaC,EAAYxoF,EAAMuoF,EAAY,GACrEF,GAAaK,eACXJ,EACA,EACA,CAACK,KAAgB3oF,EAAMnC,MAAM0qF,EAAY,IACzCznF,EACAmY,EACAuvE,IAKN9tF,yBACE4tF,EACA7wF,GAEA,IAAK,IAAIsE,EAAI,EAAGA,EAAIusF,EAASxsF,OAAQC,IAAK,CACxC,GAAIusF,EAASvsF,GAAGwkD,KAAK9oD,KAAOA,EAC1B,OAAO6wF,EAASvsF,GACX,GAA4B,MAAxBusF,EAASvsF,GAAG0kD,SAAkB,CACvC,MAAMF,EAAO8nC,GAAaO,kBAAkBN,EAASvsF,GAAG0kD,SAAUhpD,GAClE,GAAa,OAAT8oD,EACF,OAAOA,GAIb,OAAO,M,2SCrEX,IAAYsoC,IAAZ,SAAYA,GACV,qBACA,mBACA,yBACA,qBAJF,CAAYA,KAAAA,GAAY,K,gBCMjB,MAAMC,GAGX9wF,YACY+wF,EACArvF,EAA2C,MAD3C,KAAAqvF,MAAAA,EACA,KAAArvF,OAAAA,EAJF,KAAAsvF,UAA2C,IAAIppF,IAOzDqpF,MAAM18E,GACC9T,KAAKswF,OAGVtwF,KAAKywF,MAAML,GAAaM,MAAO58E,GAGjC4N,KAAK5N,GACH9T,KAAKywF,MAAML,GAAaO,KAAM78E,GAGhC88E,QAAQ98E,GACN9T,KAAKywF,MAAML,GAAaS,QAAS/8E,GAGnC8B,MAAM9B,GACJ9T,KAAKywF,MAAML,GAAavxF,MAAOiV,GAGjC28E,MAAMK,EAAqBh9E,GACzB,GAAmB,MAAf9T,KAAKiB,SAAkBjB,KAAKiB,OAAO6vF,GAIvC,OAAQA,GACN,KAAKV,GAAaM,MAIlB,KAAKN,GAAaO,KAEhBzhD,QAAQ6hD,IAAIj9E,GACZ,MACF,KAAKs8E,GAAaS,QAEhB3hD,QAAQ8hD,KAAKl9E,GACb,MACF,KAAKs8E,GAAavxF,MAEhBqwC,QAAQt5B,MAAM9B,IAOpBm9E,KAAKC,EAAgB,WACdlxF,KAAKuwF,UAAU36D,IAAIs7D,IACtBlxF,KAAKuwF,UAAU/oF,IAAI0pF,EAAOC,MAI9BC,QAAQF,EAAgB,WACtB,MAAMG,EAAUF,GAAOnxF,KAAKuwF,UAAUz9D,IAAIo+D,IAG1C,OAFAlxF,KAAKuwF,UAAU70D,OAAOw1D,GACtBlxF,KAAKywF,MAAML,GAAaO,KAAM,GAAGO,MAAuB,IAAbG,EAAQ,GAAYA,EAAQ,GAAK,SACrEA,G,gBCtEJ,MAAMC,GACX/xF,YAAmByE,GAAA,KAAAA,OAAAA,GCCd,MAAMutF,ICDN,MAAMC,GAAkkuBCvkPK,MAAM,GACXjyF,YACUuX,EACE26E,EACAl8E,EACA3V,GAHF,KAAAkX,sBAAAA,EACE,KAAA26E,oBAAAA,EACA,KAAAl8E,WAAAA,EACA,KAAA3V,aAAAA,EAGNid,OAAOvI,EAAyB0T,G,gDAC9BhoB,KAAKJ,aAAa8xF,mBAAmBp9E,EAAK,CAAE0T,OAAQA,UACpDhoB,KAAK2xF,SAASr9E,EAAK0T,MAGrBpM,WAAWg2E,G,gDACT5xF,KAAKJ,aAAagc,WAAWg2E,MAG/BjpE,UAAU/N,G,0CACA,MAAVA,UAIE5a,KAAKJ,aAAaiyF,+BAA+B,YACjD7xF,KAAKJ,aAAakyF,+BAA+Bl3E,OAGnDgO,iBAAiBmpE,G,0CACA,MAAjBA,UAIE/xF,KAAKJ,aAAaoyF,uBAAuB,YACzChyF,KAAKJ,aAAaqyF,uBAAuBF,OAG3CG,WACJvjC,EACAwjC,G,0CAEA,MAAMC,EAAe,GACrBzjC,EAAKtnD,SAASg1C,IACZ+1C,EAAQ/1C,EAAIr9C,IAAMq9C,EAAI/nC,OAGxB,IAAK,MAAM+9E,KAAeF,EAAc,CAEtC,MAAMG,QAAoBtyF,KAAKuyF,eAAeF,EAAY7xB,YACpDykB,QAAiBjlF,KAAKklF,eAAe,IAAI/sE,GAAUk6E,EAAY/9E,KAAMg+E,GAC3EF,EAAQC,EAAYrzF,WAAagB,KAAKooB,WAAW68D,IAAWzsE,gBAI9D,aADMxY,KAAKJ,aAAa4yF,6BAA6B,YACxCxyF,KAAKJ,aAAa6yF,6BAA6BL,MAGxDM,gBAAgBhmE,G,0CACpB,MAAMsB,EAAoB,GAM1B,OALAtB,EAAUrlB,SAASooB,IACjBzB,EAAayB,EAASzwB,IAAMywB,EAASnb,aAGjCtU,KAAKJ,aAAa+yF,yBAAyB,YACpC3yF,KAAKJ,aAAagzF,yBAAyB5kE,MAGpDzR,OAAOs2E,EAA8B7qE,G,0CACzC,MAAM8qE,QAAoB9yF,KAAKJ,aAAamzF,mBAAmB,CAAE/qE,OAAQA,IAEzE,GAAmB,MAAf8qE,EACF,OAAOA,EAGTD,IAAAA,EAAc36E,GAAiB86E,MAC/B,MAAMC,QAAqBjzF,KAAKkzF,kBAAkBL,EAAW7qE,GAO7D,OALoB,MAAhBirE,GAEFjzF,KAAK6c,OAAOo2E,EAAcjrE,GAGrBirE,KAGHC,kBACJL,EACA7qE,G,0CAEA,MAAM1T,QAAYtU,KAAKmzF,uBAAuBN,EAAW7qE,GACzD,GAAW,MAAP1T,EAAa,CACf,MAAM2+E,EAAe,IAAIvO,GAAmB1iF,EAAMwB,eAAe8Q,GAAKtQ,QAEtE,aAAYhE,KAAKozF,YAAYH,IAMtBA,GALLjzF,KAAKuV,WAAWq7E,QAAQ,6CAClB5wF,KAAKqzF,oBAAoBrrE,GACxB,MAKX,OAAO,QAGH7M,a,0CACJ,aAAanb,KAAKJ,aAAaub,gBAG3BC,wBAAwBzB,EAAwBrF,G,0CACpD,MAAMg/E,QAAsBtzF,KAAKmb,aACjC,GAAsB,MAAlBxB,GAA2C,MAAjB25E,EAAuB,CACnD,MAAM53E,QAAqB1b,KAAKsb,aAC9B3B,EACArF,EACA2D,GAAY0D,oBAEd,GAAoB,MAAhBD,GAAwB43E,IAAkB53E,EAC5C,OAAO,EAIT,MAAML,QAAsBrb,KAAKsb,aAC/B3B,EACArF,EACA2D,GAAYsD,qBAEd,GAAqB,MAAjBF,GAAyBi4E,IAAkBj4E,EAE7C,aADMrb,KAAK4b,WAAWF,IACf,EAIX,OAAO,KAIHb,UAAUvG,EAA0B,M,0CACxC,MAAMw+E,QAAoB9yF,KAAKJ,aAAa2zF,iCAC5C,GAAmB,MAAfT,EACF,OAAOA,EAGT,MAAMl4E,QAAe5a,KAAKJ,aAAa4zF,iCACvC,GAAc,MAAV54E,EACF,OAAO,KAMT,GAHW,MAAPtG,IACFA,QAAYtU,KAAKuc,UAER,MAAPjI,EACF,OAAO,KAGT,IAAIm/E,EACJ,MAAMC,EAAe,IAAIv7E,GAAUyC,GACnC,GAAI84E,EAAaj7E,iBAAmBT,GAAea,cACjD46E,QAAkBzzF,KAAKklF,eAAewO,EAAcp/E,OAC/C,IAAIo/E,EAAaj7E,iBAAmBT,GAAec,yBAIxD,MAAM,IAAIja,MAAM,4BAJkE,CAClF,MAAMo3B,QAAej2B,KAAK2zF,WAAWr/E,GACrCm/E,QAAkBzzF,KAAKklF,eAAewO,EAAcz9D,IAKtD,GAAiB,MAAbw9D,EACF,OAAO,KAET,MAAMG,EAAqB,IAAIlP,GAAmB+O,GAElD,aADMzzF,KAAKJ,aAAaiyF,+BAA+B+B,GAChDA,KAGHC,e,0CACJ,MAAMC,QAA0B9zF,KAAKJ,aAAai0F,eAClD,GAAyB,MAArBC,EACF,OAAOA,EAGT,MAAM7lE,QAAmBjuB,KAAK+zF,gBAC9B,GAAkB,MAAd9lE,EACF,OAAO,KAGT,MAAM1K,QAAkBvjB,KAAK8W,sBAAsBk9E,oBAAoB/lE,GAEvE,aADMjuB,KAAKJ,aAAaq0F,aAAa1wE,GAC9BA,KAGHwwE,gB,0CACJ,MAAMG,QAA4Bl0F,KAAKJ,aAAau0F,yBACpD,GAA2B,MAAvBD,EACF,OAAOA,EAGT,MAAMnC,QAAsB/xF,KAAKJ,aAAaw0F,yBAC9C,GAAqB,MAAjBrC,EACF,OAAO,KAGT,MAAM9jE,QAAmBjuB,KAAKklF,eAAe,IAAI/sE,GAAU45E,GAAgB,MAE3E,aADM/xF,KAAKJ,aAAaoyF,uBAAuB/jE,GACxCA,KAGH6iB,eAAe9oB,EAAgBzE,G,0CAInC,GAHiB,MAAbA,IACFA,QAAkBvjB,KAAK6zF,gBAEP,OAAdtwE,EACF,MAAM,IAAI1kB,MAAM,4BAElB,MAAMw1F,QAAuBr0F,KAAK8W,sBAAsBW,KAAK8L,EAAW,UAClE+wE,QAAwBt0F,KAAK8W,sBAAsBy9E,WACvDF,EACArsE,EACA,GACA,UAEF,OAAOhoB,KAAKw0F,WAAWF,MAInBG,a,0CACJ,MAAMrC,EAA2C,IAAIjrF,IAC/CutF,QAAkC10F,KAAKJ,aAAa+0F,+BAC1D,GAAiC,MAA7BD,GAAqCA,EAA0BlhE,KAAO,EACxE,OAAOkhE,EAGT,MAAME,QAAmB50F,KAAKJ,aAAai1F,+BAC3C,GAAkB,MAAdD,EACF,OAAO,KAGT,IAAI/3E,GAAS,EAEb,IAAK,MAAM3D,KAAS07E,EAAY,CAC9B,IAAKA,EAAWrgF,eAAe2E,GAC7B,SAGF,MAAM+rE,QAAiBjlF,KAAK80F,WAAWF,EAAW17E,IAClDk5E,EAAQ5qF,IAAI0R,EAAO,IAAIwrE,GAAmBO,IAC1CpoE,GAAS,EAOX,OAJIA,UACI7c,KAAKJ,aAAa4yF,6BAA6BJ,IAGhDA,KAGH74E,UAAUL,G,0CACd,GAAa,MAATA,EACF,OAAO,KAGT,MAAMk5E,QAAgBpyF,KAAKy0F,aAC3B,OAAe,MAAXrC,GAAoBA,EAAQx8D,IAAI1c,GAI7Bk5E,EAAQt/D,IAAI5Z,GAHV,QAOL67E,kB,0CACJ,MAAM/mE,EAAgD,IAAI7mB,IACpD6tF,QAA8Bh1F,KAAKJ,aAAaq1F,2BACtD,GAA6B,MAAzBD,GAAiCA,EAAsBxhE,KAAO,EAChE,OAAOwhE,EAGT,MAAME,QAAwBl1F,KAAKJ,aAAau1F,2BAChD,GAAuB,MAAnBD,EACF,OAAO,KAGT,IAAIr4E,GAAS,EAEb,IAAK,MAAM3D,KAASg8E,EAAiB,CACnC,IAAKA,EAAgB3gF,eAAe2E,GAClC,SAGF,MAAM+rE,QAAiBjlF,KAAK80F,WAAWI,EAAgBh8E,IACvD8U,EAAaxmB,IAAI0R,EAAO,IAAIwrE,GAAmBO,IAC/CpoE,GAAS,EAOX,OAJIA,UACI7c,KAAKJ,aAAa+yF,yBAAyB3kE,IAG5CA,KAGHukE,eAAe/xB,G,0CACnB,GAAkB,MAAdA,EACF,OAAO,KAGT,MAAMxyC,QAAqBhuB,KAAK+0F,kBAChC,OAAoB,MAAhB/mE,GAAyBA,EAAa4H,IAAI4qC,GAIvCxyC,EAAa8E,IAAI0tC,GAHf,QAMLsqB,S,0CACJ,aACS9qF,KAAKo1F,0BACLp1F,KAAKsd,aAAapF,GAAiB86E,eACnChzF,KAAKsd,aAAapF,GAAiBsE,eAIxC44E,eAAeptE,G,0CACnB,OAA2E,aAA7DhoB,KAAKJ,aAAamzF,mBAAmB,CAAE/qE,OAAQA,QAGzD1K,aAAau1E,EAA6B7qE,G,0CAC9C,OAAQ6qE,GACN,KAAK36E,GAAiB86E,KACpB,OAA+E,aAAjEhzF,KAAKJ,aAAay1F,uBAAuB,CAAErtE,OAAQA,KACnE,KAAK9P,GAAiBsE,UACpB,OAAqF,WAAvExc,KAAKJ,aAAa01F,4BAA4B,CAAEttE,OAAQA,KACxE,QACE,OAAO,MAIPq5B,Y,0CACJ,OAAqE,aAAvDrhD,KAAKJ,aAAa4zF,qCAG5B+B,SAASC,GAA8B,EAAMxtE,G,gDAC3ChoB,KAAKJ,aAAa8xF,mBAAmB,KAAM,CAAE1pE,OAAQA,UACrDhoB,KAAKJ,aAAa61F,gBAAgB,KAAM,CAAEztE,OAAQA,IACpDwtE,UACIx1F,KAAKqzF,oBAAoBrrE,OAI7B0tE,eAAe7C,G,0CACnBA,IAAc36E,GAAiB86E,WACrBhzF,KAAKJ,aAAa+1F,uBAAuB,YACzC31F,KAAKJ,aAAag2F,4BAA4B,SAGpDC,aAAa7tE,G,0CACjB,aAAahoB,KAAKJ,aAAagc,WAAW,KAAM,CAAEoM,OAAQA,OAGtD8tE,YAAYC,EAAsB/tE,G,gDAChChoB,KAAKJ,aAAaiyF,+BAA+B,KAAM,CAAE7pE,OAAQA,IAClE+tE,UACG/1F,KAAKJ,aAAakyF,+BAA+B,KAAM,CAAE9pE,OAAQA,QAIrEguE,aAAaD,EAAsB/tE,G,0CACvC,MAAMiuE,EAA+B,CACnCj2F,KAAKJ,aAAaoyF,uBAAuB,KAAM,CAAEhqE,OAAQA,IACzDhoB,KAAKJ,aAAaq0F,aAAa,KAAM,CAAEjsE,OAAQA,KAKjD,OAHK+tE,GACHE,EAAYnhF,KAAK9U,KAAKJ,aAAaqyF,uBAAuB,KAAM,CAAEjqE,OAAQA,KAErEvpB,QAAQorB,IAAIosE,MAGfC,aAAaH,EAAsB/tE,G,gDACjChoB,KAAKJ,aAAa4yF,6BAA6B,KAAM,CAAExqE,OAAQA,IAChE+tE,UACG/1F,KAAKJ,aAAa6yF,6BAA6B,KAAM,CAAEzqE,OAAQA,QAInEmuE,kBAAkBJ,EAAsB/tE,G,gDACtChoB,KAAKJ,aAAa+yF,yBAAyB,KAAM,CAAE3qE,OAAQA,IAC5D+tE,UACG/1F,KAAKJ,aAAagzF,yBAAyB,KAAM,CAAE5qE,OAAQA,QAI/D8mB,qBAAqB9mB,G,0CACzB,aAAahoB,KAAKJ,aAAa+rC,yBAAyB,KAAM,CAAE3jB,OAAQA,OAGpEouE,UAAUpuE,G,gDACRhoB,KAAKu1F,UAAS,EAAMvtE,SACpBhoB,KAAK61F,aAAa7tE,SAClBhoB,KAAKk2F,cAAa,EAAOluE,SACzBhoB,KAAKm2F,mBAAkB,EAAOnuE,SAC9BhoB,KAAK81F,aAAY,EAAO9tE,SACxBhoB,KAAKg2F,cAAa,EAAOhuE,SACzBhoB,KAAK8uC,qBAAqB9mB,MAG5BwnB,Y,0CACJ,MAAMl7B,QAAYtU,KAAKuc,eAEjBvc,KAAK6c,OAAOvI,MAGd2G,QACJkV,EACAkmE,EACAj8E,EACAE,G,0CAEA,IAAIhG,EAAmB,KACvB,GAAW,MAAP8F,GAAeA,IAAQyJ,GAAQc,cAQjC,MAAM,IAAI9lB,MAAM,gBAPhB,GAAqB,MAAjByb,EACFA,EAAgB,SACX,GAAIA,EAAgB,IACzB,MAAM,IAAIzb,MAAM,qCAMpB,OAJEyV,QAAYtU,KAAK8W,sBAAsBw/E,OAAOnmE,EAAUkmE,EAAM,SAAU/7E,GAInE,IAAIoqE,GAAmBpwE,MAG1BoG,eACJd,EACAy8E,EACAj8E,EACAE,EACAi8E,EAA4B,M,0CAE5B,GAAsB,MAAlBA,EAAwB,CAC1B,MAAM/qD,QAAwBxrC,KAAKJ,aAAa42F,2BAChD,GAAuB,MAAnBhrD,EACF,MAAM,IAAI3sC,MAAM,+BAElB03F,EAAiB,IAAIp+E,GAAUqzB,GAEjC,MAAM1vB,QAAe9b,KAAK+b,WAAWnC,EAAKy8E,EAAMj8E,EAAKE,GAC/Cm8E,QAAez2F,KAAKklF,eAAeqR,EAAgBz6E,GACzD,OAAO,IAAI4oE,GAAmB+R,MAG1BC,e,0CACJ,MAAMC,QAAiB32F,KAAK8W,sBAAsB8/E,YAAY,IACxDrzE,QAAkBvjB,KAAK6zF,eAE7B,MAAO,OADmB7zF,KAAKooB,WAAWuuE,EAAUpzE,GAC/B,IAAImhE,GAAmBiS,OAGxC5xE,YAAYzQ,G,0CAChB,MAAMuiF,QAAgB72F,KAAK8W,sBAAsBggF,mBAAmB,MAGpE,MAAO,CAFW90F,EAAMwC,gBAAgBqyF,EAAQ,UACvB72F,KAAKic,QAAQ46E,EAAQ,GAAIviF,OAI9CyH,WACJnC,EACAy8E,EACAj8E,EACAE,G,0CAEA,MAAMwB,QAAe9b,KAAKib,QAAQrB,EAAKy8E,EAAMj8E,EAAKE,GAClD,aAAata,KAAK2zF,WAAW73E,MAGzBi7E,YAAYC,G,0CAChB,MAAMC,QAAgBj3F,KAAK8W,sBAAsBogF,KAC/CF,EACA,iBACA,OACA,GACA,UAEF,OAAO,IAAItS,GAAmBuS,MAG1B37E,aACJ6U,EACA7b,EACA6iF,G,0CAKA,GAHW,MAAP7iF,IACFA,QAAYtU,KAAKuc,UAEH,MAAZ4T,GAA2B,MAAP7b,EACtB,MAAM,IAAIzV,MAAM,uBAGlB,MAAMu4F,EAAaD,IAAgBl/E,GAAY0D,mBAAqB,EAAI,EAClElE,QAAazX,KAAK8W,sBAAsBw/E,OAAOhiF,EAAIA,IAAK6b,EAAU,SAAUinE,GAClF,OAAOp1F,EAAMwC,gBAAgBiT,MAGzBoN,WAAWvQ,G,0CACf,MAAM+iF,QAAer3F,KAAKs3F,oBAAoBhjF,GACxCsG,QAAe5a,KAAK8W,sBAAsB8/E,YAAY,IAC5D,OAAO52F,KAAKu3F,YAAYF,EAAQz8E,MAG5BoM,aACJ1S,EACAsG,G,0CAKA,OAHc,MAAVA,IACFA,QAAe5a,KAAK6a,aAEf7a,KAAKu3F,YAAYjjF,EAAKsG,EAAOtG,QAGhC2H,QAAQu7E,EAAkCljF,G,0CAC9C,GAAkB,MAAdkjF,EACF,OAAO/4F,QAAQC,QAAQ,MAGzB,IAAI+4F,EAEFA,EADwB,iBAAfD,EACEx1F,EAAM2D,gBAAgB6xF,GAAYxzF,OAElCwzF,EAGb,MAAME,QAAe13F,KAAK23F,WAAWF,EAAUnjF,GACzC+D,EAAKrW,EAAMwC,gBAAgBkzF,EAAOr/E,IAClC3N,EAAO1I,EAAMwC,gBAAgBkzF,EAAOhtF,MACpC4N,EAAoB,MAAdo/E,EAAOp/E,IAActW,EAAMwC,gBAAgBkzF,EAAOp/E,KAAO,KACrE,OAAO,IAAIH,GAAUu/E,EAAOpjF,IAAIiE,QAAS7N,EAAM2N,EAAIC,MAG/Co1E,eAAe8J,EAAyBljF,G,0CAC5C,MAAMsjF,QAAiB53F,KAAK23F,WAAWH,EAAYljF,GACnD,IAAIujF,EAAS,EACO,MAAhBD,EAASt/E,MACXu/E,EAASD,EAASt/E,IAAInU,YAGxB,MAAM2zF,EAAW,IAAI/0F,WAAW,EAAI60F,EAASv/E,GAAGlU,WAAa0zF,EAASD,EAASltF,KAAKvG,YAQpF,OAPA2zF,EAAStwF,IAAI,CAACowF,EAAStjF,IAAIiE,UAC3Bu/E,EAAStwF,IAAI,IAAIzE,WAAW60F,EAASv/E,IAAK,GACtB,MAAhBu/E,EAASt/E,KACXw/E,EAAStwF,IAAI,IAAIzE,WAAW60F,EAASt/E,KAAM,EAAIs/E,EAASv/E,GAAGlU,YAG7D2zF,EAAStwF,IAAI,IAAIzE,WAAW60F,EAASltF,MAAO,EAAIktF,EAASv/E,GAAGlU,WAAa0zF,GAClE,IAAIvG,GAAewG,EAAS9zF,WAG/BokB,WAAW1d,EAAmB6Y,G,0CAIlC,GAHiB,MAAbA,IACFA,QAAkBvjB,KAAK6zF,gBAER,MAAbtwE,EACF,MAAM,IAAI1kB,MAAM,2BAGlB,MAAMi5F,QAAiB93F,KAAK8W,sBAAsBsR,WAAW1d,EAAM6Y,EAAW,QAC9E,OAAO,IAAIpL,GAAUH,GAAegB,qBAAsBhX,EAAMwC,gBAAgBszF,OAG5EhD,WAAW8C,EAAkBG,G,0CACjC,MAAMr/E,EAAek/E,EAASxwF,MAAM,KACpC,IACIuR,EADAJ,EAA0B,KAG9B,GAA4B,IAAxBG,EAAarV,OACfkV,EAAUP,GAAee,uBACzBJ,EAAY,CAACD,EAAa,SACrB,GAA4B,IAAxBA,EAAarV,OACtB,IACEkV,EAAU7U,SAASgV,EAAa,GAAI,MACpCC,EAAYD,EAAa,GAAGtR,MAAM,KAClC,MAAOxI,GACPoB,KAAKuV,WAAWK,MAAMhX,GAI1B,OAAQ2Z,GACN,KAAKP,GAAee,uBACpB,KAAKf,GAAegB,qBAEpB,KAAKhB,GAAeggF,kCACpB,KAAKhgF,GAAeigF,gCAClB,MACF,QACE,MAAM,IAAIp5F,MAAM,wBAGpB,GAAiB,MAAb8Z,GAAqBA,EAAUtV,QAAU,EAC3C,MAAM,IAAIxE,MAAM,0BAGlB,MAAM6L,EAAO1I,EAAMwB,eAAemV,EAAU,IAAI3U,OAC1CiqB,EAAa8pE,MAAAA,EAAAA,QAA0B/3F,KAAK+zF,gBAClD,GAAkB,MAAd9lE,EACF,MAAM,IAAIpvB,MAAM,mBAGlB,IAAIq5F,EAAyB,OAC7B,OAAQ3/E,GACN,KAAKP,GAAee,uBACpB,KAAKf,GAAeggF,kCAClBE,EAAM,SACN,MACF,KAAKlgF,GAAegB,qBACpB,KAAKhB,GAAeigF,gCAClB,MACF,QACE,MAAM,IAAIp5F,MAAM,wBAGpB,OAAOmB,KAAK8W,sBAAsBg+E,WAAWpqF,EAAMujB,EAAYiqE,MAG3DhT,eAAeiT,EAAsB7jF,G,0CACzC,MAAM+D,EAAKrW,EAAMwB,eAAe20F,EAAU9/E,IAAIrU,OACxC0G,EAAO1I,EAAMwB,eAAe20F,EAAUztF,MAAM1G,OAC5CsU,EAAM6/E,EAAU7/E,IAAMtW,EAAMwB,eAAe20F,EAAU7/E,KAAKtU,OAAS,KACnEo0F,QAAiBp4F,KAAKq4F,kBAAkBF,EAAU1/E,eAAgB/N,EAAM2N,EAAIC,EAAKhE,GACvF,OAAgB,MAAZ8jF,EACK,KAGFA,KAGH5+E,cAAc2+E,EAAsB7jF,G,0CACxC,aAAatU,KAAKs4F,iBAChBH,EAAU1/E,eACV0/E,EAAUztF,KACVytF,EAAU9/E,GACV8/E,EAAU7/E,IACVhE,MAIE8sC,iBAAiBm3C,EAAqBjkF,G,0CAC1C,GAAc,MAAVikF,EACF,MAAM,IAAI15F,MAAM,cAGlB,MAAMi5F,EAAW,IAAI/0F,WAAWw1F,GAC1BhgF,EAAUu/E,EAAS,GACzB,IAAIU,EAAsB,KACtBC,EAAsB,KACtBC,EAAuB,KAE3B,OAAQngF,GACN,KAAKP,GAAeY,yBACpB,KAAKZ,GAAec,yBAClB,GAAIg/E,EAASz0F,QAAU,GAErB,OAAO,KAGTo1F,EAAUX,EAAS1yF,MAAM,EAAG,IAC5BszF,EAAWZ,EAAS1yF,MAAM,GAAI,IAC9BozF,EAAUV,EAAS1yF,MAAM,IACzB,MACF,KAAK4S,GAAea,cAClB,GAAIi/E,EAASz0F,QAAU,GAErB,OAAO,KAGTo1F,EAAUX,EAAS1yF,MAAM,EAAG,IAC5BozF,EAAUV,EAAS1yF,MAAM,IACzB,MACF,QACE,OAAO,KAGX,aAAapF,KAAKq4F,kBAChB9/E,EACAigF,EAAQx0F,OACRy0F,EAAQz0F,OACI,MAAZ00F,EAAmBA,EAAS10F,OAAS,KACrCsQ,MAMEqkF,aAAaC,EAAahsD,G,0CAC9B,IAAIisD,EAAO,EACX,MAAMC,EAAQlsD,EAAMgsD,EAAM,EACpBG,EAAajzF,KAAKkzF,KAAKlzF,KAAKmzF,KAAKH,IACvC,GAAIC,EAAa,GACf,MAAM,IAAIl6F,MAAM,mDAGlB,MAAMq6F,EAAcpzF,KAAKkzF,KAAKD,EAAa,GACrCI,EAAOrzF,KAAKszF,IAAI,EAAGL,GAAc,EAIjCM,EAAY,IAAIt2F,iBAAiB/C,KAAK8W,sBAAsB8/E,YAAYsC,IAE9E,IAAIxvE,EAAwB,GAAnBwvE,EAAc,GACvB,IAAK,IAAI51F,EAAI,EAAGA,EAAI41F,EAAa51F,IAC/Bu1F,GAAQQ,EAAU/1F,GAAKwC,KAAKszF,IAAI,EAAG1vE,GACnCA,GAAK,EAOP,OAFAmvE,GAAcM,EAEVN,GAAQC,EAEH94F,KAAK24F,aAAaC,EAAKhsD,GAIzBgsD,EAAMC,KAGTzF,YAAY9+E,G,0CAChB,IACE,MAAMy9E,QAAsB/xF,KAAKJ,aAAaw0F,yBACxCx5E,QAAe5a,KAAK6a,UAAUvG,GACpC,GAAqB,MAAjBy9E,GAAmC,MAAVn3E,EAC3B,OAAO,EAGT,MAAMqT,QAAmBjuB,KAAKklF,eAAe,IAAI/sE,GAAU45E,GAAgBn3E,SACrE5a,KAAK8W,sBAAsBk9E,oBAAoB/lE,GACrD,MAAOrvB,GACP,OAAO,EAGT,OAAO,KAIO+yF,SAASr9E,EAAyB0T,G,iDACtChoB,KAAKs5F,eAAephF,GAAiB86E,KAAMhrE,UAC7ChoB,KAAKJ,aAAa+1F,uBAAuBrhF,EAAIswE,OAAQ,CAAE58D,OAAQA,WACtDhoB,KAAKs5F,eAAephF,GAAiBsE,UAAWwL,UACzDhoB,KAAKJ,aAAag2F,4BAA4BthF,EAAIswE,OAAQ,CAAE58D,OAAQA,WAEpEhoB,KAAKJ,aAAa+1F,uBAAuB,KAAM,CAAE3tE,OAAQA,UACzDhoB,KAAKJ,aAAag2F,4BAA4B,KAAM,CAAE5tE,OAAQA,QAIxDsxE,eAAezG,EAA6B7qE,G,0CAC1D,IAAIsxE,GAAiB,EACrB,GAAIzG,IAAc36E,GAAiB86E,KAAM,CAEvCsG,EAAiC,aADNt5F,KAAKJ,aAAa8sC,gBAAgB,CAAE1kB,OAAQA,UAElE,GAAI6qE,IAAc36E,GAAiBsE,UAAW,CAEnD88E,SAD8Bt5F,KAAKJ,aAAa25F,mBAAmB,CAAEvxE,OAAQA,MACzChoB,KAAKyxF,oBAAoBl0E,wBAE/D,OAAO+7E,KAGOnG,uBAAuBN,EAA6B7qE,G,0CAClE,OAAO6qE,IAAc36E,GAAiB86E,WAC5BhzF,KAAKJ,aAAay1F,uBAAuB,CAAErtE,OAAQA,UACnDhoB,KAAKJ,aAAa45F,4BAA4B,CAAExxE,OAAQA,OAGtD2vE,WAAWjtF,EAAmB4J,G,0CAC1C,MAAMjM,EAAM,IAAIkpF,GAKhB,GAJAlpF,EAAIiM,UAAYtU,KAAKs3F,oBAAoBhjF,GACzCjM,EAAIgQ,SAAWrY,KAAK8W,sBAAsB8/E,YAAY,IACtDvuF,EAAIqC,WAAa1K,KAAK8W,sBAAsB6gF,WAAWjtF,EAAMrC,EAAIgQ,GAAIhQ,EAAIiM,IAAIsG,QAEvD,MAAlBvS,EAAIiM,IAAIqwE,OAAgB,CAC1B,MAAM8U,EAAU,IAAI12F,WAAWsF,EAAIgQ,GAAGlU,WAAakE,EAAIqC,KAAKvG,YAC5Ds1F,EAAQjyF,IAAI,IAAIzE,WAAWsF,EAAIgQ,IAAK,GACpCohF,EAAQjyF,IAAI,IAAIzE,WAAWsF,EAAIqC,MAAOrC,EAAIgQ,GAAGlU,YAC7CkE,EAAIiQ,UAAYtY,KAAK8W,sBAAsB4iF,KAAKD,EAAQz1F,OAAQqE,EAAIiM,IAAIqwE,OAAQ,UAGlF,OAAOt8E,KAGKiwF,iBACZ//E,EACA7N,EACA2N,EACAC,EACAhE,G,0CAEA,MAAMqlF,QAAkB35F,KAAKs3F,oBAAoBhjF,GAC3C+iF,QAAer3F,KAAK45F,iBAAiBrhF,EAASohF,GAEpD,GAAqB,MAAjBtC,EAAO1S,QAAyB,MAAPrsE,EAE3B,OADAtY,KAAKuV,WAAWK,MAAM,iBACf,KAGT,GAAIyhF,EAAO9+E,UAAYA,EAErB,OADAvY,KAAKuV,WAAWK,MAAM,wBACf,KAGT,MAAMikF,EAAa75F,KAAK8W,sBAAsBgjF,yBAAyBpvF,EAAM2N,EAAIC,EAAK++E,GACtF,GAAyB,MAArBwC,EAAWlV,QAAoC,MAAlBkV,EAAWvhF,IAAa,CACvD,MAAMyhF,QAAoB/5F,KAAK8W,sBAAsBkjF,SACnDH,EAAWJ,QACXI,EAAWlV,OACX,UAGF,WADwB3kF,KAAK8W,sBAAsBmjF,YAAYJ,EAAWvhF,IAAKyhF,IAG7E,OADA/5F,KAAKuV,WAAWK,MAAM,eACf,KAIX,OAAO5V,KAAK8W,sBAAsBojF,eAAeL,MAGrCxB,kBACZ9/E,EACA7N,EACA2N,EACAC,EACAhE,G,0CAEA,MAAMqlF,QAAkB35F,KAAKs3F,oBAAoBhjF,GAC3C+iF,QAAer3F,KAAK45F,iBAAiBrhF,EAASohF,GAEpD,GAAqB,MAAjBtC,EAAO1S,QAAyB,MAAPrsE,EAC3B,OAAO,KAGT,GAAI++E,EAAO9+E,UAAYA,EACrB,OAAO,KAGT,GAAqB,MAAjB8+E,EAAO1S,QAAyB,MAAPrsE,EAAa,CACxC,MAAMmhF,EAAU,IAAI12F,WAAWsV,EAAGlU,WAAauG,EAAKvG,YACpDs1F,EAAQjyF,IAAI,IAAIzE,WAAWsV,GAAK,GAChCohF,EAAQjyF,IAAI,IAAIzE,WAAW2H,GAAO2N,EAAGlU,YACrC,MAAM41F,QAAoB/5F,KAAK8W,sBAAsB4iF,KACnDD,EAAQz1F,OACRqzF,EAAO1S,OACP,UAEF,GAAoB,OAAhBoV,EACF,OAAO,KAIT,WADwB/5F,KAAK8W,sBAAsB/O,QAAQuQ,EAAKyhF,IAG9D,OADA/5F,KAAKuV,WAAWK,MAAM,eACf,KAIX,aAAa5V,KAAK8W,sBAAsBqjF,WAAWzvF,EAAM2N,EAAIg/E,EAAOz8E,WAGxD08E,oBAAoBhjF,G,0CAChC,GAAW,MAAPA,EACF,OAAOA,EAGT,MAAMsG,QAAe5a,KAAK6a,YAC1B,OAAc,MAAVD,EACKA,QAGI5a,KAAKuc,YAGNq9E,iBACZrhF,EACAjE,G,0CAEA,GACEiE,IAAYP,GAAeY,0BAC3BtE,EAAIiE,UAAYP,GAAea,cAC/B,CAEA,IAAIuhF,QAAkBp6F,KAAKJ,aAAay6F,kBAKxC,OAJiB,MAAbD,IACFA,EAAY,IAAI1V,GAAmBpwE,EAAIA,IAAK0D,GAAeY,gCACrD5Y,KAAKJ,aAAa61F,gBAAgB2E,IAEnCA,EAGT,OAAO9lF,KAGKq/E,WAAWr/E,G,0CACvB,MAAM2hB,EAAS,IAAIlzB,WAAW,IACxB6X,QAAe5a,KAAK8W,sBAAsBy9E,WAAWjgF,EAAIA,IAAK,MAAO,GAAI,UACzEqwE,QAAe3kF,KAAK8W,sBAAsBy9E,WAAWjgF,EAAIA,IAAK,MAAO,GAAI,UAG/E,OAFA2hB,EAAOzuB,IAAI,IAAIzE,WAAW6X,IAC1Bqb,EAAOzuB,IAAI,IAAIzE,WAAW4hF,GAAS,IAC5B,IAAID,GAAmBzuD,EAAOjyB,WAGzBwwF,WAAW/8E,EAAmB6iF,EAAyB,I,0CACnE,MAAMC,EAAiBz0F,KAAKirF,IAAIS,GAAgBnuF,QAAUyC,KAAKirF,IAAI,GACnE,IAAIyJ,EAAW10F,KAAKkzF,KAAKsB,EAAiBC,GAE1C,MAAME,EAAU11F,MAAM9B,KAAK,IAAIF,WAAW0U,IAE1C,GAAI+iF,EAAWD,EAD2B,EAAjBE,EAAQp3F,OAE/B,MAAM,IAAIxE,MAAM,gDAGlB,MAAM67F,EAAmB,GACzB,IAAIC,EAAa,aAAiBF,EAAS,KAC3C,KAAOD,KAAY,CACjB,MAAMI,EAAYD,EAAWhqC,IAAI6gC,GAAgBnuF,QACjDs3F,EAAaA,EAAWE,OAAOrJ,GAAgBnuF,QAC/Cq3F,EAAO5lF,KAAK08E,GAAgBoJ,IAE9B,OAAOF,KAGKnD,YACZjjF,EACAsG,G,0CAEA,IAAIkgF,EAAuB,KAC3B,GAA2B,KAAvBxmF,EAAIA,IAAInQ,WAAmB,CAC7B,MAAM8xB,QAAej2B,KAAK2zF,WAAWr/E,GACrCwmF,QAAkB96F,KAAKic,QAAQrB,EAAQqb,OAClC,IAA2B,KAAvB3hB,EAAIA,IAAInQ,WAGjB,MAAM,IAAItF,MAAM,qBAFhBi8F,QAAkB96F,KAAKic,QAAQrB,EAAQtG,GAIzC,MAAO,CAAC,IAAIowE,GAAmB9pE,GAASkgF,MAG5BzH,oBAAoBrrE,G,gDAC1BhoB,KAAKJ,aAAa+1F,uBAAuB,KAAM,CAAE3tE,OAAQA,UACzDhoB,KAAKJ,aAAag2F,4BAA4B,KAAM,CAAE5tE,OAAQA,QAvyBtE,IADCkgE,IAAc,IAAM,c,mDACAxD,K,gEAuFrB,IADCwD,IAAc,IAAM,e,uHA8CrB,IADCA,IAAc,IAAM,oB,uaCjShB,MAAM6S,ICAN,MAAMC,I,2TCGN,MAAM9jD,GAuCX33C,YAAYm7C,G,gBACD,MAALA,IAIAA,aAAahI,IACf1yC,KAAK2yC,eAAiB+H,EAAE/H,eACxB3yC,KAAKozC,MAAQsH,EAAEtH,MACfpzC,KAAKo5B,OAASshB,EAAEthB,OAChBp5B,KAAK4yC,SAAW8H,EAAE9H,SAClB5yC,KAAK6yC,QAAU6H,EAAE7H,QACjB7yC,KAAKlB,KAAO47C,EAAE57C,OAEdkB,KAAK2yC,eAAiC,QAAhB,EAAA+H,EAAE/H,sBAAc,eAAEn6B,gBACxCxY,KAAKozC,MAAe,QAAP,EAAAsH,EAAEtH,aAAK,eAAE56B,gBACtBxY,KAAKo5B,OAAiB,QAAR,EAAAshB,EAAEthB,cAAM,eAAE5gB,gBACxBxY,KAAK4yC,SAAqB,QAAV,EAAA8H,EAAE9H,gBAAQ,eAAEp6B,gBAC5BxY,KAAK6yC,QAAmB,QAAT,EAAA6H,EAAE7H,eAAO,eAAEr6B,gBAC1BxY,KAAKlB,KAAa,QAAN,EAAA47C,EAAE57C,YAAI,eAAE0Z,kBAxDxBvW,kBACE,MAAMzD,EAAM,IAAI04C,GAOhB,OANA14C,EAAIm0C,eAAiB,WACrBn0C,EAAI40C,MAAQ,OACZ50C,EAAI46B,OAAS,mBACb56B,EAAIo0C,SAAW,KACfp0C,EAAIq0C,QAAU,OACdr0C,EAAIM,KAAO,MACJN,EAGTyD,cAAczD,EAAWwoD,EAAO,IAAItU,IAOlC,OANAsU,EAAKrU,eAAiBn0C,EAAIm0C,eAC1BqU,EAAK5T,MAAQ50C,EAAI40C,MACjB4T,EAAK5tB,OAAS56B,EAAI46B,OAClB4tB,EAAKpU,SAAWp0C,EAAIo0C,SACpBoU,EAAKnU,QAAUr0C,EAAIq0C,QACnBmU,EAAKloD,KAAON,EAAIM,KACTkoD,EAGT/kD,gBAAgBzD,EAAWyI,EAAS,IAAI,IAOtC,OANAA,EAAO0rC,eAAuC,MAAtBn0C,EAAIm0C,eAAyB,IAAIx6B,GAAU3Z,EAAIm0C,gBAAkB,KACzF1rC,EAAOmsC,MAAqB,MAAb50C,EAAI40C,MAAgB,IAAIj7B,GAAU3Z,EAAI40C,OAAS,KAC9DnsC,EAAOmyB,OAAuB,MAAd56B,EAAI46B,OAAiB,IAAIjhB,GAAU3Z,EAAI46B,QAAU,KACjEnyB,EAAO2rC,SAA2B,MAAhBp0C,EAAIo0C,SAAmB,IAAIz6B,GAAU3Z,EAAIo0C,UAAY,KACvE3rC,EAAO4rC,QAAyB,MAAfr0C,EAAIq0C,QAAkB,IAAI16B,GAAU3Z,EAAIq0C,SAAW,KACpE5rC,EAAOnI,KAAmB,MAAZN,EAAIM,KAAe,IAAIqZ,GAAU3Z,EAAIM,MAAQ,KACpDmI,GC1BJ,MAAMg0F,GA8BX17F,YAAYm7C,G,QACD,MAALA,IAIAA,aAAasC,IACfh9C,KAAKsC,KAAOo4C,EAAEp4C,KACdtC,KAAKuzB,MAAQmnB,EAAEnnB,QAEfvzB,KAAKsC,KAAa,QAAN,EAAAo4C,EAAEp4C,YAAI,eAAEkW,gBACpBxY,KAAKuzB,MAAe,QAAP,EAAAmnB,EAAEnnB,aAAK,eAAE/a,iBAExBxY,KAAKoL,KAAOsvC,EAAEtvC,KACdpL,KAAKm9C,SAAWzC,EAAEyC,UA1CpBl7C,kBACE,MAAMzD,EAAM,IAAIy8F,GAIhB,OAHAz8F,EAAI8D,KAAO,aACX9D,EAAI+0B,MAAQ,aACZ/0B,EAAI4M,KAAOwtC,GAAUliB,KACdl4B,EAGTyD,cAAczD,EAAYwoD,EAAO,IAAIhK,IAKnC,OAJAgK,EAAK57C,KAAO5M,EAAI4M,KAChB47C,EAAKzzB,MAAQ/0B,EAAI+0B,MACjByzB,EAAK1kD,KAAO9D,EAAI8D,KAChB0kD,EAAK7J,SAAW3+C,EAAI2+C,SACb6J,EAGT/kD,gBAAgBzD,EAAYyI,EAAS,IAAI,IAKvC,OAJAA,EAAOmE,KAAO5M,EAAI4M,KAClBnE,EAAOssB,MAAqB,MAAb/0B,EAAI+0B,MAAgB,IAAIpb,GAAU3Z,EAAI+0B,OAAS,KAC9DtsB,EAAO3E,KAAmB,MAAZ9D,EAAI8D,KAAe,IAAI6V,GAAU3Z,EAAI8D,MAAQ,KAC3D2E,EAAOk2C,SAAW3+C,EAAI2+C,SACfl2C,GCzBJ,MAAMkwC,GAuFX53C,YAAYm7C,G,wCACD,MAALA,IAIAA,aAAahH,IACf1zC,KAAK6L,MAAQ6uC,EAAE7uC,MACf7L,KAAKy0C,UAAYiG,EAAEjG,UACnBz0C,KAAK2zC,WAAa+G,EAAE/G,WACpB3zC,KAAK00C,SAAWgG,EAAEhG,SAClB10C,KAAK4zC,SAAW8G,EAAE9G,SAClB5zC,KAAK6zC,SAAW6G,EAAE7G,SAClB7zC,KAAK8zC,SAAW4G,EAAE5G,SAClB9zC,KAAK+zC,KAAO2G,EAAE3G,KACd/zC,KAAKqX,MAAQqjC,EAAErjC,MACfrX,KAAKg0C,WAAa0G,EAAE1G,WACpBh0C,KAAKi0C,QAAUyG,EAAEzG,QACjBj0C,KAAKk0C,QAAUwG,EAAExG,QACjBl0C,KAAKgT,MAAQ0nC,EAAE1nC,MACfhT,KAAKm0C,MAAQuG,EAAEvG,MACfn0C,KAAKo0C,IAAMsG,EAAEtG,IACbp0C,KAAKkwB,SAAWwqB,EAAExqB,SAClBlwB,KAAKq0C,eAAiBqG,EAAErG,eACxBr0C,KAAKs0C,cAAgBoG,EAAEpG,gBAEvBt0C,KAAK6L,MAAe,QAAP,EAAA6uC,EAAE7uC,aAAK,eAAE2M,gBACtBxY,KAAKy0C,UAAuB,QAAX,EAAAiG,EAAEjG,iBAAS,eAAEj8B,gBAC9BxY,KAAK2zC,WAAyB,QAAZ,EAAA+G,EAAE/G,kBAAU,eAAEn7B,gBAChCxY,KAAK00C,SAAqB,QAAV,EAAAgG,EAAEhG,gBAAQ,eAAEl8B,gBAC5BxY,KAAK4zC,SAAqB,QAAV,EAAA8G,EAAE9G,gBAAQ,eAAEp7B,gBAC5BxY,KAAK6zC,SAAqB,QAAV,EAAA6G,EAAE7G,gBAAQ,eAAEr7B,gBAC5BxY,KAAK8zC,SAAqB,QAAV,EAAA4G,EAAE5G,gBAAQ,eAAEt7B,gBAC5BxY,KAAK+zC,KAAa,QAAN,EAAA2G,EAAE3G,YAAI,eAAEv7B,gBACpBxY,KAAKqX,MAAe,QAAP,EAAAqjC,EAAErjC,aAAK,eAAEmB,gBACtBxY,KAAKg0C,WAAyB,QAAZ,EAAA0G,EAAE1G,kBAAU,eAAEx7B,gBAChCxY,KAAKi0C,QAAmB,QAAT,EAAAyG,EAAEzG,eAAO,eAAEz7B,gBAC1BxY,KAAKk0C,QAAmB,QAAT,EAAAwG,EAAExG,eAAO,eAAE17B,gBAC1BxY,KAAKgT,MAAe,QAAP,EAAA0nC,EAAE1nC,aAAK,eAAEwF,gBACtBxY,KAAKm0C,MAAe,QAAP,EAAAuG,EAAEvG,aAAK,eAAE37B,gBACtBxY,KAAKo0C,IAAW,QAAL,EAAAsG,EAAEtG,WAAG,eAAE57B,gBAClBxY,KAAKkwB,SAAqB,QAAV,EAAAwqB,EAAExqB,gBAAQ,eAAE1X,gBAC5BxY,KAAKq0C,eAAiC,QAAhB,EAAAqG,EAAErG,sBAAc,eAAE77B,gBACxCxY,KAAKs0C,cAA+B,QAAf,EAAAoG,EAAEpG,qBAAa,eAAE97B,kBAhI1CvW,kBACE,MAAMzD,EAAM,IAAI24C,GAmBhB,OAlBA34C,EAAIqN,MAAQ,KACZrN,EAAIi2C,UAAY,OAChBj2C,EAAIm1C,WAAa,UACjBn1C,EAAIk2C,SAAW,MACfl2C,EAAIo1C,SAAW,aACfp1C,EAAIq1C,SAAW,WACfr1C,EAAIs1C,SAAW,KACft1C,EAAIu1C,KAAO,WACXv1C,EAAI6Y,MAAQ,KACZ7Y,EAAIw1C,WAAa,QACjBx1C,EAAIy1C,QAAU,KACdz1C,EAAI01C,QAAU,YACd11C,EAAIwU,MAAQ,mBACZxU,EAAI21C,MAAQ,aACZ31C,EAAI41C,IAAM,eACV51C,EAAI0xB,SAAW,OACf1xB,EAAI61C,eAAiB,eACrB71C,EAAI81C,cAAgB,oBACb91C,EAGTyD,cAAczD,EAAewoD,EAAO,IAAItT,IAmBtC,OAlBAsT,EAAKn7C,MAAQrN,EAAIqN,MACjBm7C,EAAKvS,UAAYj2C,EAAIi2C,UACrBuS,EAAKrT,WAAan1C,EAAIm1C,WACtBqT,EAAKtS,SAAWl2C,EAAIk2C,SACpBsS,EAAKpT,SAAWp1C,EAAIo1C,SACpBoT,EAAKnT,SAAWr1C,EAAIq1C,SACpBmT,EAAKlT,SAAWt1C,EAAIs1C,SACpBkT,EAAKjT,KAAOv1C,EAAIu1C,KAChBiT,EAAK3vC,MAAQ7Y,EAAI6Y,MACjB2vC,EAAKhT,WAAax1C,EAAIw1C,WACtBgT,EAAK/S,QAAUz1C,EAAIy1C,QACnB+S,EAAK9S,QAAU11C,EAAI01C,QACnB8S,EAAKh0C,MAAQxU,EAAIwU,MACjBg0C,EAAK7S,MAAQ31C,EAAI21C,MACjB6S,EAAK5S,IAAM51C,EAAI41C,IACf4S,EAAK92B,SAAW1xB,EAAI0xB,SACpB82B,EAAK3S,eAAiB71C,EAAI61C,eAC1B2S,EAAK1S,cAAgB91C,EAAI81C,cAClB0S,EAGT/kD,gBAAgBzD,EAAeyI,EAAS,IAAI,IAmB1C,OAlBAA,EAAO4E,MAAqB,MAAbrN,EAAIqN,MAAgB,IAAIsM,GAAU3Z,EAAIqN,OAAS,KAC9D5E,EAAOwtC,UAA6B,MAAjBj2C,EAAIi2C,UAAoB,IAAIt8B,GAAU3Z,EAAIi2C,WAAa,KAC1ExtC,EAAO0sC,WAA+B,MAAlBn1C,EAAIm1C,WAAqB,IAAIx7B,GAAU3Z,EAAIm1C,YAAc,KAC7E1sC,EAAOytC,SAA2B,MAAhBl2C,EAAIk2C,SAAmB,IAAIv8B,GAAU3Z,EAAIk2C,UAAY,KACvEztC,EAAO2sC,SAA2B,MAAhBp1C,EAAIo1C,SAAmB,IAAIz7B,GAAU3Z,EAAIo1C,UAAY,KACvE3sC,EAAO4sC,SAA2B,MAAhBr1C,EAAIq1C,SAAmB,IAAI17B,GAAU3Z,EAAIq1C,UAAY,KACvE5sC,EAAO6sC,SAA2B,MAAhBt1C,EAAIs1C,SAAmB,IAAI37B,GAAU3Z,EAAIs1C,UAAY,KACvE7sC,EAAO8sC,KAAmB,MAAZv1C,EAAIu1C,KAAe,IAAI57B,GAAU3Z,EAAIu1C,MAAQ,KAC3D9sC,EAAOoQ,MAAqB,MAAb7Y,EAAI6Y,MAAgB,IAAIc,GAAU3Z,EAAI6Y,OAAS,KAC9DpQ,EAAO+sC,WAA+B,MAAlBx1C,EAAIw1C,WAAqB,IAAI77B,GAAU3Z,EAAIw1C,YAAc,KAC7E/sC,EAAOgtC,QAAyB,MAAfz1C,EAAIy1C,QAAkB,IAAI97B,GAAU3Z,EAAIy1C,SAAW,KACpEhtC,EAAOitC,QAAyB,MAAf11C,EAAI01C,QAAkB,IAAI/7B,GAAU3Z,EAAI01C,SAAW,KACpEjtC,EAAO+L,MAAqB,MAAbxU,EAAIwU,MAAgB,IAAImF,GAAU3Z,EAAIwU,OAAS,KAC9D/L,EAAOktC,MAAqB,MAAb31C,EAAI21C,MAAgB,IAAIh8B,GAAU3Z,EAAI21C,OAAS,KAC9DltC,EAAOmtC,IAAiB,MAAX51C,EAAI41C,IAAc,IAAIj8B,GAAU3Z,EAAI41C,KAAO,KACxDntC,EAAOipB,SAA2B,MAAhB1xB,EAAI0xB,SAAmB,IAAI/X,GAAU3Z,EAAI0xB,UAAY,KACvEjpB,EAAOotC,eAAuC,MAAtB71C,EAAI61C,eAAyB,IAAIl8B,GAAU3Z,EAAI61C,gBAAkB,KACzFptC,EAAOqtC,cAAqC,MAArB91C,EAAI81C,cAAwB,IAAIn8B,GAAU3Z,EAAI81C,eAAiB,KAC/ErtC,GC/DJ,MAAMi0F,GAuBX37F,YAAYm7C,G,MAFZ,KAAAvxC,MAAsB,KAGX,MAALuxC,IAKF16C,KAAK26B,IADH+f,aAAa7C,GACJ6C,EAAE/f,IAEG,QAAL,EAAA+f,EAAE/f,WAAG,eAAEniB,gBAEpBxY,KAAKmJ,MAAQuxC,EAAEvxC,OAhCjBlH,kBACE,MAAMzD,EAAM,IAAI08F,GAGhB,OAFA18F,EAAIm8B,IAAM,qBACVn8B,EAAI2K,MAAQ,KACL3K,EAGTyD,cAAczD,EAAewoD,EAAO,IAAInP,IAGtC,OAFAmP,EAAKrsB,IAAMn8B,EAAIm8B,IACfqsB,EAAK79C,MAAQ3K,EAAI2K,MACV69C,EAGT/kD,gBAAgBzD,EAAeyI,EAAS,IAAI,IAG1C,OAFAA,EAAO0zB,IAAiB,MAAXn8B,EAAIm8B,IAAc,IAAIxiB,GAAU3Z,EAAIm8B,KAAO,KACxD1zB,EAAOkC,MAAQ3K,EAAI2K,MACZlC,GCjBJ,MAAM+vC,GAmCXz3C,YAAYm7C,G,UACD,MAALA,IAIU,MAAVA,EAAEtF,OAEFp1C,KAAKo1C,KAAOsF,EAAEtF,KAAKnwC,KAAKywC,GAAM,IAAIwlD,GAASxlD,MAM3CgF,aAAa1F,IACfh1C,KAAKkwB,SAAWwqB,EAAExqB,SAClBlwB,KAAKmwB,SAAWuqB,EAAEvqB,SAClBnwB,KAAKm1C,KAAOuF,EAAEvF,OAEdn1C,KAAKkwB,SAAqB,QAAV,EAAAwqB,EAAExqB,gBAAQ,eAAE1X,gBAC5BxY,KAAKmwB,SAAqB,QAAV,EAAAuqB,EAAEvqB,gBAAQ,eAAE3X,gBAC5BxY,KAAKm1C,KAAa,QAAN,EAAAuF,EAAEvF,YAAI,eAAE38B,kBAtDxBvW,kBACE,MAAMzD,EAAM,IAAIw4C,GAKhB,OAJAx4C,EAAI42C,KAAO,GACX52C,EAAI0xB,SAAW,OACf1xB,EAAI2xB,SAAW,gBACf3xB,EAAI22C,KAAO,mBACJ32C,EAGTyD,cAAczD,EAAYwoD,EAAO,IAAIhS,IAOnC,OANgB,MAAZx2C,EAAI42C,OACN4R,EAAK5R,KAAO52C,EAAI42C,KAAKnwC,KAAKywC,GAAMwlD,GAASC,OAAOzlD,MAElDsR,EAAK92B,SAAW1xB,EAAI0xB,SACpB82B,EAAK72B,SAAW3xB,EAAI2xB,SACpB62B,EAAK7R,KAAO32C,EAAI22C,KACT6R,EAGT/kD,gBAAgBzD,EAAYyI,EAAS,IAAI,IAOvC,OANgB,MAAZzI,EAAI42C,OACNnuC,EAAOmuC,KAAO52C,EAAI42C,KAAKnwC,KAAKywC,GAAMwlD,GAASE,SAAS1lD,MAEtDzuC,EAAOipB,SAA2B,MAAhB1xB,EAAI0xB,SAAmB,IAAI/X,GAAU3Z,EAAI0xB,UAAY,KACvEjpB,EAAOkpB,SAA2B,MAAhB3xB,EAAI2xB,SAAmB,IAAIhY,GAAU3Z,EAAI2xB,UAAY,KACvElpB,EAAOkuC,KAAmB,MAAZ32C,EAAI22C,KAAe,IAAIh9B,GAAU3Z,EAAI22C,MAAQ,KACpDluC,GC5BJ,MAAMgwC,GAmBX13C,YAAYm7C,GACD,MAALA,IAIJ16C,KAAKoL,KAAOsvC,EAAEtvC,MAvBhBnJ,kBACE,MAAMzD,EAAM,IAAIy4C,GAEhB,OADAz4C,EAAI4M,KAAOkmC,GAAe4J,QACnB18C,EAGTyD,cAAczD,EAAiBwoD,EAAO,IAAInR,IAExC,OADAmR,EAAK57C,KAAO5M,EAAI4M,KACT47C,EAGT/kD,gBAAgBzD,EAAiBwoD,EAAO,IAAI,IAE1C,OADAA,EAAK57C,KAAO5M,EAAI4M,KACT47C,GCNJ,MAAMq0C,GACXp5F,kBACE,MAAMzD,EAAM,IAAI68F,GAchB,OAbA78F,EAAIw3C,eAAiB,KACrBx3C,EAAIm4C,cAAgB,KACpBn4C,EAAI2hC,SAAW,KACf3hC,EAAI4M,KAAOgmC,GAAW4F,MACtBx4C,EAAI8D,KAAO,YACX9D,EAAIy3C,MAAQ,8BACZz3C,EAAI03C,UAAW,EACf13C,EAAIi4C,OAAS,GACbj4C,EAAIs7B,MAAQ,KACZt7B,EAAI+3C,WAAa,KACjB/3C,EAAI83C,KAAO,KACX93C,EAAI0R,SAAW,KACf1R,EAAIq4C,SAAW1F,GAAmB2F,KAC3Bt4C,EAGTyD,cAAczD,EAAawoD,EAAO,IAAIjR,I,UAMpC,GALAiR,EAAK57C,KAAO5M,EAAI4M,KAChB47C,EAAK7mB,SAAW3hC,EAAI2hC,SACO,MAAvB6mB,EAAKhR,iBACPgR,EAAKhR,eAAiBx3C,EAAIw3C,gBAExBgR,EAAKrQ,eAAiBn4C,EAAIm4C,cAAe,CAC3C,MAAMnvC,EAAM,IAAIi0B,KAAuB,QAAlB,EAAAurB,EAAKrQ,qBAAa,QAAI,IAAIxhC,OAAwB,QAAjB,EAAA3W,EAAIm4C,qBAAa,QAAI,KAC3EqQ,EAAKrQ,cAAgB5xC,MAAM9B,KAAKuE,EAAI8zF,UAWtC,OATAt0C,EAAK1kD,KAAO9D,EAAI8D,KAChB0kD,EAAK/Q,MAAQz3C,EAAIy3C,MACjB+Q,EAAK9Q,SAAW13C,EAAI03C,SACpB8Q,EAAKnQ,SAAuB,QAAZ,EAAAr4C,EAAIq4C,gBAAQ,QAAI1F,GAAmB2F,KAEjC,MAAdt4C,EAAIi4C,SACNuQ,EAAKvQ,OAASj4C,EAAIi4C,OAAOxxC,KAAKmuB,GAAM6nE,GAAME,OAAO/nE,MAG3C50B,EAAI4M,MACV,KAAKgmC,GAAW4F,MACdgQ,EAAKltB,MAAQkd,GAAMmkD,OAAO38F,EAAIs7B,OAC9B,MACF,KAAKsX,GAAW6F,WACd+P,EAAKzQ,WAAaU,GAAWkkD,OAAO38F,EAAI+3C,YACxC,MACF,KAAKnF,GAAW8F,KACd8P,EAAK1Q,KAAOY,GAAKikD,OAAO38F,EAAI83C,MAC5B,MACF,KAAKlF,GAAW+F,SACd6P,EAAK92C,SAAWinC,GAASgkD,OAAO38F,EAAI0R,UAIxC,OAAO82C,EAGT/kD,gBAAgBzD,EAAayI,EAAS,IAAI,I,MAexC,OAdAA,EAAOmE,KAAO5M,EAAI4M,KAClBnE,EAAOk5B,SAAW3hC,EAAI2hC,SACO,MAAzBl5B,EAAO+uC,iBACT/uC,EAAO+uC,eAAiBx3C,EAAIw3C,gBAE9B/uC,EAAO3E,KAAmB,MAAZ9D,EAAI8D,KAAe,IAAI6V,GAAU3Z,EAAI8D,MAAQ,KAC3D2E,EAAOgvC,MAAqB,MAAbz3C,EAAIy3C,MAAgB,IAAI99B,GAAU3Z,EAAIy3C,OAAS,KAC9DhvC,EAAOivC,SAAW13C,EAAI03C,SACtBjvC,EAAO4vC,SAAuB,QAAZ,EAAAr4C,EAAIq4C,gBAAQ,QAAI1F,GAAmB2F,KAEnC,MAAdt4C,EAAIi4C,SACNxvC,EAAOwvC,OAASj4C,EAAIi4C,OAAOxxC,KAAKmuB,GAAM6nE,GAAMG,SAAShoE,MAG/C50B,EAAI4M,MACV,KAAKgmC,GAAW4F,MACd/vC,EAAO6yB,MAAQkd,GAAMokD,SAAS58F,EAAIs7B,OAClC,MACF,KAAKsX,GAAW6F,WACdhwC,EAAOsvC,WAAaU,GAAWmkD,SAAS58F,EAAI+3C,YAC5C,MACF,KAAKnF,GAAW8F,KACdjwC,EAAOqvC,KAAOY,GAAKkkD,SAAS58F,EAAI83C,MAChC,MACF,KAAKlF,GAAW+F,SACdlwC,EAAOiJ,SAAWinC,GAASikD,SAAS58F,EAAI0R,UAI5C,OAAOjJ,EAkBTs0F,MAAM7gD,G,QAwBJ,OAvBA16C,KAAKg2C,eAAiB0E,EAAE1E,eACxBh2C,KAAKmgC,SAAWua,EAAEva,SAClBngC,KAAKoL,KAAOsvC,EAAEtvC,KACdpL,KAAK62C,SAAW6D,EAAE7D,SAEd6D,aAAa3E,IACf/1C,KAAKsC,KAAOo4C,EAAEp4C,KACdtC,KAAKi2C,MAAQyE,EAAEzE,QAEfj2C,KAAKsC,KAAa,QAAN,EAAAo4C,EAAEp4C,YAAI,eAAEkW,gBACpBxY,KAAKi2C,MAAe,QAAP,EAAAyE,EAAEzE,aAAK,eAAEz9B,iBAGxBxY,KAAKk2C,SAAWwE,EAAExE,SAEF,MAAZwE,EAAEjE,SAEFz2C,KAAKy2C,OAASiE,EAAEjE,OAAOxxC,KAAKmuB,GAAM,IAAI6nE,GAAM7nE,MAMxCsnB,EAAEtvC,MACR,KAAKgmC,GAAW4F,MACdh3C,KAAK85B,MAAQ,IAAIkd,GAAM0D,EAAE5gB,OACzB,MACF,KAAKsX,GAAW6F,WACdj3C,KAAKu2C,WAAa,IAAIU,GAAWyD,EAAEnE,YACnC,MACF,KAAKnF,GAAW8F,KACdl3C,KAAKs2C,KAAO,IAAIY,GAAKwD,EAAEpE,MACvB,MACF,KAAKlF,GAAW+F,SACdn3C,KAAKkQ,SAAW,IAAIinC,GAASuD,EAAExqC,YCnJhC,MAAMsrF,WAAsBH,GAKjCE,MAAM7gD,GACJ16C,KAAKhB,GAAK07C,EAAE17C,GACZ8T,MAAMyoF,MAAM7gD,GACZ16C,KAAK22C,cAAgB+D,EAAE/D,eCTpB,MAAM8kD,GACXx5F,kBACE,MAAMzD,EAAM,IAAIi9F,GAIhB,OAHAj9F,EAAIw3C,eAAiB,uCACrBx3C,EAAI8D,KAAO,kBACX9D,EAAI2gE,WAAa,KACV3gE,EAGTyD,cAAczD,EAAiBwoD,EAAO,IAAI0oC,IAMxC,OALA1oC,EAAK1kD,KAAO9D,EAAI8D,KAChB0kD,EAAKmY,WAAa3gE,EAAI2gE,WACK,MAAvBnY,EAAKhR,iBACPgR,EAAKhR,eAAiBx3C,EAAIw3C,gBAErBgR,EAGT/kD,gBAAgBzD,EAAiByI,EAAS,IAAI,IAM5C,OALAA,EAAO3E,KAAmB,MAAZ9D,EAAI8D,KAAe,IAAI6V,GAAU3Z,EAAI8D,MAAQ,KAC3D2E,EAAOk4D,WAAa3gE,EAAI2gE,WACK,MAAzBl4D,EAAO+uC,iBACT/uC,EAAO+uC,eAAiBx3C,EAAIw3C,gBAEvB/uC,EAQTs0F,MAAM7gD,G,MACJ16C,KAAKg2C,eAAiB0E,EAAE1E,eAEtBh2C,KAAKsC,KADHo4C,aAAag1C,GACHh1C,EAAEp4C,KAEI,QAAN,EAAAo4C,EAAEp4C,YAAI,eAAEkW,gBAEtBxY,KAAKm/D,WAAazkB,EAAEykB,YCtCjB,MAAMu8B,WAAyBD,GAIpCF,MAAM7gD,GACJ16C,KAAKhB,GAAK07C,EAAE17C,GACZ8T,MAAMyoF,MAAM7gD,ICTT,MAAMihD,GAWXp8F,YAAY2B,GACVlB,KAAK8T,QAAU5S,EAAM06F,qBACrB57F,KAAK67F,QAAU36F,EAAM26F,QACrB77F,KAAK87F,QAAU56F,EAAM46F,QACrB97F,KAAKgoB,OAAS9mB,EAAM8mB,OACpBhoB,KAAK+7F,SAAW76F,EAAM66F,SACtB/7F,KAAKg8F,UAAY96F,EAAM86F,UACvBh8F,KAAKg+D,KAAO98D,EAAM88D,KAClBh+D,KAAKi8F,GAAK/6F,EAAM+6F,GAChBj8F,KAAKoL,KAAOwwB,GAAU16B,EAAMkK,OChBzB,MAAM,WAAeyd,GAK1BtpB,YAAY8I,EAAkB2gB,GAA4B,GACxDlW,QACW,MAAPzK,IAIJrI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJsD,KAAM,MAER0mB,EACA,CAAC,OAGHhpB,KAAKy/B,aAAmC,MAApBp3B,EAAIo3B,aAAuB,IAAI1yB,KAAK1E,EAAIo3B,cAAgB,MAG9ExmB,UACE,OAAOjZ,KAAKqpB,WACV,IAAImW,GAAWx/B,MACf,CACEsC,KAAM,MAER,OCjCC,MAAM45F,GACXj6F,kBACE,MAAMzD,EAAM,IAAI09F,GAEhB,OADA19F,EAAI8D,KAAO,cACJ9D,EAGTyD,cAAczD,EAAawoD,EAAO,IAAIxnB,IAEpC,OADAwnB,EAAK1kD,KAAO9D,EAAI8D,KACT0kD,EAGT/kD,gBAAgBzD,EAAayI,EAAS,IAAI,IAExC,OADAA,EAAO3E,KAAmB,MAAZ9D,EAAI8D,KAAe,IAAI6V,GAAU3Z,EAAI8D,MAAQ,KACpD2E,EAMTs0F,MAAM7gD,G,MAEF16C,KAAKsC,KADHo4C,aAAalb,GACHkb,EAAEp4C,KAEI,QAAN,EAAAo4C,EAAEp4C,YAAI,eAAEkW,iBCvBnB,MAAM2jF,WAAqBD,GAIhCX,MAAM7gD,GACJ16C,KAAKhB,GAAK07C,EAAE17C,GACZ8T,MAAMyoF,MAAM7gD,I,ICZJ0hD,G,wSAAZ,SAAYA,GACV,uBACA,qBAFF,CAAYA,KAAAA,GAAc,K,2SCSnB,MAAMC,GACX98F,YAAoBgW,GAAA,KAAAA,WAAAA,EAEd+mF,OAAOl8F,EAAasK,EAAsB6xF,G,0CAC9C,OAAI7xF,EAAK1G,OAAOG,YAPgB,gBAQjBnE,KAAKw8F,gBAAgBp8F,EAAKsK,SAE1B1K,KAAKy8F,kBAAkBr8F,EAAKsK,EAAM6xF,MAGrCC,gBAAgBp8F,EAAasK,G,0CACzC,MAAMgyF,EAAY16F,EAAMmE,OAAO/F,GACzBywB,EAAU,IAAImgD,QAAQ,CAC1B,aAAa,IAAIjkE,MAAO4vF,cACxB,eAAgBD,EAAUE,aAAa9pE,IAAI,MAC3C,iBAAkBpoB,EAAK1G,OAAOG,WAAWF,WACzC,iBAAkB,cAGd2K,EAAU,IAAImyC,QAAQ3gD,EAAK,CAC/B0N,KAAMpD,EAAK1G,OACXg9C,MAAO,WACPqwB,OAAQ,MACRxgD,QAASA,IAGLgsE,QAAqB/7C,MAAMlyC,GAEjC,GAA4B,MAAxBiuF,EAAanpF,OACf,MAAM,IAAI7U,MAAM,gCAAgCg+F,EAAanpF,aAGnD+oF,kBACZr8F,EACAsK,EACA6xF,G,0CAEA,MAAM5sF,EAAU3N,EAAMmE,OAAO/F,GACvB08F,EAAY98F,KAAK+8F,gBAAgBptF,EAAQitF,aAAa9pE,IAAI,OAChE,IAAIkqE,EAAa,EACjB,MAAMC,EAAYn3F,KAAKkzF,KAAKtuF,EAAK1G,OAAOG,WAAa24F,GAC/CI,EAAyB,GAE/B,GAAID,EA7CoB,IA8CtB,MAAM,IAAIp+F,MACR,+CA/CoB,IA+C2Bi+F,GAInD,IACE,KAAOE,EAAaC,GAAW,CAC7B78F,QAAYJ,KAAKm9F,oBAAoB/8F,EAAKm8F,GAC1C,MAAMa,EAAWp7F,EAAMmE,OAAO/F,GACxBi9F,EAAUr9F,KAAKs9F,eAAeN,GACpCI,EAASR,aAAa/qE,OAAO,OAAQ,SACrCurE,EAASR,aAAa/qE,OAAO,UAAWwrE,GACxC,MAAMv9E,EAAQk9E,EAAaF,EACrBS,EAAY7yF,EAAK1G,OAAOoB,MAAM0a,EAAOA,EAAQg9E,GAC7CU,EAAe,IAAIxsB,QAAQ,CAC/B,aAAa,IAAIjkE,MAAO4vF,cACxB,eAAgBS,EAASR,aAAa9pE,IAAI,MAC1C,iBAAkByqE,EAAUp5F,WAAWF,aAGnCw5F,EAAe,IAAI18C,QAAQq8C,EAASn5F,WAAY,CACpD6J,KAAMyvF,EACNv8C,MAAO,WACPqwB,OAAQ,MACRxgD,QAAS2sE,IAGLE,QAAsB58C,MAAM28C,GAElC,GAA6B,MAAzBC,EAAchqF,OAAgB,CAChC,MAAMI,EAAU,2CAA2C4pF,EAAchqF,SAEzE,MADA1T,KAAKuV,WAAWK,MAAM9B,EAAU,YAAc4pF,EAAclsB,SACtD,IAAI3yE,MAAMiV,GAGlBopF,EAAapoF,KAAKuoF,GAClBL,IAGF58F,QAAYJ,KAAKm9F,oBAAoB/8F,EAAKm8F,GAC1C,MAAMoB,EAAe37F,EAAMmE,OAAO/F,GAC5Bw9F,EAAe59F,KAAK49F,aAAaV,GACvCS,EAAaf,aAAa/qE,OAAO,OAAQ,aACzC,MAAMhB,EAAU,IAAImgD,QAAQ,CAC1B,aAAa,IAAIjkE,MAAO4vF,cACxB,eAAgBgB,EAAaf,aAAa9pE,IAAI,MAC9C,iBAAkB8qE,EAAav6F,OAAOY,aAGlC2K,EAAU,IAAImyC,QAAQ48C,EAAa15F,WAAY,CACnD6J,KAAM8vF,EACN58C,MAAO,WACPqwB,OAAQ,MACRxgD,QAASA,IAGLjlB,QAAiBk1C,MAAMlyC,GAE7B,GAAwB,MAApBhD,EAAS8H,OAAgB,CAC3B,MAAMI,EAAU,gDAAgDlI,EAAS8H,SAEzE,MADA1T,KAAKuV,WAAWK,MAAM9B,EAAU,YAAclI,EAAS4lE,SACjD,IAAI3yE,MAAMiV,IAElB,MAAOlV,GACP,MAAMA,MAIIu+F,oBACZ/8F,EACAm8F,G,gDAEA,MAAMG,EAAY16F,EAAMmE,OAAO/F,GACzBy9F,EAAS,IAAI9wF,KAAqC,QAAhC,EAAA2vF,EAAUE,aAAa9pE,IAAI,aAAK,QAAI,IAM5D,OAJItqB,MAAMq1F,EAAO7wF,YACf6wF,EAAOrnC,QAAQzpD,KAAKupD,MAAQ,MAG1BunC,EAAO7wF,UAAYD,KAAKupD,MAAQ,UACrBimC,IAERn8F,KAGDk9F,eAAeN,GAErB,MAAMc,GACJ,mDAAqDd,EAAW/4F,YAChEmB,OAAO,IACT,OAAOpD,EAAM+7F,cAAcD,GAGrBF,aAAaI,GACnB,IAAIC,EAAM,oDAKV,OAJAD,EAAY32F,SAASg2F,IACnBY,GAAO,WAAWZ,gBAEpBY,GAAO,eACAA,EAGDlB,gBAAgB7xF,GACtB,OAAIgzF,GAAQn2F,QAAQmD,EAAS,eAAiB,EACrC,UACEgzF,GAAQn2F,QAAQmD,EAAS,eAAiB,EAC5C,UAEA,SAKb,MAAMgzF,GA6BJ3+F,YAAY2L,GAJZ,KAAAslC,KAAO,EACP,KAAA2tD,MAAQ,EACR,KAAAC,IAAM,EAGJ,IACE,MAAM72F,EAAQ2D,EAAQ9D,MAAM,KAAKnC,KAAKwb,GAAMlY,OAAO7E,SAAS+c,EAAG,MAC/DzgB,KAAKwwC,KAAOjpC,EAAM,GAClBvH,KAAKm+F,MAAQ52F,EAAM,GACnBvH,KAAKo+F,IAAM72F,EAAM,GACjB,WA3BJtF,eAAe2F,EAA+BC,GAS5C,MARiB,iBAAND,IACTA,EAAI,IAAIs2F,GAAQt2F,IAGD,iBAANC,IACTA,EAAI,IAAIq2F,GAAQr2F,IAGXD,EAAE4oC,OAAS3oC,EAAE2oC,KAChB5oC,EAAE4oC,KAAO3oC,EAAE2oC,KACX5oC,EAAEu2F,QAAUt2F,EAAEs2F,MACdv2F,EAAEu2F,MAAQt2F,EAAEs2F,MACZv2F,EAAEw2F,MAAQv2F,EAAEu2F,IACZx2F,EAAEw2F,IAAMv2F,EAAEu2F,IACV,EAsBNr2F,QAAQs2F,GACN,OAAOH,GAAQn2F,QAAQ/H,KAAMq+F,I,2SC9M1B,MAAMC,GACX/+F,YAAoB8W,GAAA,KAAAA,WAAAA,EAEdimF,OACJiC,EACAC,EACAC,G,0CAEA,MAAM1Q,EAAK,IAAIxL,SACf,IACE,MAAM/0E,EAAO,IAAIC,KAAK,CAAC+wF,EAAkBx6F,QAAS,CAAEoH,KAAM,6BAC1D2iF,EAAGl8D,OAAO,OAAQrkB,EAAM+wF,GACxB,MAAO3/F,GACP,IAAIoD,EAAMG,QAAWH,EAAMO,UAUzB,MAAM3D,EATNmvF,EAAGl8D,OACD,OACA7uB,OAAOC,KAAKu7F,EAAkBx6F,QAC9B,CACEgqF,SAAUuQ,EACVtQ,YAAa,mCAQfwQ,EAAQ1Q,O,2SC/BX,MAAM2Q,GAMXn/F,YAAYqM,EAA0Boc,GACpChoB,KAAKgoB,OAASA,EACdhoB,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKy/B,aAAe7zB,EAAS6zB,cCV1B,MAAMk/D,GAGXp/F,YAAYwgC,GACV//B,KAAKsC,KAAOy9B,EAAOz9B,KAAOy9B,EAAOz9B,KAAKkW,gBAAkB,M,2SCN5D,IAAYomF,IAAZ,SAAYA,GACV,qBACA,qBACA,mBACA,yBACA,uBALF,CAAYA,KAAAA,GAAoB,K,+SCApBC,G,yBAAZ,SAAYA,GACV,2CACA,2CACA,yCACA,2CACA,iCAEA,6BACA,iCACA,2CACA,2CACA,2CACA,oCAEA,wBAEA,wCACA,wCACA,wCAlBF,CAAYA,KAAAA,GAAgB,KCIrB,MAAMC,WAA6B3rF,EAKxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAK++F,UAAY/+F,KAAKoT,oBAAoB,aAC1CpT,KAAKoL,KAAOpL,KAAKoT,oBAAoB,QAErC,MAAM4rF,EAAUh/F,KAAKoT,oBAAoB,WACzC,OAAQpT,KAAKoL,MACX,KAAKyzF,GAAiBI,iBACtB,KAAKJ,GAAiBK,iBACtB,KAAKL,GAAiBM,iBACtB,KAAKN,GAAiBO,gBACpBp/F,KAAKg/F,QAAU,IAAIK,GAAuBL,GAC1C,MACF,KAAKH,GAAiBS,iBACtB,KAAKT,GAAiBU,iBACtB,KAAKV,GAAiBW,iBACpBx/F,KAAKg/F,QAAU,IAAIS,GAAuBT,GAC1C,MACF,KAAKH,GAAiBa,UACtB,KAAKb,GAAiBc,YACtB,KAAKd,GAAiBe,YACtB,KAAKf,GAAiBgB,aACtB,KAAKhB,GAAiBiB,OACpB9/F,KAAKg/F,QAAU,IAAIe,GAAiBf,GACpC,MACF,KAAKH,GAAiBmB,eACtB,KAAKnB,GAAiBoB,eACtB,KAAKpB,GAAiBqB,eACpBlgG,KAAKg/F,QAAU,IAAImB,GAAqBnB,KAOzC,MAAMK,WAA+BlsF,EAO1C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKg2C,eAAiBh2C,KAAKoT,oBAAoB,kBAC/CpT,KAAK22C,cAAgB32C,KAAKoT,oBAAoB,iBAC9CpT,KAAKy/B,aAAe,IAAI1yB,KAAK/M,KAAKoT,oBAAoB,kBAInD,MAAMqsF,WAA+BtsF,EAK1C5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKy/B,aAAe,IAAI1yB,KAAK/M,KAAKoT,oBAAoB,kBAInD,MAAM2sF,WAAyB5sF,EAIpC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKg+D,KAAO,IAAIjxD,KAAK/M,KAAKoT,oBAAoB,UAI3C,MAAM+sF,WAA6BhtF,EAKxC5T,YAAYqM,GACVkH,MAAMlH,GACN5L,KAAKhB,GAAKgB,KAAKoT,oBAAoB,MACnCpT,KAAKgoB,OAAShoB,KAAKoT,oBAAoB,UACvCpT,KAAKy/B,aAAe,IAAI1yB,KAAK/M,KAAKoT,oBAAoB,kB,2SCzEnD,MAAMgtF,GAQX7gG,YACU4jB,EACAk9E,EACAhqF,EACA7W,EACA6P,EACA2gE,EACAz6D,EACA3V,GAPA,KAAAujB,YAAAA,EACA,KAAAk9E,aAAAA,EACA,KAAAhqF,WAAAA,EACA,KAAA7W,oBAAAA,EACA,KAAA6P,mBAAAA,EACA,KAAA2gE,eAAAA,EACA,KAAAz6D,WAAAA,EACA,KAAA3V,aAAAA,EAbF,KAAA0gG,WAAY,EACZ,KAAAp+F,QAAS,EACT,KAAAq+F,UAAW,EACX,KAAAC,eAAsB,KAY5BxgG,KAAKqP,mBAAmBI,KAAKpO,WAAU,KAChCrB,KAAKkC,QAIVlC,KAAK2J,UAIHA,O,0CACJ3J,KAAKkC,QAAS,EACdlC,KAAKI,IAAMJ,KAAKqP,mBAAmBoxF,sBAIlB,cAAbzgG,KAAKI,MAIqB,MAA1BJ,KAAK0gG,oBACP1gG,KAAK0gG,kBAAkBC,IAAI,kBAC3B3gG,KAAK0gG,kBAAkBC,IAAI,mBACrB3gG,KAAK0gG,kBAAkB7gF,OAC7B7f,KAAKsgG,WAAY,EACjBtgG,KAAK0gG,kBAAoB,MAG3B1gG,KAAK0gG,mBAAoB,IAAI,OAC1BE,QAAQ5gG,KAAKI,IAAM,OAAQ,CAC1BygG,mBAAoB,IAAM7gG,KAAKqW,WAAW0pE,uBAC1C+gB,iBAAiB,EACjBC,UAAW,mBAEZC,gBAAgB,IAAI,MAEpBzF,QAEHv7F,KAAK0gG,kBAAkBO,GAAG,kBAAmBv2F,GAC3C1K,KAAKkhG,oBAAoB,IAAIpC,GAAqBp0F,MAEpD1K,KAAK0gG,kBAAkBO,GAAG,aAAcv2F,QAGxC1K,KAAK0gG,kBAAkBS,SAAQ,KAC7BnhG,KAAKsgG,WAAY,EACjBtgG,KAAKohG,WAAU,MAEjBphG,KAAKkC,QAAS,SACJlC,KAAKqhG,+BACPrhG,KAAKohG,WAAU,QAInBE,iBAAiBzvD,GAAO,G,0CAC5B,GAAK7xC,KAAKkC,OAGV,WACYlC,KAAKqhG,6BACPrhG,KAAKohG,UAAUvvD,SAEf7xC,KAAK0gG,kBAAkB7gF,OAE/B,MAAOjhB,GACPoB,KAAKuV,WAAWK,MAAMhX,EAAEqF,gBAItBs9F,wB,0CACJvhG,KAAKugG,UAAW,EACZvgG,KAAKkC,SAAWlC,KAAKsgG,kBACjBtgG,KAAKohG,WAAU,OAInBI,2B,0CACJxhG,KAAKugG,UAAW,EACZvgG,KAAKkC,QAAUlC,KAAKsgG,kBAChBtgG,KAAK0gG,kBAAkB7gF,WAInBqhF,oBAAoBO,G,0CAChC,MAAM1yE,QAAc/uB,KAAKqgG,aAAaqB,WACtC,GAAoB,MAAhBD,GAAwBA,EAAa1C,YAAchwE,EACrD,OAGF,MAAM4yE,QAAwB3hG,KAAKJ,aAAaK,qBAC1C2hG,EAAgBH,EAAazC,QAAQh3E,QAAUy5E,EAAazC,QAAQ6C,OACpEC,QAAiB9hG,KAAKJ,aAAaqoB,YACzC,IAAI05E,GAAoC,MAAjBC,GAAyBA,IAAkBE,EAIlE,OAAQL,EAAar2F,MACnB,KAAKyzF,GAAiBI,iBACtB,KAAKJ,GAAiBM,uBACdn/F,KAAKmjB,YAAY4+E,iBACrBN,EAAazC,QACbyC,EAAar2F,OAASyzF,GAAiBM,kBAEzC,MACF,KAAKN,GAAiBK,iBACtB,KAAKL,GAAiBO,sBACdp/F,KAAKmjB,YAAY6+E,iBAAiBP,EAAazC,SACrD,MACF,KAAKH,GAAiBS,iBACtB,KAAKT,GAAiBW,uBACdx/F,KAAKmjB,YAAY8+E,iBACrBR,EAAazC,QACbyC,EAAar2F,OAASyzF,GAAiBW,kBAEzC,MACF,KAAKX,GAAiBU,uBACdv/F,KAAKmjB,YAAY++E,iBAAiBT,EAAazC,SACrD,MACF,KAAKH,GAAiBa,UACtB,KAAKb,GAAiBc,YACtB,KAAKd,GAAiBgB,aAChB8B,UACI3hG,KAAKmjB,YAAYC,UAAS,IAElC,MACF,KAAKy7E,GAAiBe,YAChB+B,UACI3hG,KAAKmjB,YAAYC,UAAS,SAE1BpjB,KAAK0gG,kBAAkB7gF,QAE/B,MACF,KAAKg/E,GAAiBiB,OAChB6B,GACF3hG,KAAKgwE,iBAEP,MACF,KAAK6uB,GAAiBmB,eACtB,KAAKnB,GAAiBoB,qBACdjgG,KAAKmjB,YAAYg/E,eACrBV,EAAazC,QACbyC,EAAar2F,OAASyzF,GAAiBoB,gBAEzC,MACF,KAAKpB,GAAiBqB,qBACdlgG,KAAKmjB,YAAYi/E,eAAeX,EAAazC,aAM3CoC,UAAUvvD,G,0CAKtB,GAJ2B,MAAvB7xC,KAAKwgG,iBACPj7E,aAAavlB,KAAKwgG,gBAClBxgG,KAAKwgG,eAAiB,MAEpBxgG,KAAKsgG,YAActgG,KAAKkC,QAAUlC,KAAKugG,SACzC,OAGF,SADgCvgG,KAAKqhG,sBACrC,CAIA,UACQrhG,KAAK0gG,kBAAkB5gF,QAC7B9f,KAAKsgG,WAAY,EACbzuD,UACI7xC,KAAKmjB,YAAYC,UAAS,IAElC,MAAOxkB,GACPoB,KAAKuV,WAAWK,MAAMhX,GAGnBoB,KAAKsgG,YACRtgG,KAAKwgG,eAAiB9hF,YAAW,IAAM1e,KAAKohG,UAAUvvD,IAAO7xC,KAAK+F,OAAO,KAAQ,WAIvEs7F,sB,0CACZ,SAAUrhG,KAAKJ,aAAaK,qBAAsB,CAEhD,cADqBD,KAAKR,oBAAoBW,YAGhD,OAAO,KAGD4F,OAAO6yF,EAAahsD,GAG1B,OAFAgsD,EAAM9yF,KAAKkzF,KAAKJ,GAChBhsD,EAAM9mC,KAAKmH,MAAM2/B,GACV9mC,KAAKmH,MAAMnH,KAAKC,UAAY6mC,EAAMgsD,EAAM,IAAMA,GC7NlD,MAAMyJ,GAoCX9iG,YAAY8I,GACC,MAAPA,IAIJrI,KAAKhB,GAAKqJ,EAAIrJ,GACdgB,KAAKsC,KAAO+F,EAAI/F,KAChBtC,KAAK0T,OAASrL,EAAIqL,OAClB1T,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAK26C,QAAUtyC,EAAIsyC,QACnB36C,KAAKurE,YAAcljE,EAAIkjE,YACvBvrE,KAAKkoE,UAAY7/D,EAAI6/D,UACrBloE,KAAKmoE,aAAe9/D,EAAI8/D,aACxBnoE,KAAKooE,UAAY//D,EAAI+/D,UACrBpoE,KAAKs8C,QAAUj0C,EAAIi0C,QACnBt8C,KAAKqoE,OAAShgE,EAAIggE,OAClBroE,KAAKsoE,OAASjgE,EAAIigE,OAClBtoE,KAAKwrE,OAASnjE,EAAImjE,OAClBxrE,KAAKyrE,gBAAkBpjE,EAAIojE,gBAC3BzrE,KAAKuoE,iBAAmBlgE,EAAIkgE,iBAC5BvoE,KAAK0rE,SAAWrjE,EAAIqjE,SACpB1rE,KAAKymE,gBAAkBp+D,EAAIo+D,gBAC3BzmE,KAAK+nE,MAAQ1/D,EAAI0/D,MACjB/nE,KAAKwlE,eAAiBn9D,EAAIm9D,eAC1BxlE,KAAKioE,aAAe5/D,EAAI4/D,aACxBjoE,KAAK2rE,SAAWtjE,EAAIsjE,SACpB3rE,KAAKqnB,WAAahf,EAAIgf,WACtBrnB,KAAK2O,YAActG,EAAIsG,YACvB3O,KAAKirE,sBAAwB5iE,EAAI4iE,sBACjCjrE,KAAKgoB,OAAS3f,EAAI2f,OAClBhoB,KAAKwoE,wBAA0BngE,EAAImgE,wBACnCxoE,KAAKwgE,WAAan4D,EAAIm4D,WACtBxgE,KAAK4rE,aAAevjE,EAAIujE,aACxB5rE,KAAKsiG,eAAiBj6F,EAAIi6F,eAC1BtiG,KAAK6rE,8BAAgCxjE,EAAIwjE,8BACzC7rE,KAAK8rE,2BAA6BzjE,EAAIyjE,2BACtC9rE,KAAK+rE,gBAAkB1jE,EAAI0jE,gBAC3B/rE,KAAK2iE,oBAAsBt6D,EAAIs6D,oBAC/B3iE,KAAK8hE,gBAAkBz5D,EAAIy5D,iBAGzBygC,gBACF,OAAIviG,KAAKoL,OAASwzF,GAAqB4D,OAGhCxiG,KAAK26C,SAAW36C,KAAK0T,SAAW29B,GAA2BuJ,UAGhE6nD,gBACF,OACEziG,KAAKoL,OAASwzF,GAAqB8D,SACnC1iG,KAAKoL,OAASwzF,GAAqB4D,OACnCxiG,KAAKoL,OAASwzF,GAAqB+D,MAInCC,cACF,OAAO5iG,KAAKoL,OAASwzF,GAAqB4D,OAASxiG,KAAKoL,OAASwzF,GAAqB+D,MAGpFE,cACF,OAAO7iG,KAAKoL,OAASwzF,GAAqB4D,OAASxiG,KAAKsiG,eAGtDQ,yBACF,OAAO9iG,KAAK4iG,SAAW5iG,KAAK2O,YAAYq7D,gBAGtC+4B,4BACF,OAAO/iG,KAAK4iG,SAAW5iG,KAAK2O,YAAYs7D,mBAGtC+4B,uBACF,OAAOhjG,KAAK4iG,SAAW5iG,KAAK2O,YAAYu7D,cAGtC+4B,8B,MACF,OACEjjG,KAAKyiG,YACiC,QAArC,EAAAziG,KAAK2O,YAAY07D,4BAAoB,QAAIrqE,KAAK2O,YAAYw7D,sBAI3D+4B,2B,MACF,OACEljG,KAAK4iG,UAA8C,QAAlC,EAAA5iG,KAAK2O,YAAY27D,yBAAiB,QAAItqE,KAAK2O,YAAYw7D,sBAIxEg5B,6B,MACF,OACEnjG,KAAK4iG,UACgC,QAApC,EAAA5iG,KAAK2O,YAAY47D,2BAAmB,QAAIvqE,KAAK2O,YAAYw7D,sBAI1Di5B,4BACF,OAAOpjG,KAAKijG,yBAA2BjjG,KAAKkjG,sBAAwBljG,KAAKmjG,uBAGvEE,iC,MACF,OACErjG,KAAKyiG,YACoC,QAAxC,EAAAziG,KAAK2O,YAAY67D,+BAAuB,QAAIxqE,KAAK2O,YAAYy7D,2BAI9Dk5B,mC,MACF,OACEtjG,KAAKyiG,YACsC,QAA1C,EAAAziG,KAAK2O,YAAY87D,iCAAyB,QAAIzqE,KAAK2O,YAAYy7D,2BAIhEm5B,iCACF,OAAOvjG,KAAKsjG,8BAAgCtjG,KAAKqjG,2BAG/CG,sBACF,OAAOxjG,KAAK4iG,SAAW5iG,KAAK2O,YAAYg8D,aAGtC84B,mBACF,OAAOzjG,KAAK4iG,SAAW5iG,KAAK2O,YAAYi8D,UAGtC84B,wBACF,OAAO1jG,KAAK4iG,SAAW5iG,KAAK2O,YAAYk8D,eAGtC84B,qBACF,OAAO3jG,KAAK4iG,SAAW5iG,KAAK2O,YAAYm8D,YAGtC84B,6BACF,OAAO5jG,KAAK4iG,SAAW5iG,KAAK2O,YAAYo8D,oBAGtC84B,2BACF,OAAO7jG,KAAK0jG,mB,2TCtLT,MAAMI,GAIXvkG,YAAY4wB,EAAkB6tC,GAC5Bh+D,KAAKmwB,SAAWA,EAChBnwB,KAAKg+D,KAAOA,GCJT,MAAM+lC,WAAuCl7E,GAApD,c,oBACE,KAAAm7E,YAAsB,GACtB,KAAAh6E,UAAoB,EACpB,KAAAi6E,cAAwB,EACxB,KAAAC,cAAwB,EACxB,KAAAC,YAAsB,EACtB,KAAAC,YAAsB,EACtB,KAAAC,YAAsB,EACtB,KAAAC,aAAuB,EACvB,KAAAC,eAAyB,EACzB,KAAAC,YAAsB,EACtB,KAAAC,eAAyB,EAEzBC,WACE,MACuB,KAArB1kG,KAAKgkG,aACLhkG,KAAKgqB,UAAY,GACjBhqB,KAAKokG,YAAc,GACnBpkG,KAAKskG,aAAe,GACpBtkG,KAAKikG,cACLjkG,KAAKkkG,cACLlkG,KAAKmkG,YACLnkG,KAAKqkG,YACLrkG,KAAKukG,eAAiB,GACtBvkG,KAAKwkG,YACLxkG,KAAKykG,e,2SCXX,MAAME,GAAiB,CACrBthG,OAAQ,GACRs1B,WAAW,EACXS,QAAQ,EACRwrE,UAAW,EACX3tF,WAAW,EACX4tF,aAAc,EACd3tF,WAAW,EACX4tF,aAAc,EACd1tF,SAAS,EACT2tF,WAAY,EACZ35F,KAAM,WACNovF,SAAU,EACVwK,cAAe,IACfR,YAAY,EACZC,eAAe,GC3BV,MAAMQ,GAOX1lG,YAAYqM,GACV5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKg2C,eAAiBpqC,EAASoqC,eAC/Bh2C,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAK0K,KAAOkB,EAASlB,KACrB1K,KAAK26C,QAAU/uC,EAAS+uC,SCVrB,MAAMuqD,WAAer8E,GAO1BtpB,YAAY8I,GACVyK,QACW,MAAPzK,IAIJrI,KAAKhB,GAAKqJ,EAAIrJ,GACdgB,KAAKg2C,eAAiB3tC,EAAI2tC,eAC1Bh2C,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAK0K,KAAOrC,EAAIqC,KAChB1K,KAAK26C,QAAUtyC,EAAIsyC,UCrBhB,MAAMwqD,WAAmCt8E,GAAhD,c,oBACE,KAAAu8E,mBAA6B,G,ICHnBC,GCAAC,G,wSDAZ,SAAYD,GACV,yBACA,2BACA,6BAHF,CAAYA,KAAAA,GAAsB,KCAlC,SAAYC,GACV,qCACA,iCAFF,CAAYA,KAAAA,GAAgB,KCIrB,MAAMC,GASXhmG,YAAY8I,GACC,MAAPA,IAIJrI,KAAKhB,GAAKqJ,EAAIrJ,GACdgB,KAAKsC,KAAO+F,EAAI/F,KAChBtC,KAAK0T,OAASrL,EAAIqL,OAClB1T,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAK26C,QAAUtyC,EAAIsyC,QACnB36C,KAAKgoB,OAAS3f,EAAI2f,OAClBhoB,KAAKooE,UAAY//D,EAAI+/D,WAGnBm6B,gBACF,QAAIviG,KAAKwlG,iBAGFxlG,KAAK26C,SAAW36C,KAAK0T,SAAW2xF,GAAuBzqD,UAG5D6qD,6BACF,OAAOzlG,KAAK26C,SAAW36C,KAAKwlG,gBAG1B7B,qBACF,OAAO3jG,KAAKwlG,gBAGV1C,yBACF,OAAO9iG,KAAKwlG,gBAGVA,sBACF,OAAOxlG,KAAKoL,OAASk6F,GAAiBI,e,kmBCjCnC,MAAM,GAMXnmG,YACUs5C,EACAtjC,EACA7N,GAFA,KAAAmxC,cAAAA,EACA,KAAAtjC,WAAAA,EACA,KAAA7N,YAAAA,EARV,KAAAy6C,gBAA2B,KACnB,KAAAwjD,UAAW,EACX,KAAArqE,MAAoB,KACpB,KAAAsqE,oBAAsB,GAO4B,IAApD,CAAC,QAAS,SAASn/F,QAAQiB,EAAYyZ,UACzCnhB,KAAK4lG,oBAAsB,GAI/B5c,aACEhpF,KAAKmiD,gBAAkB,KACvBniD,KAAKs7B,MAAQ,KAGfkoB,aAAaj5C,GAKX,QAHW,MAATA,GACe,MAAdvK,KAAKs7B,OAAiB/wB,EAAMlH,OAASrD,KAAK4lG,qBAC5B,MAAd5lG,KAAKs7B,OAAiB/wB,EAAMlH,OAASrD,KAAK4lG,qBAA8C,IAAvBr7F,EAAM9D,QAAQ,MAI9EwiF,aAAa9mC,EAA0B50B,G,0CAC3C,GAAIvtB,KAAK2lG,SACP,OAGF3lG,KAAKuV,WAAW07E,KAAK,mBACrBjxF,KAAK2lG,UAAW,EAChB3lG,KAAKmiD,gBAAkBA,EACvBniD,KAAKs7B,MAAQ,KACb,MAAMuqE,EAAU,IAAIC,GAAKC,QACzBF,EAAQh3D,IAAI,MACZg3D,EAAQ1nD,MAAM,UAAW,CAAE6nD,MAAO,IAAKC,UAAYrgG,GAAkBA,EAAE5G,GAAG2E,OAAO,EAAG,KACpFkiG,EAAQ1nD,MAAM,OAAQ,CAAE6nD,MAAO,KAC/BH,EAAQ1nD,MAAM,WAAY,CACxB6nD,MAAO,EACPC,UAAYrgG,GACQ,MAAdA,EAAEytC,UAAoBztC,EAAEwF,OAASgmC,GAAW8F,KACvCtxC,EAAEytC,SAAS3uC,QAAQ,MAAO,IAE5BkB,EAAEytC,WAGbwyD,EAAQ1nD,MAAM,SACd0nD,EAAQ1nD,MAAM,iBAAkB,CAC9B8nD,UAAYrgG,GACVA,EAAEwF,OAASgmC,GAAW4F,OAAoB,MAAXpxC,EAAEk0B,MAAgBl0B,EAAEk0B,MAAM5J,SAAW,OAExE21E,EAAQ1nD,MAAM,aAAc,CAAE6nD,MAAO,EAAGC,UAAYrgG,GAAkB5F,KAAKkmG,aAAatgG,KACxFigG,EAAQ1nD,MAAM,SAAU,CAAE8nD,UAAYrgG,GAAkB5F,KAAKmmG,eAAevgG,GAAG,KAC/EigG,EAAQ1nD,MAAM,gBAAiB,CAAE8nD,UAAYrgG,GAAkB5F,KAAKmmG,eAAevgG,GAAG,KACtFigG,EAAQ1nD,MAAM,cAAe,CAC3B8nD,UAAYrgG,GAAkB5F,KAAKomG,oBAAoBxgG,GAAG,KAE5DigG,EAAQ1nD,MAAM,qBAAsB,CAClC8nD,UAAYrgG,GAAkB5F,KAAKomG,oBAAoBxgG,GAAG,KAE5DigG,EAAQ1nD,MAAM,iBAAkB,CAAE8nD,UAAYrgG,GAAkBA,EAAEowC,kBAClEzoB,EAAUA,UAAkBvtB,KAAK64C,cAAcpY,oBACvCp5B,SAASzB,GAAMigG,EAAQj0F,IAAIhM,KACnC5F,KAAKs7B,MAAQuqE,EAAQtK,QAErBv7F,KAAK2lG,UAAW,EAEhB3lG,KAAKuV,WAAW67E,QAAQ,sBAGpB1tC,cACJn5C,EACAtJ,EAAkF,KAClFssB,EAAwB,M,0CAExB,MAAM84E,EAAwB,GAkB9B,GAjBa,MAAT97F,IACFA,EAAQA,EAAMjE,OAAOmB,eAET,KAAV8C,IACFA,EAAQ,MAGK,MAAXgjB,IACFA,QAAgBvtB,KAAK64C,cAAcpY,mBAGvB,MAAVx/B,GAAkB8D,MAAMuhG,QAAQrlG,IAAWA,EAAOoC,OAAS,EAC7DkqB,EAAUA,EAAQtsB,QAAQ2E,GAAM3E,EAAO6rC,OAAO1Z,GAAW,MAALA,GAAaA,EAAExtB,OAChD,MAAV3E,IACTssB,EAAUA,EAAQtsB,OAAOA,KAGtBjB,KAAKwjD,aAAaj5C,GACrB,OAAOgjB,EAGLvtB,KAAK2lG,iBACD,IAAIlnG,SAASoH,GAAM6Y,WAAW7Y,EAAG,OACnC7F,KAAK2lG,iBACD,IAAIlnG,SAASoH,GAAM6Y,WAAW7Y,EAAG,SAI3C,MAAMy1B,EAAQt7B,KAAKumG,oBACnB,GAAa,MAATjrE,EAEF,OAAOt7B,KAAKwmG,mBAAmBj5E,EAAShjB,GAG1C,MAAMk8F,EAAa,IAAIt/F,IACvBomB,EAAQlmB,SAASzB,GAAM6gG,EAAWj/F,IAAI5B,EAAE5G,GAAI4G,KAE5C,IAAI8gG,EAAqC,KAEzC,GAD+B,MAATn8F,GAAiBA,EAAMlH,OAAS,GAA4B,IAAvBkH,EAAM9D,QAAQ,KAEvE,IACEigG,EAAgBprE,EAAMp0B,OAAOqD,EAAM5G,OAAO,GAAG2C,QAC7C,MAAO1H,GACPoB,KAAKuV,WAAWK,MAAMhX,OAEnB,CAEL,MAAM+nG,EAASb,GAAKc,MAAMC,SAASC,QAAUhB,GAAKc,MAAMC,SAASE,SACjEL,EAAgBprE,EAAM/wB,OAAOy8F,IAC3BlB,GAAKmB,UAAU18F,GAAOlD,SAASoa,IAC7B,MAAM9Q,EAAI8Q,EAAMxd,WAChB+iG,EAAEE,KAAKv2F,EAAG,CAAE8lC,OAAQ,CAAC,QAASowD,SAAUF,IACxCK,EAAEE,KAAKv2F,EAAG,CAAE8lC,OAAQ,CAAC,YAAaowD,SAAUF,IAC5CK,EAAEE,KAAKv2F,EAAG,CAAE8lC,OAAQ,CAAC,cAAeowD,SAAUF,IAC9CK,EAAEE,KAAKv2F,EAAG,UAYhB,OAPqB,MAAjB+1F,GACFA,EAAcr/F,SAASxB,IACjB4gG,EAAW7wE,IAAI/vB,EAAEgpC,MACnBw3D,EAAQvxF,KAAK2xF,EAAW3zE,IAAIjtB,EAAEgpC,SAI7Bw3D,KAGTG,mBAAmBj5E,EAAuBhjB,EAAeq4C,GAAmB,GAE1E,OADAr4C,EAAQA,EAAMjE,OAAOmB,cACd8lB,EAAQtsB,QAAQ2E,GACjBg9C,IAAYh9C,EAAE6xC,YAGJ,MAAV7xC,EAAEtD,MAAgBsD,EAAEtD,KAAKmF,cAAchB,QAAQ8D,IAAU,OAGzDA,EAAMlH,QAAU,GAAKuC,EAAE5G,GAAGuH,WAAWgE,MAGvB,MAAd3E,EAAEytC,UAAoBztC,EAAEytC,SAAS5rC,cAAchB,QAAQ8D,IAAU,MAGjE3E,EAAEk0B,OAAwB,MAAfl0B,EAAEk0B,MAAMa,KAAe/0B,EAAEk0B,MAAMa,IAAIlzB,cAAchB,QAAQ8D,IAAU,QAOtFsvD,YAAYpsC,EAAmBljB,GAG7B,OAFAA,EAAQA,EAAMjE,OAAO6gG,oBAEd15E,EAAMxsB,QAAQwH,I,UACnB,OAAc,MAAVA,EAAEnG,MAAgBmG,EAAEnG,KAAKmF,cAAchB,QAAQ8D,IAAU,OAI3DA,EAAMlH,QAAU,IACfoF,EAAEzJ,GAAGuH,WAAWgE,IACf9B,EAAEqpD,SAASq1C,oBAAoB5gG,WAAWgE,IAC3B,OAAR,QAAN,EAAA9B,EAAEm5C,YAAI,eAAE5iD,KAAcyJ,EAAEm5C,KAAK5iD,GAAGuH,WAAWgE,OAIjC,MAAX9B,EAAEwtC,OAAiBxtC,EAAEwtC,MAAMxuC,cAAchB,QAAQ8D,IAAU,IAG3C,OAAV,QAAN,EAAA9B,EAAE+uB,YAAI,eAAEA,OAAgB/uB,EAAE+uB,KAAKA,KAAK/vB,cAAchB,QAAQ8D,IAAU,IAGhD,OAAd,QAAN,EAAA9B,EAAEm5C,YAAI,eAAEj1C,WAAoBlE,EAAEm5C,KAAKj1C,SAASlF,cAAchB,QAAQ8D,IAAU,QAAhF,SAMJg8F,oBACE,OAAOvmG,KAAKs7B,MAGN6qE,eAAevgG,EAAewhG,GACpC,IAAKxhG,EAAE2xC,UACL,OAAO,KAET,IAAId,EAAmB,GAUvB,OATA7wC,EAAE6wC,OAAOpvC,SAAS+rB,IACF,MAAVA,EAAE9wB,MACJm0C,EAAO3hC,KAAKse,EAAE9wB,MAEZ8wB,EAAEhoB,OAASwtC,GAAUliB,MAAmB,MAAXtD,EAAEG,OACjCkjB,EAAO3hC,KAAKse,EAAEG,UAGlBkjB,EAASA,EAAOx1C,QAAQmyB,GAAmB,KAAbA,EAAE9sB,SACV,IAAlBmwC,EAAOpzC,OACF,KAEF+jG,EAAS3wD,EAAOpxC,KAAK,KAAOoxC,EAG7B2vD,oBAAoBxgG,EAAewhG,GACzC,IAAKxhG,EAAEyxC,eACL,OAAO,KAET,IAAIb,EAAwB,GAW5B,OAVA5wC,EAAE4wC,YAAYnvC,SAASO,IACZ,MAALA,GAA2B,MAAdA,EAAE+E,WACby6F,GAAUx/F,EAAE+E,SAASlG,QAAQ,MAAQ,EACvC+vC,EAAY1hC,KAAKlN,EAAE+E,SAAShJ,OAAO,EAAGiE,EAAE+E,SAASkI,YAAY,OAE7D2hC,EAAY1hC,KAAKlN,EAAE+E,cAIzB6pC,EAAcA,EAAYv1C,QAAQmyB,GAAmB,KAAbA,EAAE9sB,SACf,IAAvBkwC,EAAYnzC,OACP,KAEF+jG,EAAS5wD,EAAYnxC,KAAK,KAAOmxC,EAGlC0vD,aAAatgG,GACnB,GAAIA,EAAEwF,OAASgmC,GAAW4F,OAAoB,MAAXpxC,EAAEk0B,QAAkBl0B,EAAEk0B,MAAMwb,QAC7D,OAAO,KAET,MAAMF,EAAiB,GAsBvB,OArBAxvC,EAAEk0B,MAAMsb,KAAK/tC,SAASquC,IACpB,GAAa,MAATA,EAAE/a,KAAyB,KAAV+a,EAAE/a,IACrB,OAEF,GAAkB,MAAd+a,EAAEtvC,SAEJ,YADAgvC,EAAKtgC,KAAK4gC,EAAEtvC,UAGd,IAAIu0B,EAAM+a,EAAE/a,IACZ,GAAI+a,EAAEvsC,QAAUo3B,GAAa8B,kBAAmB,CAC9C,MAAMglE,EAAgB1sE,EAAIl0B,QAAQ,OAC9B4gG,GAAiB,IACnB1sE,EAAMA,EAAIh3B,OAAO0jG,EAAgB,IAEnC,MAAMC,EAAa3sE,EAAIzzB,OAAO,UAC1BogG,GAAc,IAChB3sE,EAAMA,EAAI/C,UAAU,EAAG0vE,IAG3BlyD,EAAKtgC,KAAK6lB,MAELya,EAAK/xC,OAAS,EAAI+xC,EAAO,MC1R7B,MAAMmyD,GAOXhoG,YAAYmL,GACE,MAARA,IAIJ1K,KAAKhB,GAAK0L,EAAK1L,GACfgB,KAAK2M,SAAWjC,EAAKiC,SACrB3M,KAAKsU,IAAM5J,EAAK4J,IAChBtU,KAAKwzB,KAAO9oB,EAAK8oB,KACjBxzB,KAAKwxD,SAAW9mD,EAAK8mD,WChBlB,MAAMg2C,GAIXjoG,YAAYmL,GACE,MAARA,IAIJ1K,KAAKw3B,KAAO9sB,EAAK8sB,KACjBx3B,KAAK2xD,OAASjnD,EAAKinD,SCLhB,MAAM81C,GAmBXloG,YAAYqM,EAAyBoc,GACnC,GAAgB,MAAZpc,EAoBJ,OAhBA5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAK8xD,SAAWlmD,EAASkmD,SACzB9xD,KAAKgoB,OAASA,EACdhoB,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAKi2C,MAAQrqC,EAASqqC,MACtBj2C,KAAKsU,IAAM1I,EAAS0I,IACpBtU,KAAK+xD,eAAiBnmD,EAASmmD,eAC/B/xD,KAAKgyD,YAAcpmD,EAASomD,YAC5BhyD,KAAKy/B,aAAe7zB,EAAS6zB,aAC7Bz/B,KAAKkyD,eAAiBtmD,EAASsmD,eAC/BlyD,KAAKiyD,aAAermD,EAASqmD,aAC7BjyD,KAAKmwB,SAAWvkB,EAASukB,SACzBnwB,KAAKmyD,SAAWvmD,EAASkxB,QACzB98B,KAAKoyD,UAAYxmD,EAASwmD,UAElBpyD,KAAKoL,MACX,KAAKkmD,GAAS56B,KACZ12B,KAAKw3B,KAAO,IAAIgwE,GAAa57F,EAAS4rB,MACtC,MACF,KAAK85B,GAASiC,KACZvzD,KAAK4hD,KAAO,IAAI2lD,GAAa37F,EAASg2C,QC7CvC,MAAM8lD,GAeXnoG,YAAYW,EAAYynG,GAatB,OAZA3nG,KAAKoL,KAAOlL,EAAKkL,KACjBpL,KAAK2nG,WAAaA,EAClB3nG,KAAKsC,KAAOpC,EAAKoC,KAAOpC,EAAKoC,KAAKkW,gBAAkB,KACpDxY,KAAKi2C,MAAQ/1C,EAAK+1C,MAAQ/1C,EAAK+1C,MAAMz9B,gBAAkB,KACvDxY,KAAK+xD,eAAiB7xD,EAAK6xD,eAC3B/xD,KAAKkyD,eAAwC,MAAvBhyD,EAAKgyD,eAAyBhyD,EAAKgyD,eAAemF,cAAgB,KACxFr3D,KAAKiyD,aAAoC,MAArB/xD,EAAK+xD,aAAuB/xD,EAAK+xD,aAAaoF,cAAgB,KAClFr3D,KAAKsU,IAAkB,MAAZpU,EAAKoU,IAAcpU,EAAKoU,IAAIkE,gBAAkB,KACzDxY,KAAKmwB,SAAWjwB,EAAKiwB,SACrBnwB,KAAKmyD,SAAWjyD,EAAKiyD,SACrBnyD,KAAKoyD,UAAYlyD,EAAKkyD,UAEdpyD,KAAKoL,MACX,KAAKkmD,GAAS56B,KACZ12B,KAAKw3B,KAAO,IAAI41C,GAChBptE,KAAKw3B,KAAKA,KAAyB,MAAlBt3B,EAAKs3B,KAAKA,KAAet3B,EAAKs3B,KAAKA,KAAKhf,gBAAkB,KAC3ExY,KAAKw3B,KAAKm6B,OAASzxD,EAAKs3B,KAAKm6B,OAC7B,MACF,KAAKL,GAASiC,KACZvzD,KAAK4hD,KAAO,IAAIurB,GAChBntE,KAAK4hD,KAAKj1C,SAAiC,MAAtBzM,EAAK0hD,KAAKj1C,SAAmBzM,EAAK0hD,KAAKj1C,SAAS6L,gBAAkB,O,2SCnCxF,MAAMovF,WAAiB/+E,GAM5BtpB,YAAY8I,EAAoB2gB,GAA4B,GAC1DlW,QACW,MAAPzK,IAIJrI,KAAKwzB,KAAOnrB,EAAImrB,KAChBxzB,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJwyD,SAAU,KACV7kD,SAAU,MAEZqc,EACA,CAAC,KAAM,cAIL/P,QAAQ3E,G,0CASZ,aARmBtU,KAAKqpB,WACtB,IAAIkoC,GAAavxD,MACjB,CACE2M,SAAU,MAEZ,KACA2H,OCjCC,MAAMuzF,WAAiBh/E,GAI5BtpB,YAAY8I,EAAoB2gB,GAA4B,GAC1DlW,QACW,MAAPzK,IAIJrI,KAAK2xD,OAAStpD,EAAIspD,OAClB3xD,KAAK8oB,iBACH9oB,KACAqI,EACA,CACEmvB,KAAM,MAERxO,EACA,KAIJ/P,QAAQ3E,GACN,OAAOtU,KAAKqpB,WACV,IAAIqoC,GAAa1xD,MACjB,CACEw3B,KAAM,MAER,KACAljB,I,2SCtBC,MAAMwzF,WAAaj/E,GAmBxBtpB,YAAY8I,EAAgB2gB,GAA4B,GAEtD,GADAlW,QACW,MAAPzK,EA6BJ,OAzBArI,KAAK8oB,iBACH9oB,KACAqI,EACA,CACErJ,GAAI,KACJ8yD,SAAU,KACV9pC,OAAQ,KACR1lB,KAAM,KACN2zC,MAAO,KACP3hC,IAAK,MAEP0U,EACA,CAAC,KAAM,WAAY,WAGrBhpB,KAAKoL,KAAO/C,EAAI+C,KAChBpL,KAAK+xD,eAAiB1pD,EAAI0pD,eAC1B/xD,KAAKgyD,YAAc3pD,EAAI2pD,YACvBhyD,KAAKmwB,SAAW9nB,EAAI8nB,SACpBnwB,KAAKmyD,SAAW9pD,EAAI8pD,SACpBnyD,KAAKy/B,aAAmC,MAApBp3B,EAAIo3B,aAAuB,IAAI1yB,KAAK1E,EAAIo3B,cAAgB,KAC5Ez/B,KAAKiyD,aAAmC,MAApB5pD,EAAI4pD,aAAuB,IAAIllD,KAAK1E,EAAI4pD,cAAgB,KAC5EjyD,KAAKkyD,eAAuC,MAAtB7pD,EAAI6pD,eAAyB,IAAInlD,KAAK1E,EAAI6pD,gBAAkB,KAClFlyD,KAAKoyD,UAAY/pD,EAAI+pD,UAEbpyD,KAAKoL,MACX,KAAKkmD,GAAS56B,KACZ12B,KAAKw3B,KAAO,IAAIqwE,GAASx/F,EAAImvB,KAAMxO,GACnC,MACF,KAAKsoC,GAASiC,KACZvzD,KAAK4hD,KAAO,IAAIgmD,GAASv/F,EAAIu5C,KAAM54B,IAOnC/P,U,0CACJ,MAAM2sE,EAAQ,IAAI/zB,GAAS7xD,MAE3B,IAAIoZ,EACJ,MAAMC,EAAoBrX,EAAMY,OAAN,0BAC1B,IAAIyW,EAGF,MAAM,IAAIxa,MAAM,qDAFhBua,EAAgBC,EAAiBC,mBAKnC,IACEssE,EAAMtxE,UAAY8E,EAAc8rE,eAAellF,KAAKsU,IAAK,MACzDsxE,EAAMmiB,gBAAkB3uF,EAAc29E,YAAYnR,EAAMtxE,KACxD,MAAO1V,IAcT,aAVMoB,KAAKqpB,WACTu8D,EACA,CACEtjF,KAAM,KACN2zC,MAAO,MAET,KACA2vC,EAAMmiB,WAGA/nG,KAAKoL,MACX,KAAKkmD,GAASiC,KACZqyB,EAAMhkC,WAAa5hD,KAAK4hD,KAAK3oC,QAAQ2sE,EAAMmiB,WAC3C,MACF,KAAKz2C,GAAS56B,KACZkvD,EAAMpuD,WAAax3B,KAAKw3B,KAAKve,QAAQ2sE,EAAMmiB,WAM/C,OAAOniB,M,slBCjHX,MAAMoiB,GAEe,oBCLrB,IAAYC,IAAZ,SAAYA,GACV,cACA,cACA,kBAHF,CAAYA,KAAAA,GAAe,KCGpB,MAAMC,GAUX3oG,YAAY4oG,GANZ,KAAAC,SAA2C,GAG3C,KAAAC,sBAAkC,GAClC,KAAAC,gBAAgD,GAG9CtoG,KAAKmoG,QAAUA,G,gBCdZ,MAAMI,I,2SC2Cb,MAAMxpG,GACI,SADJA,GAEmB,wBAFnBA,GAGU,eAHVA,GAIiB,sBAJjBA,GAKa,kBAGbypG,GACK,kBADLA,GAEU,uBAFVA,GAGO,aAGN,MAAM,GAgBXjpG,YACYkpG,EACAC,EACAnzF,EACAozF,EACAC,GAJA,KAAAH,eAAAA,EACA,KAAAC,qBAAAA,EACA,KAAAnzF,WAAAA,EACA,KAAAozF,sBAAAA,EACA,KAAAC,aAAAA,EAhBZ,KAAAR,SAAW,IAAIS,GAAA,EAAgD,IAC/D,KAAA3uF,cAAgB,IAAI2uF,GAAA,EAAwB,MAElC,KAAAxxF,MAAuC,IAAI6wF,GACnDloG,KAAK8oG,iBAGC,KAAAC,eAAyB,EAW/B/oG,KAAKgpG,iBAAmB,IAAI7hG,IAGxBwC,O,0CACA3J,KAAK+oG,uBAIC/oG,KAAK2oG,sBAAsBM,0BAC7BjpG,KAAK2oG,sBAAsBO,iBAG7BlpG,KAAKmpG,mBACXnpG,KAAK+oG,eAAgB,MAGjBI,mB,gDACJnpG,KAAKqX,MAAMgxF,sBAC4D,QAApE,QAAMroG,KAAKyoG,eAAe31E,IAAc/zB,WAA4B,QAAI,GAC3E,IAAK,MAAMuE,KAAKtD,KAAKqX,MAAMgxF,sBAChB,MAAL/kG,UACItD,KAAKopG,oBAAoBppG,KAAKqX,MAAMgxF,sBAAsB/kG,KAGpE,MAAM+lG,QAAyBrpG,KAAKyoG,eAAe31E,IAAY/zB,IACvC,MAApBsqG,IACFrpG,KAAKqX,MAAMiyF,aAAeD,SAEtBrpG,KAAKupG,eACXvpG,KAAKka,cAAcysB,KAAK3mC,KAAKqX,MAAMiyF,iBAG/BF,oBAAoBphF,G,0CACxB,GAAc,MAAVA,EACF,OAEFhoB,KAAKqX,MAAM+wF,SAASpgF,GAAUhoB,KAAKwpG,gBACnC,MAAMC,QAAoBzpG,KAAK0pG,mBAAmB,CAAE1hF,OAAQA,IAC5DhoB,KAAKqX,MAAM+wF,SAASpgF,GAAQyG,QAAUg7E,EAAYh7E,WAG9Ck7E,WAAWC,G,0CACfA,QAAgB5pG,KAAK6pG,0BAA0BD,GAC/C5pG,KAAKqX,MAAMgxF,sBAAsBvzF,KAAK80F,EAAQn7E,QAAQzG,cAChDhoB,KAAKyoG,eAAeqB,KAAK/qG,GAA4BiB,KAAKqX,MAAMgxF,uBACtEroG,KAAKqX,MAAM+wF,SAASwB,EAAQn7E,QAAQzG,QAAU4hF,QACxC5pG,KAAK+pG,0BAA0BH,SAC/B5pG,KAAKgqG,eAAc,IAAIj9F,MAAOC,UAAW,CAAEgb,OAAQ4hF,EAAQn7E,QAAQzG,eACnEhoB,KAAKiqG,cAAcL,EAAQn7E,QAAQzG,QACzChoB,KAAKka,cAAcysB,KAAKijE,EAAQn7E,QAAQzG,WAGpCiiF,cAAcjiF,G,0CAClBhoB,KAAKkqG,kCACLlqG,KAAKqX,MAAMiyF,aAAethF,QACpBhoB,KAAKyoG,eAAeqB,KAAK/qG,GAAmBipB,GAClDhoB,KAAKka,cAAcysB,KAAK3mC,KAAKqX,MAAMiyF,oBAC7BtpG,KAAKupG,kBAGPY,MAAM9/F,G,0CACVA,EAAUrK,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,8BACxCrqG,KAAKsqG,sBAAsBjgG,EAAQ2d,QACrC3d,EAAQ2d,SAAWhoB,KAAKqX,MAAMiyF,qBAC1BtpG,KAAKuqG,kCAGPvqG,KAAKwqG,sBAAsBngG,MAAAA,OAAO,EAAPA,EAAS2d,QAC1ChoB,KAAKyqG,wBAAwBpgG,MAAAA,OAAO,EAAPA,EAAS2d,cAChChoB,KAAKupG,kBAGPmB,eAAergG,G,kDAEnB,OADAA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACJ,QAAvC,EAA+B,QAAhC,QAAOrK,KAAK4qG,WAAWvgG,UAAS,eAAEqkB,cAAM,eAAE2yC,eAG7CwpC,eAAet3E,EAAelpB,G,0CAClCA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WAAWvgG,GACtCu/F,EAAQl7E,OAAO2yC,YAAc9tC,QACvBvzB,KAAK8qG,YAAYlB,EAASv/F,MAG5BsvB,qBAAqBtvB,G,kDACzB,OACQ,QADA,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAEgvB,qBAGNshB,qBAAqBznB,EAAYlpB,G,0CACrC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAKgvB,kBAAoBnG,QAC3BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEU,kBAAkB1gG,G,kDACtB,OAEoB,QADjB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFC,sBAAc,YAIhBC,kBAAkB53E,EAAgBlpB,G,0CACtC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ+C,eAAiB33E,QACnBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCI,kBAAkBhhG,G,kDAEtB,OADAA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACH,QAAxC,EAA+B,QAAhC,QAAOrK,KAAK4qG,WAAWvgG,UAAS,eAAEokB,eAAO,eAAE68E,kBAG9CC,kBAAkBh4E,EAAelpB,G,0CACrCA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WAAWvgG,GACtCu/F,EAAQn7E,QAAQ68E,eAAiB/3E,QAC3BvzB,KAAK8qG,YAAYlB,EAASv/F,MAG5BmhG,sBAAsBnhG,G,kDAE1B,OADAA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACN,QAArC,EAA+B,QAAhC,QAAOrK,KAAK4qG,WAAWvgG,UAAS,eAAEtL,YAAI,eAAE0sG,sBAG3CC,sBAAsBn4E,EAAelpB,G,0CACzCA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WAAWvgG,GACtCu/F,EAAQ7qG,KAAK0sG,mBAAqBl4E,QAC5BvzB,KAAK8qG,YAAYlB,EAASv/F,MAG5BshG,2BAA2BthG,G,oDAC/B,OAEuC,QADpC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAEuoF,+BAAuB,YAInCC,2BAA2Bt4E,EAAgBlpB,G,0CAC/C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASuoF,wBAA0Br4E,QACrCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCtoE,6BAA6Bt4B,G,oDACjC,OAEyC,QADtC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE4d,iCAAyB,YAIrCkD,6BAA6B5Q,EAAgBlpB,G,0CACjD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS4d,0BAA4B1N,QACvCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCa,+BAA+BzhG,G,kDACnC,OAEiC,QAD9B,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFc,mCAA2B,YAI7Bx8D,+BAA+Bhc,EAAgBlpB,G,0CACnD,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ4D,4BAA8Bx4E,QAChCvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCe,iCAAiC3hG,G,kDACrC,OAEmC,QADhC,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFgB,qCAA6B,YAI/BC,iCAAiC34E,EAAgBlpB,G,0CACrD,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ8D,8BAAgC14E,QAClCvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCkB,mBAAmB9hG,G,oDACvB,OAEqB,QADlB,EAA6F,QAA9F,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eAAEhnF,gBAAQ,eAC1F+oF,uBAAe,YAIjBtvF,mBAAmByW,EAAgBlpB,G,0CACvC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQvmF,SAAS+oF,gBAAkB74E,QAC7BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE5sF,iBAAiBpT,G,gDACrB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEztF,iBAGC6uF,iBAAiB94E,EAAelpB,G,0CACpC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ3qF,cAAgB+V,QAClBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC1R,mBAAmBlvF,G,oDACvB,OAE+B,QAD5B,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAEipF,uBAAe,YAI3Bz8D,mBAAmBtc,EAAgBlpB,G,0CACvC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASipF,gBAAkB/4E,QAC7BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC9lE,oBAAoB96B,G,0CACxB,WAAYrK,KAAKC,mBAAmBoK,IAClC,OAAO,EAMT,UAHsBrK,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,0BAEhCx8E,QAAQ89E,qBAClB,OAAO,EAGT,MAAM99C,QAAsBzuD,KAAKwsG,iBAAiBniG,GAClD,GAAqB,MAAjBokD,EACF,OAAO,EAGT,IAAK,MAAMzvD,KAAMmJ,OAAOpJ,KAAK0vD,GAAgB,CAC3C,MAAM/T,EAAI+T,EAAczvD,GACxB,GAAI07C,EAAEC,SAAWD,EAAE+rB,kBAAoB/rB,EAAE4nD,eACvC,OAAO,EAIX,OAAO,KAGH/+D,kBAAkBl5B,G,oDACtB,OAK6B,QAJ1B,EAIU,QAJX,EAIC,QAJD,QACQrK,KAAK4qG,WACT5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCAE7C,eAAEppF,gBAAQ,eAAEigB,sBAAc,QAAI,QAI7B0B,kBAAkBzR,EAAelpB,G,0CACrC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQvmF,SAASigB,eAAiB/P,QAC5BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCzgD,sBAAsB3hD,G,kDAC1B,OACQ,QADA,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAEqhD,sBAGNc,sBAAsBt5B,EAAoBlpB,G,0CAC9C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAKqhD,mBAAqBx4B,QAC5BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEqC,gCAAgCriG,G,kDACpC,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAEk+E,gCAGRC,gCAAgCr5E,EAAgBlpB,G,0CACpD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQk+E,6BAA+Bp5E,QACzCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxClY,mBAAmB1oF,G,kDACvB,OACQ,QADA,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAE8tG,mBAGNnb,mBAAmBn+D,EAA2BlpB,G,0CAClD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAK8tG,gBAAkBt5E,QACzBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEhV,uBAAuBhrF,G,0CAK3B,OAAuB,OAAnBA,OAJJA,EAAUrK,KAAKoqG,iBACbpqG,KAAKoqG,iBAAiB//F,EAAS,CAAEwoF,UAAW,eACtC7yF,KAAK8sG,qCAEF,EAAPziG,EAAS2d,QACJ,WAEIhoB,KAAK0oG,qBAAqB51E,IAAI,GAAGzoB,EAAQ2d,SAASwgF,KAAuBn+F,MAGlFsrF,uBAAuBpiE,EAAelpB,G,0CAKnB,OAAnBA,OAJJA,EAAUrK,KAAKoqG,iBACbpqG,KAAKoqG,iBAAiB//F,EAAS,CAAEwoF,UAAW,eACtC7yF,KAAK8sG,qCAEF,EAAPziG,EAAS2d,gBAGPhoB,KAAK0oG,qBAAqBoB,KAAK,GAAGz/F,EAAQ2d,SAASwgF,KAAuBj1E,EAAOlpB,OAGnF0iG,sBAAsB1iG,G,0CAE1B,OAAuB,OAAnBA,OADJA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAK8sG,qCACzC,EAAPziG,EAAS2d,QACJ,WAEIhoB,KAAK0oG,qBAAqB51E,IACrC,GAAGzoB,MAAAA,OAAO,EAAPA,EAAS2d,SAASwgF,KACrBn+F,MAIE2iG,sBAAsBz5E,EAAelpB,G,0CAElB,OAAnBA,OADJA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAK8sG,qCACzC,EAAPziG,EAAS2d,gBAGPhoB,KAAK0oG,qBAAqBoB,KAC9B,GAAGz/F,EAAQ2d,SAASwgF,KACpBj1E,EACAlpB,OAIEmvF,4BAA4BnvF,G,0CAKhC,OAAuB,OAAnBA,OAJJA,EAAUrK,KAAKoqG,iBACbpqG,KAAKoqG,iBAAiB//F,EAAS,CAAEwoF,UAAW,oBACtC7yF,KAAK8sG,qCAEF,EAAPziG,EAAS2d,QACJ,WAEIhoB,KAAK0oG,qBAAqB51E,IACrC,GAAGzoB,EAAQ2d,SAASwgF,KACpBn+F,MAIEirF,4BAA4BjrF,G,0CAKhC,OAAuB,OAAnBA,OAJJA,EAAUrK,KAAKoqG,iBACbpqG,KAAKoqG,iBAAiB//F,EAAS,CAAEwoF,UAAW,oBACtC7yF,KAAK8sG,qCAEF,EAAPziG,EAAS2d,gBAGAhoB,KAAK0oG,qBAAqB9yE,IACrC,GAAGvrB,EAAQ2d,SAASwgF,KACpBn+F,OAIEurF,4BAA4BriE,EAAelpB,G,0CAKxB,OAAnBA,OAJJA,EAAUrK,KAAKoqG,iBACbpqG,KAAKoqG,iBAAiB//F,EAAS,CAAEwoF,UAAW,oBACtC7yF,KAAK8sG,qCAEF,EAAPziG,EAAS2d,gBAGPhoB,KAAK0oG,qBAAqBoB,KAC9B,GAAGz/F,EAAQ2d,SAASwgF,KACpBj1E,EACAlpB,OAIE4iG,gBAAgB5iG,G,kDACpB,OACU,QADF,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF37E,cAAM,eAAEmzD,gBAGRqrB,gBAAgB35E,EAAYlpB,G,0CAChC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl7E,OAAOmzD,aAAetuD,QACxBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhExhB,oBAAoBx+E,G,oDACxB,OACiB,QADT,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAE6iB,eAAO,eAAE4/E,aAGfpkB,oBAAoBx1D,EAAqBlpB,G,0CAC7C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAK6iB,QAAQ4/E,UAAY55E,QAC3BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE+C,wBAAwB/iG,G,oDAC5B,OACqB,QADb,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAEgjB,mBAAW,eAAEy/E,aAGnBE,wBAAwB95E,EAAyBlpB,G,0CACrD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAKgjB,YAAYy/E,UAAY55E,QAC/BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE9W,+BAA+BlpF,G,oDACnC,OAC4B,QADpB,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAE+uB,0BAAkB,eAAEq/E,aAG1Btb,+BACJt+D,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAK+uB,mBAAmBq/E,UAAY55E,QACtCvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEiD,oBAAoBjjG,G,oDACxB,OACiB,QADT,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAE8iB,eAAO,eAAE2/E,aAGfI,oBAAoBh6E,EAAqBlpB,G,0CAC7C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAK8iB,QAAQ2/E,UAAY55E,QAC3BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE1V,6BACJtqF,G,oDAEA,OAC0B,QADlB,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAEgvB,wBAAgB,eAAEo/E,aAGxB3a,6BACJj/D,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAKgvB,iBAAiBo/E,UAAY55E,QACpCvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEmD,sCACJnjG,G,oDAEA,OACmC,QAD3B,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAEkjB,iCAAyB,eAAEu/E,aAGjCM,sCACJl6E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAKkjB,0BAA0Bu/E,UAAY55E,QAC7CvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE1vF,yBAAyBtQ,G,oDAC7B,OAC0B,QADlB,EACI,QADL,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFhnF,gBAAQ,eAAEgL,oBAAY,eAAE8+E,aAGxBnxF,yBAAyBuX,EAAkBlpB,G,0CAC/C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQvmF,SAASgL,aAAa8+E,UAAY55E,QACpCvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEqD,qBAAqBrjG,G,oDACzB,OACkB,QADV,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAEijB,gBAAQ,eAAEw/E,aAGhBQ,qBAAqBp6E,EAAiBlpB,G,0CAC1C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAKijB,SAASw/E,UAAY55E,QAC5BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhElW,uBAAuB9pF,G,oDAC3B,OACoB,QADZ,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAEkvB,kBAAU,eAAEk/E,aAGlBnb,uBAAuBz+D,EAAoBlpB,G,0CAC/C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAKkvB,WAAWk/E,UAAY55E,QAC9BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEpV,yBACJ5qF,G,oDAEA,OACsB,QADd,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAEivB,oBAAY,eAAEm/E,aAGpBxa,yBACJp/D,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAKivB,aAAam/E,UAAY55E,QAChCvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEuD,kBAAkBvjG,G,oDACtB,OACe,QADP,EACA,QADD,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF3/F,YAAI,eAAE+iB,aAAK,eAAE0/E,aAGbU,kBAAkBt6E,EAAmBlpB,G,0CACzC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl/F,KAAK+iB,MAAM0/E,UAAY55E,QACzBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEhnE,mBAAmBh5B,G,kDACvB,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAEoe,mBAGTqD,mBAAmBvR,EAAqBlpB,G,0CAC5C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASoe,gBAAkBlO,QAC7BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCroE,+BAA+Bv4B,G,oDACnC,OAE2C,QADxC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE+d,mCAA2B,YAIvCqC,+BAA+BlQ,EAAgBlpB,G,0CACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS+d,4BAA8B7N,QACzCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCxsF,+BAA+BpU,G,oDACnC,OAE2C,QADxC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE7E,mCAA2B,YAIvCuxB,+BAA+Bxc,EAAgBlpB,G,0CACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS7E,4BAA8B+U,QACzCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC6C,uBAAuBzjG,G,oDAC3B,OAEmC,QADhC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE6d,2BAAmB,YAI/B6C,uBAAuBxQ,EAAgBlpB,G,0CAC3C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS6d,oBAAsB3N,QACjCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC/nE,uBAAuB74B,G,oDAC3B,OAEmC,QADhC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE0d,2BAAmB,YAI/BuD,uBAAuB/Q,EAAgBlpB,G,0CAC3C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS0d,oBAAsBxN,QACjCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCpoE,sCAAsCx4B,G,oDAC1C,OAEkD,QAD/C,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAEge,0CAAkC,YAI9CsC,sCACJpQ,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASge,mCAAqC9N,QAChDvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCnoE,0BAA0Bz4B,G,oDAC9B,OAEsC,QADnC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE8d,8BAAsB,YAIlC0C,0BAA0BtQ,EAAgBlpB,G,0CAC9C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS8d,uBAAyB5N,QACpCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxChuF,kBAAkB5S,G,kDACtB,OAKmB,QAJhB,EAIA,QAJD,QACQrK,KAAKgrG,WACThrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCAE7C,eAAEzvF,sBAAc,YAIfE,kBAAkBqW,EAAgBlpB,G,0CACtC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQnrF,eAAiBuW,QACnBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCsB,aAAa1jG,G,oDACjB,OAEyB,QADtB,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE2qF,iBAAS,YAIrBC,aAAa16E,EAAgBlpB,G,0CACjC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS2qF,UAAYz6E,QACvBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCloE,2BAA2B14B,G,oDAC/B,OAEuC,QADpC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE6qF,+BAAuB,YAInC1pE,2BAA2BjR,EAAgBlpB,G,0CAC/C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS6qF,wBAA0B36E,QACrCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCjoE,gCAAgC34B,G,oDACpC,OAE4C,QADzC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE8qF,oCAA4B,YAIxCzpE,gCAAgCnR,EAAgBlpB,G,0CACpD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS8qF,6BAA+B56E,QAC1CvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCvtF,SAASrT,G,kDACb,OACW,QADH,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF57E,eAAO,eAAEzb,SAGTo7F,SAAS76E,EAAelpB,G,0CAC5B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQn7E,QAAQzb,MAAQugB,QAClBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEr2C,iBAAiB3pD,G,kDACrB,OAE2B,QADxB,EAAyF,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFx8E,QAAQ4kC,qBAAa,YAIvBg7C,iBAAiB96E,EAAgBlpB,G,0CACrC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQ4kC,cAAgB9/B,QAC1BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCqD,qBAAqBjkG,G,sDACzB,MAAMkkG,EAEK,QAFgB,EAE1B,QAFyB,QAClBvuG,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAEmrF,kBACPC,EAEL,QAFyB,QAClBzuG,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEuD,kBACH,OAA4C,QAArC,EAAAD,MAAAA,EAAAA,EAAqBE,SAAgB,YAGxCC,qBAAqBn7E,EAAgBlpB,G,0CACzC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASmrF,kBAAoBj7E,QAC/BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAG5C,MAAM9C,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQqG,kBAAoBj7E,QACtBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCvoE,4BAA4Br4B,G,oDAChC,OAEwC,QADrC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE2d,gCAAwB,YAIpCiD,4BAA4B1Q,EAAgBlpB,G,0CAChD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS2d,yBAA2BzN,QACtCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC0D,mBAAmBtkG,G,kDACvB,OAEsB,QADnB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF2D,wBAAgB,YAIlBC,mBAAmBt7E,EAAgBlpB,G,0CACvC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQyG,iBAAmBr7E,QACrBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC6D,4BAA4BzkG,G,kDAChC,OAE8B,QAD3B,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF8D,gCAAwB,YAI1BC,4BAA4Bz7E,EAAgBlpB,G,0CAChD,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ4G,yBAA2Bx7E,QAC7BvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCgE,uCAAuC5kG,G,kDAC3C,OAEyC,QADtC,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFiE,2CAAmC,YAIrCC,uCACJ57E,EACAlpB,G,0CAEA,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ+G,oCAAsC37E,QACxCvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCmE,qBAAqB/kG,G,kDACzB,OAEuB,QADpB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFoE,yBAAiB,YAInBC,qBAAqB/7E,EAAgBlpB,G,0CACzC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQkH,kBAAoB97E,QACtBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCsE,mBAAmBllG,G,oDACvB,OAK8B,QAJ3B,EAIU,QAJX,EAIC,QAJD,QACQrK,KAAK4qG,WACT5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCAE7C,eAAEppF,gBAAQ,eAAEmsF,uBAAe,YAI1BC,mBAAmBl8E,EAAgBlpB,G,0CACvC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQvmF,SAASmsF,gBAAkBj8E,QAC7BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCiD,mBAAmBrlG,G,oDACvB,OAK8B,QAJ3B,EAIU,QAJX,EAIC,QAJD,QACQrK,KAAK4qG,WACT5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCAE7C,eAAEppF,gBAAQ,eAAEssF,uBAAe,YAI1BC,mBAAmBr8E,EAAgBlpB,G,0CACvC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQvmF,SAASssF,gBAAkBp8E,QAC7BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCoD,wBAAwBxlG,G,kDAC5B,OAE0B,QADvB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF6E,4BAAoB,YAItBC,wBAAwBx8E,EAAgBlpB,G,0CAC5C,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ2H,qBAAuBv8E,QACzBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC+E,qBAAqB3lG,G,kDACzB,OAEuB,QADpB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFgF,yBAAiB,YAInBC,qBAAqB38E,EAAgBlpB,G,0CACzC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ8H,kBAAoB18E,QACtBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCkF,cAAc9lG,G,kDAClB,OAEgB,QADb,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFmF,kBAAU,YAIZC,cAAc98E,EAAgBlpB,G,0CAClC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQiI,WAAa78E,QACfvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCtgB,oBAAoBtgF,G,oDACxB,OAEgB,QAFR,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAE5lG,YAAI,eAAE6iB,eAAO,eAAEgjF,aAGdriB,oBACJ36D,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQl/F,KAAK6iB,QAAQgjF,UAAYh9E,QAC3BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxCE,wBACJnmG,G,oDAEA,OAEoB,QAFZ,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAE5lG,YAAI,eAAEgjB,mBAAW,eAAE6iF,aAGlBE,wBACJl9E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQl/F,KAAKgjB,YAAY6iF,UAAYh9E,QAC/BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxC9c,+BAA+BnpF,G,gDACnC,OAEC,QAFO,QACArK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAElsG,KAAK+uB,mBAAmByiF,aAGvBze,+BAA+Bv+D,EAAelpB,G,0CAClD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQ7qG,KAAK+uB,mBAAmByiF,UAAYh9E,QACtCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCyF,oBAAoBrmG,G,oDACxB,OAEgB,QAFR,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAE5lG,YAAI,eAAE8iB,eAAO,eAAE+iF,aAGdI,oBACJp9E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQl/F,KAAK8iB,QAAQ+iF,UAAYh9E,QAC3BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxCzb,6BAA6BxqF,G,kDACjC,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAElsG,YAAI,eAAEgvB,iBAAiBwiF,aAGtB9d,6BACJl/D,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQ7qG,KAAKgvB,iBAAiBwiF,UAAYh9E,QACpCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC2F,sCACJvmG,G,oDAEA,OAEkC,QAF1B,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEvgG,YAAI,eAAEkjB,iCAAyB,eAAE2iF,aAGhCM,sCACJt9E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQl/F,KAAKkjB,0BAA0B2iF,UAAYh9E,QAC7CvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCzU,yBAAyBnsF,G,oDAC7B,OAEyB,QAFjB,EAEG,QAFJ,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAEgL,oBAAY,eAAEkiF,aAGvB5kE,yBAAyBpY,EAAelpB,G,0CAC5C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASgL,aAAakiF,UAAYh9E,QACpCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC6F,qBAAqBzmG,G,oDACzB,OAEiB,QAFT,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEvgG,YAAI,eAAEijB,gBAAQ,eAAE4iF,aAGfQ,qBACJx9E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQl/F,KAAKijB,SAAS4iF,UAAYh9E,QAC5BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC7W,uBAAuB/pF,G,oDAC3B,OAEmB,QAFX,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAElsG,YAAI,eAAEkvB,kBAAU,eAAEsiF,aAGjBte,uBAAuB1+D,EAAelpB,G,0CAC1C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQ7qG,KAAKkvB,WAAWsiF,UAAYh9E,QAC9BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC9V,yBAAyB9qF,G,oDAC7B,OAEqB,QAFb,EAED,QAFA,EAEN,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAElsG,YAAI,eAAEivB,oBAAY,eAAEuiF,aAGnB3d,yBAAyBr/D,EAAYlpB,G,0CACzC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQ7qG,KAAKivB,aAAauiF,UAAYh9E,QAChCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC+F,kBAAkB3mG,G,kDACtB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAE5lG,YAAI,eAAE+iB,MAAM8iF,aAGXU,kBACJ19E,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQl/F,KAAK+iB,MAAM8iF,UAAYh9E,QACzBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxCY,YAAY7mG,G,kDAChB,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEh+E,eAAO,eAAE0iF,YAGRC,YAAY79E,EAAelpB,G,0CAC/B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQn7E,QAAQ0iF,SAAW59E,QACrBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxC4E,cAAchnG,G,kDAClB,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEh+E,eAAO,eAAE6iF,cAGRC,cAAch+E,EAAelpB,G,0CACjC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQn7E,QAAQ6iF,WAAa/9E,QACvBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxC+E,mBAAmBnnG,G,oDACvB,OAA+B,MAA3BrK,KAAKqX,MAAMiyF,mBACAtpG,KAAKyxG,yBAAyBpnG,IAE7CA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,wBACc,QAA1D,EAAyC,QAA1C,EAAgC,QAAhC,QAAOjrG,KAAK4qG,WAAWvgG,UAAS,eAAEgZ,gBAAQ,eAAE+K,uBAAe,QAAI,IAAIlB,OAGtEwkF,mBAAmBn+E,EAAwBlpB,G,0CAG/C,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ/5E,gBAAkBmF,QACpBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC5f,qBAAqBhhF,G,kDACzB,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAEu8C,qBAGT+xC,qBAAqBp+E,EAAelpB,G,0CACxC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASu8C,kBAAoBrsC,QAC/BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC2G,mBAAmBvnG,G,kDACvB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEvgG,YAAI,eAAEmnG,mBAGLC,mBAAmBv+E,EAAoBlpB,G,0CAC3C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQl/F,KAAKmnG,gBAAkBt+E,QACzBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC8G,oBAAoB1nG,G,oDACxB,OAEsB,QADnB,EAA4F,QAA7F,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eAAE57E,eAAO,eACzFujF,wBAAgB,YAIlBj1F,oBAAoBwW,EAAgBlpB,G,0CACxC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQn7E,QAAQujF,iBAAmBz+E,QAC7BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE4H,sBAAsB5nG,G,oDAC1B,OAEwB,QADrB,EAA4F,QAA7F,EAAoF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eAAE57E,eAAO,eACzFhM,0BAAkB,YAIpByvF,sBAAsB3+E,EAAgBlpB,G,0CAC1C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQn7E,QAAQhM,mBAAqB8Q,QAC/BvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE8H,oBAAoB9nG,G,gDACxB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEmH,oBAGCC,oBAAoB9+E,EAAelpB,G,0CACvC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQiK,iBAAmB7+E,QACrBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxChrG,mBAAmBoK,G,0CACvB,OAA+C,aAAjCrK,KAAK0qG,eAAergG,KAAwD,aAA5BrK,KAAKioB,UAAU5d,OAGzEkQ,iBAAiBlQ,G,kDACrB,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAEnU,iBAGRoO,iBAAiB6K,EAAelpB,G,0CACpC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQnU,cAAgBiZ,QAC1BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC5wF,WAAWhQ,G,kDACf,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAE6jF,WAGR7pF,WAAW8K,EAAgBlpB,G,0CAC/B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQ6jF,QAAU/+E,QACpBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC9vF,WAAW9Q,G,kDACf,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAEmjE,WAGRh2E,WAAW2X,EAAelpB,G,0CAC9B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQmjE,QAAUr+D,QACpBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCsH,cAAcloG,G,0CAClBA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,wBAEpD,MAAM3C,QAAwBtoG,KAAKyoG,eAAe31E,IAChD/zB,GACAsL,GAGF,OAAuB,MAAnBi+F,GAA2BngG,OAAOpJ,KAAKupG,GAAiBjlG,OAAS,EAC5D,KAGFilG,EAAgBj+F,EAAQ2d,WAG3BgiF,cAAcz2E,EAAelpB,G,gDAEjC,GAAsB,OADtBA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBACxCjjF,OACV,OAEF,MAAMsgF,EAIF,QAHD,QAAMtoG,KAAKyoG,eAAe31E,IACzB/zB,GACAsL,UACA,QAAI,GACRi+F,EAAgBj+F,EAAQ2d,QAAUuL,QAC5BvzB,KAAKyoG,eAAeqB,KAAK/qG,GAAsBupG,EAAiBj+F,MAGlE2nC,YAAY3nC,G,kDAChB,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAE7hF,eAAO,eAAEkjB,YAGRC,YAAYre,EAAelpB,G,0CAC/B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQn7E,QAAQkjB,SAAWpe,QACrBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxCjW,gBAAgBhwF,G,kDACpB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAElsG,YAAI,eAAEyzG,gBAGL/c,gBAAgBliE,EAA2BlpB,G,0CAC/C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQ7qG,KAAKyzG,aAAej/E,QACtBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCrgB,aAAavgF,G,kDACjB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAE/hG,YAAI,eAAEqsC,aAELo1C,aAAa54D,EAAelpB,G,0CAChC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQl/F,KAAKqsC,UAAYxjB,QACnBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCgG,UAAUpoG,G,gDACd,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEtrF,UAGCuxF,UAAUn/E,EAAelpB,G,0CAC7B,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQhnF,OAASoS,QACXvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCkG,iBAAiBtoG,G,gDACrB,OAA2F,QAAnF,QAAMrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFuI,iBAGAC,iBAAiBt/E,EAAYlpB,G,0CACjC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtClC,EAAQyK,cAAgBr/E,QAClBvzB,KAAKorG,YAAYjD,EAASnoG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEyI,kBAAkBzoG,G,gDACtB,OAA2F,QAAnF,QAAMrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF0I,kBAGAC,kBAAkBz/E,EAAelpB,G,0CACrC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtClC,EAAQ4K,eAAiBx/E,QACnBvzB,KAAKorG,YAAYjD,EAASnoG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE4I,6BAA6B5oG,G,oDACjC,OAEyC,QADtC,EACW,QADZ,EAA0F,QAA1F,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF5nF,gBAAQ,eAAE6vF,iCAAyB,YAIrCC,6BAA6B5/E,EAAgBlpB,G,0CACjD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS6vF,0BAA4B3/E,QACvCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCvwE,gBAAgBrwB,G,kDACpB,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAE+vF,gBAGTh4E,gBAAgB7H,EAA8BlpB,G,0CAClD,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS+vF,aAAe7/E,QAC1BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCoI,0BAA0BhpG,G,kDAC9B,OAE4B,QADzB,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtFqI,8BAAsB,YAIxBC,0BAA0BhgF,EAAgBlpB,G,0CAC9C,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQmL,uBAAyB//E,QAC3BvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCuI,8BAA8BnpG,G,gDAClC,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEwI,8BAGCC,8BAA8BngF,EAAelpB,G,0CACjD,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQsL,2BAA6BlgF,QAC/BvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC0I,eAAetpG,G,kDACnB,OAEiB,QADd,EAAyF,QAA1F,QAAOrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCAAyB,eACtF2I,mBAAW,YAIbC,eAAetgF,EAAgBlpB,G,0CACnC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQyL,YAAcrgF,QAChBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxChmF,0BAA0B5a,G,gDAC9B,OAA2F,QAAnF,QAAMrK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFyJ,0BAGAC,0BAA0BxgF,EAAYlpB,G,0CAC1C,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtClC,EAAQ2L,uBAAyBvgF,QAC3BvzB,KAAKorG,YAAYjD,EAASnoG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEmC,iBAAiBniG,G,kDACrB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEvgG,YAAI,eAAE+jD,iBAGLulD,iBACJzgF,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQl/F,KAAK+jD,cAAgBl7B,QACvBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCgJ,6BAA6B5pG,G,kDACjC,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAE6wF,6BAGTC,6BAA6B5gF,EAAYlpB,G,0CAC7C,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAAS6wF,0BAA4B3gF,QACvCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxClwF,gBAAgB1Q,G,kDACpB,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE5nF,gBAAQ,eAAEvI,gBAGT4wB,gBAAgBnY,EAAelpB,G,0CACnC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQvmF,SAASvI,aAAeyY,QAC1BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCmJ,aAAa/pG,G,kDACjB,OAEO,QAFC,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEvgG,YAAI,eAAEgiB,aAGL2nF,aACJ9gF,EACAlpB,G,0CAEA,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQl/F,KAAKgiB,UAAY6G,QACnBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCpX,aAAaxpF,G,kDACjB,OACQ,QADA,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvFtrG,YAAI,eAAEwkB,aAGN0wE,aAAa1gE,EAAoBlpB,G,0CACrC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQ7qG,KAAKwkB,UAAYgQ,QACnBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhE9oB,gBAAgBl3E,G,kDAEpB,OADAA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACJ,QAAvC,EAA+B,QAAhC,QAAOrK,KAAK4qG,WAAWvgG,UAAS,eAAEqkB,cAAM,eAAE+yC,gBAG7C6yC,gBAAgB/gF,EAAelpB,G,0CACnCA,QAAgBrK,KAAK2qG,8BAA8BtgG,GACnD,MAAMu/F,QAAgB5pG,KAAK4qG,WAAWvgG,GACtCu/F,EAAQl7E,OAAO+yC,aAAeluC,QACxBvzB,KAAK8qG,YAAYlB,EAASv/F,MAG5B8X,mBAAmB9X,G,gDACvB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAE8H,mBAGCjyF,mBAAmBiR,EAAelpB,G,0CACtC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQoM,gBAAkBhhF,QACpBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxC+H,iBAAiBnqG,G,kDACrB,OACU,QADF,EAAmF,QAApF,QAAOrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,gCAAyB,eACvF37E,cAAM,eAAE29C,iBAGRooC,iBAAiBlhF,EAAelpB,G,0CACpC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,yBAEtCT,EAAQl7E,OAAO29C,cAAgB94C,QACzBvzB,KAAK8qG,YAAYlB,EAAS5pG,KAAKoqG,iBAAiB//F,EAASrK,KAAKqqG,4BAGhEqK,YAAYrqG,G,kDAChB,OAEW,QAFH,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,sCACjE,eAAEjtF,gBAAQ,eAAEA,YAGTsxF,YAAYphF,EAAelpB,G,0CAC/B,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,+BAE5C1G,EAAQvmF,SAASA,SAAWkQ,QACtBvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKswG,kCAIxCxlF,mBAAmBzgB,G,gDACvB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEloF,mBAGCpL,mBAAmB4b,EAAelpB,G,0CACtC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQplF,gBAAkBwQ,QACpBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC2J,oBAAoBvqG,G,gDACxB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEoI,6BAGCC,6BAA6BvhF,EAAelpB,G,0CAChD,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQ0M,0BAA4BthF,QAC9BvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxC1hF,YAAY1gB,G,gDAChB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAE8J,YAGCn9F,YAAY2b,EAAelpB,G,0CAC/B,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5C9C,EAAQ4M,SAAWxhF,QACbvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxC7nE,SAAS/4B,G,gDACb,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEtpE,SAGCyB,SAASrR,EAAkBlpB,G,0CAC/B,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQhlE,MAAQ5P,QACVvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCuI,kBAAkB3qG,G,gDACtB,OAEC,QAFO,QACArK,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEh8E,kBAGCwkF,kBAAkB1hF,EAAelpB,G,0CACrC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5CtE,EAAQ13E,eAAiB8C,QACnBvzB,KAAKorG,YACTjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCxkF,UAAU5d,G,kDACd,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAEzG,UAGRpK,oBAAoBvT,G,kDACxB,OAEU,QAFF,EAEP,QAFM,QACCrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,gCACjE,eAAEx8E,eAAO,eAAE9Q,oBAGRu3F,oBAAoB3hF,EAAgBlpB,G,0CACxC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAE5CrB,EAAQn7E,QAAQ9Q,iBAAmB4V,QAC7BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAIxCv+D,gBAAgBriC,G,kDAIpB,OADW,QAFkB,EAE5B,QAF2B,QACpBrK,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEppF,gBAAQ,eAAEyoB,gBAITqpE,gBAAgB5hF,EAAelpB,G,0CACnC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQvmF,SAASyoB,aAAevY,QAC1BvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxCp+D,sBAAsBhkC,G,oDAC1B,MAAM+qG,EAEK,QAFwB,EAElC,QAFiC,QAC1Bp1G,KAAK4qG,WAAW5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEppF,gBAAQ,eAAEiL,mBACP+mF,EAEL,QAFiC,QAC1Br1G,KAAKgrG,WAAWhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,qCACjE,eAAEn+E,mBACH,OAAO8mF,MAAAA,EAAAA,EAA6BC,KAGhCC,sBAAsB/hF,EAAelpB,G,0CACzC,MAAMu/F,QAAgB5pG,KAAK4qG,WACzB5qG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,8BAE5C7C,EAAQvmF,SAASiL,mBAAqBiF,QAChCvzB,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB//F,QAAerK,KAAKysG,iCAIxC8I,kB,gDACJ,OAAmF,QAA3E,SAAMv1G,KAAKgrG,iBAAiBhrG,KAAKysG,8BAA8B+I,oBAAY,QAAI,KAGnFC,gBAAgBliF,G,0CACpB,MAAM40E,QAAgBnoG,KAAKgrG,iBAAiBhrG,KAAKirG,wBACjD9C,EAAQqN,aAAejiF,QACjBvzB,KAAKorG,YAAYjD,QAAenoG,KAAKirG,2BAGvCyK,Y,0CACJ,MAAMvN,QAAgBnoG,KAAKgrG,iBAAiBhrG,KAAKirG,wBACjD,OAA0B,OAAnB9C,MAAAA,OAAO,EAAPA,EAASpmG,SAAkBoG,OAAOpJ,KAAKopG,EAAQpmG,QAAQsB,OAAS,EACnE8kG,EAAQpmG,OACR,IAAIwmG,MAGJoN,UAAUpiF,EAAoBlpB,G,0CAClC,MAAM89F,QAAgBnoG,KAAKgrG,WACzBhrG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,yBAG5C,OADA9C,EAAQpmG,OAASwxB,QACJvzB,KAAKorG,YAChBjD,EACAnoG,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,4BAI9BD,WAAW3gG,G,0CACzB,IAAI89F,EASJ,OARInoG,KAAK41G,UAAUvrG,EAAQwrG,mBACzB1N,EAAUnoG,KAAK81G,wBAGb91G,KAAK+1G,SAAsB,MAAX5N,IAClBA,QAAgBnoG,KAAKg2G,mBAAmB3rG,IAGnC89F,MAAAA,EAAAA,EAAWnoG,KAAK8oG,mBAGTsC,YAAYjD,EAAuB99F,G,0CACjD,OAAOrK,KAAK41G,UAAUvrG,EAAQwrG,iBAC1B71G,KAAKi2G,oBAAoB9N,SACnBnoG,KAAKk2G,kBAAkB/N,EAAS99F,MAGlCyrG,uBACR,OAAO91G,KAAKqX,MAAM8wF,QAGJ6N,mBAAmB3rG,G,0CACjC,aAAarK,KAAKyoG,eAAe31E,IAAkB/zB,GAAasL,MAGxD4rG,oBAAoB9N,GAC5BnoG,KAAKqX,MAAM8wF,QAAUA,EAGP+N,kBAAkB/N,EAAuB99F,G,0CACnDA,EAAQ8rG,uBACJn2G,KAAK0oG,qBAAqBoB,KAAK/qG,GAAaopG,EAAS99F,SAErDrK,KAAKyoG,eAAeqB,KAAK/qG,GAAaopG,EAAS99F,MAIzCugG,WAAWvgG,G,0CACzB,IACE,IAAIu/F,EASJ,OARI5pG,KAAK41G,UAAUvrG,EAAQwrG,mBACzBjM,EAAU5pG,KAAKo2G,qBAAqB/rG,IAGlCrK,KAAK+1G,QAAQ1rG,EAAQwrG,kBAA+B,MAAXjM,IAC3CA,QAAgB5pG,KAAK0pG,mBAAmBr/F,IAGnCu/F,EACP,MAAOhrG,GACPoB,KAAKuV,WAAWK,MAAMhX,OAIhBw3G,qBAAqB/rG,GAC7B,OAA2B,MAAvBrK,KAAKqX,MAAM+wF,SACN,KAEFpoG,KAAKqX,MAAM+wF,SAASpoG,KAAKq2G,oBAAoBhsG,IAG5CgsG,oBAAoBhsG,G,QAC5B,OAA0B,OAAnBA,MAAAA,OAAO,EAAPA,EAAS2d,QACgC,QAA5C,EAAmC,QAAnC,EAAAhoB,KAAKqX,MAAM+wF,SAAS/9F,EAAQ2d,eAAO,eAAEyG,eAAO,eAAEzG,OAC9ChoB,KAAKqX,MAAMiyF,aAGDI,mBAAmBr/F,G,gDACjC,GAAuB,OAAnBA,MAAAA,OAAO,EAAPA,EAAS2d,SAA6C,MAA3BhoB,KAAKqX,MAAMiyF,aACxC,OAAO,KAGT,MAAMgN,EAAgBt2G,KAAKgpG,iBAAiBl2E,IAAIzoB,EAAQ2d,QACxD,GAAqB,MAAjBsuF,EACF,OAAOA,EAGT,MAAM1M,GAAUv/F,MAAAA,OAAO,EAAPA,EAAS8rG,kBACmD,QAAvE,QAAMn2G,KAAK0oG,qBAAqB51E,IAAczoB,EAAQ2d,OAAQ3d,UAAS,cACjErK,KAAKyoG,eAAe31E,IACzBzoB,EAAQ2d,OACRhoB,KAAKoqG,iBAAiB//F,EAAS,CAAEksG,oBAAqBxmC,GAAoBymC,eAEtEx2G,KAAKyoG,eAAe31E,IAAczoB,EAAQ2d,OAAQ3d,GAG5D,OADArK,KAAKgpG,iBAAiBxhG,IAAI6C,EAAQ2d,OAAQ4hF,GACnCA,KAGCgM,UAAUC,GAClB,OAAOA,IAAoB5N,GAAgBwO,QAAUZ,IAAoB5N,GAAgByO,KAGjFX,QAAQF,GAChB,OAAOA,IAAoB5N,GAAgB0O,MAAQd,IAAoB5N,GAAgByO,KAGzE5L,YACdlB,EACAv/F,EAA0B,CACxBwrG,gBAAiB5N,GAAgByO,KACjCP,kBAAkB,I,0CAGpB,OAAOn2G,KAAK41G,UAAUvrG,EAAQwrG,uBACpB71G,KAAK42G,oBAAoBhN,SACzB5pG,KAAK62G,kBAAkBjN,EAASv/F,MAG5BwsG,kBAAkBjN,EAAmBv/F,G,0CACnD,MAAMwrG,EAAkBxrG,EAAQ8rG,iBAC5Bn2G,KAAK0oG,qBACL1oG,KAAKyoG,qBAEHoN,EAAgB/L,KAAK,GAAGz/F,EAAQ2d,SAAU4hF,EAASv/F,GACzDrK,KAAKgpG,iBAAiBttE,OAAOrxB,EAAQ2d,WAGvB4uF,oBAAoBhN,G,0CACoC,OAAlE5pG,KAAKo2G,qBAAqB,CAAEpuF,OAAQ4hF,EAAQn7E,QAAQzG,WACtDhoB,KAAKqX,MAAM+wF,SAASwB,EAAQn7E,QAAQzG,QAAU4hF,SAE1C5pG,KAAKupG,kBAGGQ,0BAA0BH,G,0CAExC,MAAMkN,EAAYxpG,KAAKyT,MAAMzT,KAAKC,UAAUq8F,UACtC5pG,KAAK+2G,+BAA+BD,SACpC92G,KAAKg3G,iCAAiCF,SACtC92G,KAAKi3G,gCAAgCH,MAK7BC,+BAA+BnN,G,0CAC7C,MAAMsN,QAAsBl3G,KAAK4qG,WAC/B5qG,KAAKoqG,iBACH,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cACpBhoB,KAAKysG,8BAITr+E,EAAkBw7E,EAAQvmF,SAAS+K,gBACV,OAA3B8oF,MAAAA,OAAa,EAAbA,EAAe7zF,UACjBumF,EAAQvmF,SAAW6zF,EAAc7zF,gBAClBrjB,KAAKyoG,eAAe7yE,IAAI72B,OACvC6qG,EAAQvmF,eAAiBrjB,KAAKyoG,eAAe31E,IAAS/zB,UAChDiB,KAAKyoG,eAAez8F,OAAOjN,KAEnC6qG,EAAQvmF,SAAS+K,gBAAkBA,EACS,WAAxCw7E,EAAQvmF,SAASiL,oBAAoE,MAAjCs7E,EAAQvmF,SAASyoB,eACvE89D,EAAQl7E,OAAO2yC,YAAc,KAC7BuoC,EAAQl7E,OAAO+yC,aAAe,KAC9BmoC,EAAQn7E,QAAQ68E,eAAiB,KACjC1B,EAAQ7qG,KAAK0sG,mBAAqB,YAE9BzrG,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBACH,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cACpBhoB,KAAKysG,iCAKDwK,gCAAgCrN,G,0CAC9C,MAAMsN,QAAsBl3G,KAAK4qG,WAC/B5qG,KAAKoqG,iBACH,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cACpBhoB,KAAKswG,+BAGgB,OAA3B4G,MAAAA,OAAa,EAAbA,EAAe7zF,YACjB6zF,EAAc7zF,SAAS+K,gBAAkBw7E,EAAQvmF,SAAS+K,gBAC1Dw7E,EAAQvmF,SAAW6zF,EAAc7zF,gBAE7BrjB,KAAKyoG,eAAeqB,KACxBF,EAAQn7E,QAAQzG,OAChB4hF,QACM5pG,KAAKswG,oCAEPtwG,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBACH,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cACpBhoB,KAAKswG,kCAKD0G,iCAAiCpN,G,0CAC/C,MAAMsN,QAAsBl3G,KAAK4qG,WAC/B5qG,KAAKoqG,iBAAiB,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cAAgBhoB,KAAKirG,yBAExC,OAA3BiM,MAAAA,OAAa,EAAbA,EAAe7zF,YACjB6zF,EAAc7zF,SAAS+K,gBAAkBw7E,EAAQvmF,SAAS+K,gBAC1Dw7E,EAAQvmF,SAAW6zF,EAAc7zF,gBAE7BrjB,KAAKyoG,eAAeqB,KACxBF,EAAQn7E,QAAQzG,OAChB4hF,QACM5pG,KAAKswG,oCAEPtwG,KAAK8qG,YACTlB,EACA5pG,KAAKoqG,iBAAiB,CAAEpiF,OAAQ4hF,EAAQn7E,QAAQzG,cAAgBhoB,KAAKirG,4BAKzD1B,e,sDACRvpG,KAAKm3G,wBACiB,OAAd,QAAV,EAAAn3G,KAAKqX,aAAK,eAAE+wF,WAAoBjgG,OAAOpJ,KAAKiB,KAAKqX,MAAM+wF,UAAU/kG,OAAS,EAC5ErD,KAAKooG,SAASzhE,KAAK,MAIrB3mC,KAAKooG,SAASzhE,KAAK3mC,KAAKqX,MAAM+wF,aAGtBgC,iBACRgN,EACAC,G,cAEA,OAAwB,MAApBD,EACKC,GAETD,EAAiBpvF,OAAiC,QAAxB,EAAAovF,MAAAA,OAAgB,EAAhBA,EAAkBpvF,cAAM,QAAIqvF,EAAervF,OACrEovF,EAAiBvB,gBACkB,QAAjC,EAAAuB,MAAAA,OAAgB,EAAhBA,EAAkBvB,uBAAe,QAAIwB,EAAexB,gBACtDuB,EAAiBjB,iBACmB,QAAlC,EAAAiB,MAAAA,OAAgB,EAAhBA,EAAkBjB,wBAAgB,QAAIkB,EAAelB,iBACvDiB,EAAiBb,oBACsB,QAArC,EAAAa,MAAAA,OAAgB,EAAhBA,EAAkBb,2BAAmB,QAAIc,EAAed,oBAC1Da,EAAiBvkB,UAAuC,QAA3B,EAAAukB,MAAAA,OAAgB,EAAhBA,EAAkBvkB,iBAAS,QAAIwkB,EAAexkB,UACpEukB,GAGK/M,6BACZ,MAAO,CAAEwL,gBAAiB5N,GAAgBwO,OAAQzuF,OAAQhoB,KAAKqX,MAAMiyF,cAGvD2B,uB,gDACd,MAAO,CACL4K,gBAAiB5N,GAAgB0O,KACjCJ,oBAAqBxmC,GAAoBunC,QACzCtvF,OAA+B,QAAvB,EAAAhoB,KAAKqX,MAAMiyF,oBAAY,cAAWtpG,KAAKu3G,6BAC/CpB,kBAAkB,MAIN1J,4B,gDACd,MAAO,CACLoJ,gBAAiB5N,GAAgB0O,KACjCJ,oBAAqBxmC,GAAoBymC,MACzCxuF,OAA+B,QAAvB,EAAAhoB,KAAKqX,MAAMiyF,oBAAY,cAAWtpG,KAAKu3G,6BAC/CpB,kBAAkB,MAIN7F,6B,gDACd,MAAO,CACLuF,gBAAiB5N,GAAgB0O,KACjCJ,oBAAqBxmC,GAAoB0mC,OACzCzuF,OAA+B,QAAvB,EAAAhoB,KAAKqX,MAAMiyF,oBAAY,cAAWtpG,KAAKioB,YAC/CkuF,kBAAkB,MAINrJ,8B,gDACd,MAAO,CACL+I,gBAAiB5N,GAAgB0O,KACjCR,kBAAkB,EAClBnuF,OAA+B,QAAvB,EAAAhoB,KAAKqX,MAAMiyF,oBAAY,cAAWtpG,KAAKu3G,iCAInCA,6B,0CACd,aAAav3G,KAAKyoG,eAAe31E,IAAY/zB,OAG/By4G,8BACdxvF,EAAiBhoB,KAAKqX,MAAMiyF,c,0CAE5B,MAAM4N,QAAsBl3G,KAAK4qG,WAC/B5qG,KAAKoqG,iBAAiB,CAAEpiF,OAAQA,SAAgBhoB,KAAKysG,oCAEjDzsG,KAAK8qG,YACT9qG,KAAKy3G,aAAaP,GAClBl3G,KAAKoqG,iBAAiB,CAAEpiF,OAAQA,SAAgBhoB,KAAKysG,iCAIzCiL,gCACd1vF,EAAiBhoB,KAAKqX,MAAMiyF,c,0CAE5B,MAAM4N,QAAsBl3G,KAAK4qG,WAC/B5qG,KAAKoqG,iBAAiB,CAAEpiF,OAAQA,SAAgBhoB,KAAKirG,+BAEjDjrG,KAAK8qG,YACT9qG,KAAKy3G,aAAaP,GAClBl3G,KAAKoqG,iBAAiB,CAAEpiF,OAAQA,SAAgBhoB,KAAKirG,4BAIzC0M,+BACd3vF,EAAiBhoB,KAAKqX,MAAMiyF,c,gDAEtBtpG,KAAK21F,uBAAuB,KAAM,CAAE3tE,OAAQA,UAC5ChoB,KAAK41F,4BAA4B,KAAM,CAAE5tE,OAAQA,UACjDhoB,KAAKgtG,sBAAsB,KAAM,CAAEhlF,OAAQA,OAGzCyiF,wBAAwBziF,EAAiBhoB,KAAKqX,MAAMiyF,qBACrDtpG,KAAKqX,MAAM+wF,SAASpgF,GAC3BhoB,KAAKgpG,iBAAiBttE,OAAO1T,GAGfmvF,wB,0CAEd,IAAK,MAAMnvF,KAAUhoB,KAAKqX,MAAM+wF,gBAClBpoG,KAAKC,mBAAmB,CAAE+nB,OAAQA,MAC5ChoB,KAAKyqG,wBAAwBziF,MAMzByvF,aAAa7N,GACrB,MAAMgO,EAA+B,CAAEv0F,SAAUumF,EAAQvmF,UACzD,OAAOlb,OAAOC,OAAOpI,KAAKwpG,gBAAiBoO,GAG7B/N,0BAA0BD,G,0CAExC,OADAA,EAAQvmF,SAAS+K,sBAAwBpuB,KAAKyxG,2BACvC7H,KAGO6H,yBAAyBpnG,G,gDAEvC,OADAA,EAAUrK,KAAKoqG,iBAAiB//F,QAAerK,KAAKirG,wBACG,QAA/C,SAAMjrG,KAAKgrG,WAAW3gG,IAAU+jB,uBAAe,QAAI,IAAIlB,MAGvDg9E,kC,QACR,MAAMliF,EAAShoB,KAAKqX,MAAMiyF,aACZ,MAAVthF,GAAwD,OAAV,QAA5B,EAAU,QAAV,EAAAhoB,KAAKqX,aAAK,eAAE+wF,SAASpgF,UAAO,eAAEtd,QAGpD1K,KAAKqX,MAAM+wF,SAASpgF,GAAQtd,KAAO,IAAI4iB,IAG/Bk8E,cAAc7/F,EAA0B,MAChD,OAAO3J,KAAK4oG,aAAaY,cAAc7/F,GAG/Bm/F,cAAcn/F,EAA8B,MACpD,OAAO3J,KAAK4oG,aAAaiP,aAAaluG,GAGxB2gG,sBAAsBtiF,G,gDAC9BhoB,KAAK6qG,eAAe,KAAM,CAAE7iF,OAAQA,UACpChoB,KAAKgqG,cAAc,KAAM,CAAEhiF,OAAQA,IACzC,MAAMsT,EAAQt7B,KAAKqX,MAAMgxF,sBAAsB5hG,QAAQuhB,GACnDsT,GAAS,IACXt7B,KAAKqX,MAAMgxF,sBAAsBntE,OAAOI,EAAO,SACzCt7B,KAAKyoG,eAAeqB,KAAK/qG,GAA4BiB,KAAKqX,MAAMgxF,2BAI1DmC,sBAAsBxiF,G,gDAC9BhoB,KAAK03G,gCAAgC1vF,SACrChoB,KAAKw3G,8BAA8BxvF,SACnChoB,KAAK23G,+BAA+B3vF,MAG5BuiF,2B,0CACd,GAA2B,MAAvBvqG,KAAKqX,MAAM+wF,UAAoBjgG,OAAOpJ,KAAKiB,KAAKqX,MAAM+wF,UAAU/kG,OAAS,QACrErD,KAAKiqG,cAAc,WAG3B,IAAK,MAAMjiF,KAAUhoB,KAAKqX,MAAM+wF,SAC9B,GAAc,MAAVpgF,EAAJ,CAGA,SAAUhoB,KAAKC,mBAAmB,CAAE+nB,OAAQA,IAAW,OAC/ChoB,KAAKiqG,cAAcjiF,GACzB,YAEIhoB,KAAKiqG,cAAc,UAIfU,8BAA8BtgG,G,0CAC1C,MAAMytG,QAAsB93G,KAAKquC,sBAAsB,CAAErmB,OAAQ3d,MAAAA,OAAO,EAAPA,EAAS2d,SACpE5S,QAAgBpV,KAAK0sC,gBAAgB,CAAE1kB,OAAQ3d,MAAAA,OAAO,EAAPA,EAAS2d,SACxDqvF,EACc,WAAlBS,GAAyC,MAAX1iG,EAC1BpV,KAAKqqG,6BACCrqG,KAAKirG,uBACjB,OAAOjrG,KAAKoqG,iBAAiB//F,EAASgtG,OCh8E1C,IAAYU,IAAZ,SAAYA,GACV,iBACA,iBACA,qBACA,mBACA,uBALF,CAAYA,KAAAA,GAAY,K,2SCKjB,MAAM,GAoBXx4G,YAAoBK,GAAA,KAAAA,aAAAA,EAnBpBqC,mBAAmBwf,GACjB,GAAa,MAATA,EACF,MAAM,IAAI5iB,MAAM,uBAGlB,MAAM0I,EAAQka,EAAMra,MAAM,KAC1B,GAAqB,IAAjBG,EAAMlE,OACR,MAAM,IAAIxE,MAAM,yBAGlB,MAAMm5G,EAAUh2G,EAAMi2G,iBAAiB1wG,EAAM,IAC7C,GAAe,MAAXywG,EACF,MAAM,IAAIn5G,MAAM,2BAIlB,OADqByO,KAAKyT,MAAMi3F,GAM5Bh2B,UACJ3gB,EACAI,EACAjyC,G,gDAEMxvB,KAAKk4G,SAAS72C,SACdrhE,KAAKs0G,gBAAgB7yC,GACC,MAAxBjyC,UACIxvB,KAAKm4G,YAAY3oF,EAAqB,UACtCxvB,KAAKo4G,gBAAgB5oF,EAAqB,QAI9C2oF,YAAYt1F,G,0CAChB,aAAa7iB,KAAKJ,aAAa2rG,kBAAkB1oF,MAG7C4+D,c,0CACJ,aAAazhF,KAAKJ,aAAayrG,uBAG3B+M,gBAAgBxoF,G,0CACpB,aAAa5vB,KAAKJ,aAAa8rG,sBAAsB97E,MAGjD8xD,kB,0CACJ,aAAa1hF,KAAKJ,aAAa4rG,2BAG3B0M,SAASz2F,G,gDACPzhB,KAAKJ,aAAairG,eAAeppF,MAGnCi/D,W,0CACJ,aAAa1gF,KAAKJ,aAAa8qG,oBAG3B4J,gBAAgB7yC,G,0CACpB,aAAazhE,KAAKJ,aAAa00G,gBAAgB7yC,MAG3C8f,kB,0CACJ,aAAavhF,KAAKJ,aAAa2hF,qBAG3B82B,e,0CACJ,MAAM52F,QAAczhB,KAAK0gF,WACnBjf,QAAqBzhE,KAAKuhF,kBAC1B1+D,QAAiB7iB,KAAKyhF,cACtB7xD,QAAqB5vB,KAAK0hF,kBAC1BtsE,QAAgBpV,KAAKJ,aAAa8sC,kBAClC0B,QAAepuC,KAAKJ,aAAayuC,wBAEvB,MAAXj5B,GAA+B,IAAZA,GAA6B,WAAXg5B,UAElCpuC,KAAKs4G,oBAGPt4G,KAAKk4G,SAASz2F,SACdzhB,KAAKs0G,gBAAgB7yC,SACrBzhE,KAAKm4G,YAAYt1F,SACjB7iB,KAAKo4G,gBAAgBxoF,MAGvBqlF,kBAAkBxzF,G,0CACtB,aAAazhB,KAAKJ,aAAaq1G,kBAAkBxzF,MAG7CuzF,oB,0CACJ,aAAah1G,KAAKJ,aAAao1G,uBAG3BtjC,sB,0CACJ,aAAa1xE,KAAKJ,aAAaq1G,kBAAkB,SAG7CqD,WAAWtwF,G,gDACThoB,KAAKJ,aAAairG,eAAe,KAAM,CAAE7iF,OAAQA,UACjDhoB,KAAKJ,aAAa00G,gBAAgB,KAAM,CAAEtsF,OAAQA,UAClDhoB,KAAKJ,aAAa2rG,kBAAkB,KAAM,CAAEvjF,OAAQA,UACpDhoB,KAAKJ,aAAa8rG,sBAAsB,KAAM,CAAE1jF,OAAQA,OAM1D85D,YAAYrgE,G,0CAChB,MAAM82F,QAAoBv4G,KAAKJ,aAAaqtG,kBAC5C,GAAc,OAAVxrF,GAAiC,MAAf82F,EACpB,OAAOA,EAKT,GAAa,OAFb92F,EAAQA,MAAAA,EAAAA,QAAgBzhB,KAAKJ,aAAa8qG,kBAGxC,MAAM,IAAI7rG,MAAM,oBAGlB,OAAO,GAAaijF,YAAYrgE,MAG5B+2F,yB,0CACJ,MAAMR,QAAgBh4G,KAAK8hF,cAC3B,QAA2B,IAAhBk2B,EAAQxkE,IACjB,OAAO,KAGT,MAAMqsB,EAAI,IAAI9yD,KAAK,GAEnB,OADA8yD,EAAE44C,cAAcT,EAAQxkE,KACjBqsB,KAGH64C,sBAAsBC,EAAwB,G,0CAClD,MAAM94C,QAAU7/D,KAAKw4G,yBACrB,GAAS,MAAL34C,EACF,OAAO,EAGT,MAAM+4C,EAAc/4C,EAAEmoB,YAAa,IAAIj7E,MAAOi7E,UAA4B,IAAhB2wB,GAC1D,OAAO7yG,KAAKmvB,MAAM2jF,EAAc,QAG5Bj4B,kBAAkB10C,EAAkB,G,0CAExC,aADyBjsC,KAAK04G,yBACV,GAAKzsE,KAGrBhkB,Y,0CACJ,MAAM+vF,QAAgBh4G,KAAK8hF,cAC3B,QAA2B,IAAhBk2B,EAAQa,IACjB,MAAM,IAAIh6G,MAAM,oBAGlB,OAAOm5G,EAAQa,OAGXn7F,W,0CACJ,MAAMs6F,QAAgBh4G,KAAK8hF,cAC3B,QAA6B,IAAlBk2B,EAAQhlG,MACjB,MAAM,IAAInU,MAAM,kBAGlB,OAAOm5G,EAAQhlG,SAGXghD,mB,0CACJ,MAAMgkD,QAAgBh4G,KAAK8hF,cAC3B,QAAsC,IAA3Bk2B,EAAQc,eACjB,MAAM,IAAIj6G,MAAM,+BAGlB,OAAOm5G,EAAQc,kBAGXC,U,0CACJ,MAAMf,QAAgBh4G,KAAK8hF,cAC3B,YAA4B,IAAjBk2B,EAAQ11G,KACV,KAGF01G,EAAQ11G,QAGX02G,a,0CACJ,MAAMhB,QAAgBh4G,KAAK8hF,cAC3B,YAA+B,IAApBk2B,EAAQ5mF,SAIZ4mF,EAAQ5mF,WAGX6nF,Y,0CACJ,MAAMjB,QAAgBh4G,KAAK8hF,cAC3B,QAA2B,IAAhBk2B,EAAQkB,IACjB,MAAM,IAAIr6G,MAAM,mBAGlB,OAAOm5G,EAAQkB,OAGXC,gB,0CACJ,MAAMnB,QAAgBh4G,KAAK8hF,cAE3B,OAAO/8E,MAAMuhG,QAAQ0R,EAAQoB,MAAQpB,EAAQoB,IAAI54G,SAAS,gB,2SCrL9D,MAAM64G,GAAoC,CACxCh4C,YAAa,cACb6pC,eAAgB,iBAChBoO,wBAAyB,0BACzBr4E,0BAA2B,4BAC3B8qE,4BAA6B,8BAC7BE,8BAA+B,gCAC/BzuF,cAAe,gBACf8uF,gBAAiB,YACjBhpE,eAAgB,oBAChBzgB,SAAU,kBACV+M,aAAc,sBACdm8B,mBAAoB,qBACpB4gD,6BAA8B,+BAC9BlrE,gBAAiB,kBACjBL,4BAA6B,8BAC7B5iB,4BAA6B,yBAC7B0iB,oBAAqB,sBACrBH,oBAAqB,sBACrBM,mCAAoC,qCACpCF,uBAAwB,yBACxBnkB,eAAgB,iBAChBgxF,UAAW,YACXE,wBAAyB,0BACzBC,6BAA8B,+BAC9B96C,cAAe,gBACfm7C,kBAAmB,uBACnBxtE,yBAA0B,2BAC1Bu4E,gBAAiB,mBACjBxK,yBAA0B,2BAC1BG,oCAAqC,sCACrCG,kBAAmB,oBACnBG,gBAAiB,kBACjBgK,gBAAiB,kBACjB1J,qBAAsB,uBACtBG,kBAAmB,uBACnBG,WAAY,aACZx1F,OAAQ,SACRg6E,WAAY,aACZ6kB,WAAY,gBACZvkB,gBAAiB,kBACjBic,SAAU,WACVG,WAAY,aACZljF,gBAAiB,kBACjBwxC,kBAAmB,oBACnBiyC,gBAAiB,kBACjBpvF,mBAAoB,qBACpBmU,QAAS,2BACTw7E,iBAAkB,mBAClBh4F,IAAK,MACLE,cAAe,gBACfhG,IAAK,MACLs9E,QAAS,UACT8nB,WAAY,aACZ3iE,UAAW,iBACX51B,OAAQ,SACR4xF,eAAgB,iBAChBG,0BAA2B,+BAC3BE,aAAc,eACdK,2BAA4B,6BAC5BG,YAAa,cACbM,0BAA2B,4BAC3B7lF,aAAc,kBACdvT,aAAc,eACd2mD,aAAc,eACd1+C,gBAAiB,kBACjB42F,cAAe,mBACf5E,SAAU,WACV6E,MAAO,gBACPz2E,MAAO,QACP64D,UAAW,YACXh0E,OAAQ,SACR6xF,cAAe,mBACfvrF,mBAAoB,qBACpBwd,aAAc,aACdyoE,gBAAiB,mBAGbuF,GAA2C,CAC/CvsF,QAAS,WACTG,YAAa,eACbF,QAAS,WACTmkB,SAAU,YACVhkB,SAAU,YACV8C,eAAgB,kBAChBg+B,cAAe,iBACf/hC,UAAW,aACXe,MAAO,SACPpK,SAAU,aAGN,GACI,SADJ,GAEmB,wBAFnB,GAGU,eAHV,GAIiB,sBAJjB,GAKa,kBAGb,GACK,kBADL,GAEU,uBAFV,GAGO,aAGN,MAAM02F,GAIXx6G,YACYkpG,EACAC,EACAE,GAFA,KAAAH,eAAAA,EACA,KAAAC,qBAAAA,EACA,KAAAE,aAAAA,EAGNK,iB,0CACJ,MAAM+Q,QAA4Bh6G,KAAKi6G,yBACvC,OAA8B,MAAvBD,GAA+BA,EAAsBjC,GAAamC,UAGrEhR,U,0CACJ,IAAI8Q,QAA4Bh6G,KAAKi6G,yBACrC,KAAOD,EAAsBjC,GAAamC,QAAQ,CAChD,OAAQF,GACN,KAAKjC,GAAaoC,UACVn6G,KAAKo6G,uBACX,MACF,KAAKrC,GAAasC,UACVr6G,KAAKs6G,uBACX,MACF,KAAKvC,GAAawC,YACVv6G,KAAKw6G,uBAIfR,GAAuB,MAIXI,uB,8IACd,MAAMK,EAAqBC,GAA4B,mCACrD,IAAK,MAAMpmG,KAAO+kG,GACL,MAAP/kG,UAGEtU,KAAKwH,IAAI6xG,GAAO/kG,GAAM,OAE9B,GAAsB,MAAlBomG,EACF,IAAK,MAAMC,KAAab,GACL,MAAba,UAGE36G,KAAKwH,IAAIsyG,GAAca,GAAa3yF,EAAQ,UAWlDmgF,EACsC,QAAzC,QAAMnoG,KAAK8yB,IAAiB,WAAa,QAAI9yB,KAAK4oG,aAAaiP,aAAa,MAC/E1P,EAAQqN,aAAeuC,GAAasC,IACpClS,EAAQ/5E,gBACmD,QAAxD,QAAMpuB,KAAK8yB,IAAqBumF,GAAOjrF,wBAAiB,QAAI+5E,EAAQ/5E,gBACvE+5E,EAAQhnF,OAAgD,QAAtC,QAAMnhB,KAAK8yB,IAAYumF,GAAOl4F,eAAQ,QAAIgnF,EAAQhnF,OACpEgnF,EAAQmL,uBACuD,QAA5D,QAAMtzG,KAAK8yB,IAAaumF,GAAO76F,oCAA6B,QAC7D2pF,EAAQmL,uBACVnL,EAAQsL,2BACqD,QAA1D,QAAMzzG,KAAK8yB,IAAYumF,GAAO5F,mCAA4B,QAC3DtL,EAAQsL,2BACVtL,EAAQplF,gBAC0C,QAA/C,QAAM/iB,KAAK8yB,IAAYumF,GAAOt2F,wBAAiB,QAAIolF,EAAQplF,gBAC9DolF,EAAQ0M,0BACwC,QAA7C,QAAM70G,KAAK8yB,IAAYumF,GAAOM,sBAAe,QAAIxR,EAAQ0M,0BAC5D1M,EAAQ4M,SAAiD,QAArC,QAAM/0G,KAAK8yB,IAASumF,GAAOtE,iBAAU,QAAI5M,EAAQ4M,SACrE5M,EAAQoM,gBAC0C,QAA/C,QAAMv0G,KAAK8yB,IAAYumF,GAAO9E,wBAAiB,QAAIpM,EAAQoM,gBAC9DpM,EAAQhlE,MAAiD,QAAxC,QAAMnjC,KAAK8yB,IAAeumF,GAAOl2E,cAAO,QAAIglE,EAAQhlE,MACrEglE,EAAQr8D,aAA4D,QAA5C,QAAM9rC,KAAK8yB,IAAYumF,GAAOvtE,qBAAc,QAAIq8D,EAAQr8D,aAChFq8D,EAAQ75E,mBAC6C,QAAlD,QAAMtuB,KAAK8yB,IAAYumF,GAAO/qF,2BAAoB,QAAI65E,EAAQ75E,mBACjE65E,EAAQpmG,OAAqD,QAA3C,QAAM/B,KAAK8yB,IAASumF,GAAOtG,uBAAgB,QAAI5K,EAAQpmG,OACzEomG,EAAQiI,WAAyD,QAA3C,QAAMpwG,KAAK8yB,IAAaumF,GAAOjJ,mBAAY,QAAIjI,EAAQiI,WAC7EjI,EAAQ2H,qBACgD,QAArD,QAAM9vG,KAAK8yB,IAAaumF,GAAOvJ,6BAAsB,QAAI3H,EAAQ2H,qBACpE3H,EAAQkH,kBAC6C,QAAlD,QAAMrvG,KAAK8yB,IAAaumF,GAAOhK,0BAAmB,QAAIlH,EAAQkH,kBACjElH,EAAQ8H,kBAC6C,QAAlD,QAAMjwG,KAAK8yB,IAAaumF,GAAOpJ,0BAAmB,QAAI9H,EAAQ8H,kBACjE9H,EAAQyL,YAA2D,QAA5C,QAAM5zG,KAAK8yB,IAAaumF,GAAOzF,oBAAa,QAAIzL,EAAQyL,YAC/EzL,EAAQ+C,eAC0C,QAA/C,QAAMlrG,KAAK8yB,IAAaumF,GAAOnO,uBAAgB,QAAI/C,EAAQ+C,eAC9D/C,EAAQ4G,yBACoD,QAAzD,QAAM/uG,KAAK8yB,IAAaumF,GAAOtK,iCAA0B,QAC1D5G,EAAQ4G,yBACV5G,EAAQ+G,oCAC+D,QAApE,QAAMlvG,KAAK8yB,IAAaumF,GAAOnK,4CAAqC,QACrE/G,EAAQ+G,oCAEV,MAAMlnF,EACmC,QAAtC,QAAMhoB,KAAK8yB,IAAYumF,GAAOrxF,eAAQ,cAAWhoB,KAAK8yB,IAAYumF,GAAOlI,UAEtEyJ,EAAiB56G,KAAK4oG,aAAaY,cAAc,MACjDqR,EAAmC,CACvCjP,wBAC2D,QAAxD,QAAM5rG,KAAK8yB,IAAaumF,GAAOC,gCAAyB,QACzDsB,EAAev3F,SAASuoF,wBAC1B3qE,0BAC6D,QAA1D,QAAMjhC,KAAK8yB,IAAaumF,GAAOp4E,kCAA2B,QAC3D25E,EAAev3F,SAAS4d,0BAC1BmrE,gBAAiB,KACjBE,gBACmD,QAAhD,QAAMtsG,KAAK8yB,IAAaumF,GAAO/M,wBAAiB,QACjDsO,EAAev3F,SAASipF,gBAC1BhpE,eACiD,QAA9C,QAAMtjC,KAAK8yB,IAAYumF,GAAO/1E,uBAAgB,QAAIs3E,EAAev3F,SAASigB,eAC7E7B,gBAC+C,QAA5C,QAAMzhC,KAAK8yB,IAASumF,GAAO53E,wBAAiB,QAAIm5E,EAAev3F,SAASoe,gBAC3EL,4BAC+D,QAA5D,QAAMphC,KAAK8yB,IAAaumF,GAAOj4E,oCAA6B,QAC7Dw5E,EAAev3F,SAAS+d,4BAC1B5iB,4BAC+D,QAA5D,QAAMxe,KAAK8yB,IAAaumF,GAAO76F,oCAA6B,QAC7Do8F,EAAev3F,SAAS7E,4BAC1B0iB,oBACuD,QAApD,QAAMlhC,KAAK8yB,IAAaumF,GAAOn4E,4BAAqB,QACrD05E,EAAev3F,SAAS6d,oBAC1BH,oBACuD,QAApD,QAAM/gC,KAAK8yB,IAAaumF,GAAOt4E,4BAAqB,QACrD65E,EAAev3F,SAAS0d,oBAC1BM,mCACsE,QAAnE,QAAMrhC,KAAK8yB,IAAaumF,GAAOh4E,2CAAoC,QACpEu5E,EAAev3F,SAASge,mCAC1BF,uBAC0D,QAAvD,QAAMnhC,KAAK8yB,IAAaumF,GAAOl4E,+BAAwB,QACxDy5E,EAAev3F,SAAS8d,uBAC1B6sE,UAAsD,QAA1C,QAAMhuG,KAAK8yB,IAAaumF,GAAOrL,kBAAW,QAAI4M,EAAev3F,SAAS2qF,UAClFE,wBAC2D,QAAxD,QAAMluG,KAAK8yB,IAAaumF,GAAOnL,gCAAyB,QACzD0M,EAAev3F,SAAS6qF,wBAC1BC,6BACgE,QAA7D,QAAMnuG,KAAK8yB,IAAaumF,GAAOlL,qCAA8B,QAC9DyM,EAAev3F,SAAS8qF,6BAC1BK,kBACqD,QAAlD,QAAMxuG,KAAK8yB,IAAaumF,GAAO7K,0BAAmB,QACnDoM,EAAev3F,SAASmrF,kBAC1BxtE,yBAC4D,QAAzD,QAAMhhC,KAAK8yB,IAAaumF,GAAOr4E,iCAA0B,QAC1D45E,EAAev3F,SAAS2d,yBAC1Bu4E,gBACmD,QAAhD,QAAMv5G,KAAK8yB,IAAaumF,GAAOE,wBAAiB,QACjDqB,EAAev3F,SAASk2F,gBAC1B/J,gBACmD,QAAhD,QAAMxvG,KAAK8yB,IAAaumF,GAAO7J,wBAAiB,QACjDoL,EAAev3F,SAASmsF,gBAC1BG,gBACmD,QAAhD,QAAM3vG,KAAK8yB,IAAaumF,GAAOG,wBAAiB,QACjDoB,EAAev3F,SAASssF,gBAC1BvhF,gBAAwC,QAAvB,EAAA+5E,EAAQ/5E,uBAAe,QAAIwsF,EAAev3F,SAAS+K,gBACpEwxC,kBACiD,QAA9C,QAAM5/D,KAAK8yB,IAASumF,GAAOz5C,0BAAmB,QAC/Cg7C,EAAev3F,SAASu8C,kBAC1BszC,0BAC6D,QAA1D,QAAMlzG,KAAK8yB,IAAaumF,GAAOnG,kCAA2B,QAC3D0H,EAAev3F,SAAS6vF,0BAC1BE,aAC4C,QAAzC,QAAMpzG,KAAK8yB,IAASumF,GAAOjG,qBAAc,QAAIwH,EAAev3F,SAAS+vF,aACxEc,0BACyD,QAAtD,QAAMl0G,KAAK8yB,IAASumF,GAAOnF,kCAA2B,QACvD0G,EAAev3F,SAAS6wF,0BAC1B7lF,aAAc,CACZ8+E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAYumF,GAAOhrF,eAE3CvT,mBAAoB9a,KAAK8yB,IAAYumF,GAAOv+F,cAC5CuI,SAAoB,MAAV2E,EAAiB,WAAahoB,KAAK8yB,IAASgnF,GAAcz2F,SAAW2E,GAC/E8jB,aAC+C,QAA5C,QAAM9rC,KAAK8yB,IAAYumF,GAAOvtE,qBAAc,QAAI8uE,EAAev3F,SAASyoB,aAC3Exd,mBACqD,QAAlD,QAAMtuB,KAAK8yB,IAAYumF,GAAO/qF,2BAAoB,QACnDssF,EAAev3F,SAASiL,oBAK5B,GAAc,MAAVtG,EAMF,aALMhoB,KAAKwH,IAAI,GAA0BqzG,SACnC76G,KAAKwH,IAAI,GAAa2gG,SACtBnoG,KAAKwH,IAAI,GAA4B,UACrCxH,KAAKwH,IAAI,GAAmB,iBAC5BizG,KAIRtS,EAAQ13E,qBAAuBzwB,KAAK8yB,IAAYgnF,GAAcrpF,eAAiBzI,SACzEhoB,KAAKwH,IAAI,GAAa2gG,SACtBnoG,KAAKwH,IAAIwgB,EAAQ,CACrBtd,KAAM,CACJgvB,kBAAmB,KACnBnM,QAAS,CACP4/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAkCgnF,GAAcvsF,QAAUvF,IAElF+jC,mBAAoB,KACpBr+B,YAAa,CACXy/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IACpBgnF,GAAcpsF,YAAc1F,IAGhC6pF,sBAAuB7xG,KAAK8yB,IAAiBumF,GAAOxH,iBACpDrkF,QAAS,CACP2/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAkCgnF,GAActsF,QAAUxF,IAElF+uB,UAAW,KACX0X,oBAAqBzuD,KAAK8yB,IACxBgnF,GAAcrrD,cAAgBzmC,GAEhC4F,0BAA2B,CACzBu/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAgCumF,GAAOziF,UAE/DjJ,SAAU,CACRw/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAkCgnF,GAAcnsF,SAAW3F,IAEnF0E,gBAAiB1sB,KAAK8yB,IAAoCgnF,GAAcptF,UAAY1E,GACpFyF,MAAO,CACL0/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAgCgnF,GAAcrsF,MAAQzF,KAGhFjpB,KAAM,CACJ0sG,yBAA0BzrG,KAAK8yB,IAAYumF,GAAOzpF,cAClDi9E,gBAAiB,KACjBiO,oBAAqB,KACrBC,mBAAoB,KACpBC,yBAA0B,KAC1BltF,mBAAoB,CAClByiF,gBAAiBvwG,KAAK8yB,IAAYumF,GAAOz+F,QACzCuyF,UAAW,MAEbqF,aAAc,KACdzkF,iBAAkB,CAChBo/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAASumF,GAAOzkB,WAAa5sE,IAErDiG,WAAY,CACVk/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAAYumF,GAAOI,aAE3CzrF,aAAc,CACZm/E,UAAW,KACXoD,gBAAiBvwG,KAAK8yB,IAASumF,GAAOnkB,gBAAkBltE,IAE1DzE,UAAW,MAEbkL,QAAS,CACP68E,qBAAsBtrG,KAAK8yB,IAAYumF,GAAOx2F,UAC9Co4F,qBAAsB,KACtBtO,mCAAoC3sG,KAAK8yB,IAAaumF,GAAO1M,8BAC7D35F,YAAahT,KAAK8yB,IAAYumF,GAAOrd,WACrC3oC,oBAAqBrzD,KAAK8yB,IAAaumF,GAAOhmD,eAC9C89C,SAAU,KACVG,WAAY,KACZU,iBAAkB,KAClBvvF,mBAAoB,KACpB8pF,qBAAsB,KACtBjyF,oBAAqBta,KAAK8yB,IAAYumF,GAAO/+F,eAC7Cg4F,cAAetyG,KAAK8yB,IAAaumF,GAAOj/F,KACxCw3E,cAAe5xF,KAAK8yB,IAAYumF,GAAOznB,SACvCjgD,SAAU,KACV3pB,OAAQA,EACRrK,iBAAkB,MAEpB0F,SAAUw3F,EACVnsF,OAAQ,CACN2yC,kBAAmBrhE,KAAK8yB,IAAYumF,GAAOh4C,aAC3CwgB,aAAc,KACdpgB,mBAAoBzhE,KAAK8yB,IAAYumF,GAAO53C,cAC5C4K,cAAe,cAIbrsE,KAAKwH,IAAI,GAA4B,CAACwgB,UACtChoB,KAAKwH,IAAI,GAAmBwgB,GAElC,MAAMsgF,EAAgD,CACpD,CAACtgF,SAAehoB,KAAK8yB,IAAYumF,GAAOK,aAE1CpR,EAAgBtgF,SAAgBhoB,KAAK8yB,IAAYumF,GAAOK,kBAClD15G,KAAKwH,IAAI,GAAsB8gG,SAE/BmS,EAAYzyF,UAERhoB,KAAK0oG,qBAAqB9yE,IAAIyjF,GAAO/kG,IAAK,CAAEu+E,UAAW,uBACzD7yF,KAAK0oG,qBAAqBoB,KAC9B,GAAG9hF,IAAS,WACNhoB,KAAK0oG,qBAAqB51E,IAAIumF,GAAO/kG,IAAK,CAAEu+E,UAAW,cAC7D,CAAEA,UAAW,oBAET7yF,KAAK0oG,qBAAqB18F,OAAOqtG,GAAO/kG,IAAK,CAAEu+E,UAAW,sBAGxD7yF,KAAK0oG,qBAAqB9yE,IAAIyjF,GAAO/kG,IAAK,CAAEu+E,UAAW,kBACzD7yF,KAAK0oG,qBAAqBoB,KAC9B,GAAG9hF,IAAS,WACNhoB,KAAK0oG,qBAAqB51E,IAAIumF,GAAO/kG,IAAK,CAAEu+E,UAAW,SAC7D,CAAEA,UAAW,eAET7yF,KAAK0oG,qBAAqB18F,OAAOqtG,GAAO/kG,IAAK,CAAEu+E,UAAW,iBAGxD7yF,KAAK0oG,qBAAqB9yE,IAAIyjF,GAAO/kG,cACvCtU,KAAK0oG,qBAAqBoB,KAC9B,GAAG9hF,IAAS,WACNhoB,KAAK0oG,qBAAqB51E,IAAIumF,GAAO/kG,YAEvCtU,KAAK0oG,qBAAqB18F,OAAOqtG,GAAO/kG,SAIlCgmG,uB,0CACd,MAAMY,QAA6Bl7G,KAAK8yB,IAAc,UAChDr0B,QAAQorB,IACZqxF,EAAqBj2G,KAAW+iB,GAAW,mC,QACzC,MAAM4hF,QAAgB5pG,KAAK8yB,IAAc9K,GACzC,GAC6C,QAA3B,QAAhB,EAAA4hF,MAAAA,OAAO,EAAPA,EAASn7E,eAAO,eAAE89E,uBACa,OAAjB,QAAd,EAAA3C,EAAQl7E,cAAM,eAAE2yC,aAChB,CACA,MAAMwgB,QAAqB,eAAyB+nB,EAAQl7E,OAAO2yC,aACnEuoC,EAAQn7E,QAAQ89E,qBAAuB1qB,EAAazwD,cAC9CpxB,KAAKwH,IAAIwgB,EAAQ4hF,UAK7B,MAAMzB,QAAgBnoG,KAAKgrG,aAC3B7C,EAAQqN,aAAeuC,GAAawC,YAC9Bv6G,KAAKwH,IAAI,GAAa2gG,MAGdqS,uB,0CACd,MAAMU,QAA6Bl7G,KAAK8yB,IAAc,UAChDr0B,QAAQorB,IACZqxF,EAAqBj2G,KAAW+iB,GAAW,mC,MACzC,MAAM4hF,QAAgB5pG,KAAK8yB,IAAc9K,GACzC,GAA0C,OAAtB,QAAhB,EAAA4hF,MAAAA,OAAO,EAAPA,EAASn7E,eAAO,eAAEujF,kBAEpB,cADOpI,EAAQn7E,QAAQujF,iBAChBhyG,KAAKwH,IAAIwgB,EAAQ4hF,SAK9B,MAAMzB,QAAgBnoG,KAAKgrG,aAC3B7C,EAAQqN,aAAeuC,GAAaoD,WAC9Bn7G,KAAKwH,IAAI,GAAa2gG,MAGhB99F,cACZ,MAAO,CAAEksG,oBAAqBxmC,GAAoBymC,OAG1C1jF,IAAOxe,GACf,OAAOtU,KAAKyoG,eAAe31E,IAAOxe,EAAKtU,KAAKqK,SAGpC7C,IAAI8M,EAAaif,GACzB,OAAa,MAATA,EACKvzB,KAAKyoG,eAAez8F,OAAOsI,EAAKtU,KAAKqK,SAEvCrK,KAAKyoG,eAAeqB,KAAKx1F,EAAKif,EAAOvzB,KAAKqK,SAGnC2gG,a,0CACd,aAAahrG,KAAK8yB,IAAkB,OAGtBmnF,yB,kDACd,OAA8C,QAAtC,EAAwB,QAAzB,QAAOj6G,KAAKgrG,oBAAa,eAAEwK,oBAAY,QAAIuC,GAAaoC,QC5f5D,MAAMiB,GAoCX77G,YAAYqM,GACV5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAK0T,OAAS9H,EAAS8H,OACvB1T,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAK26C,QAAU/uC,EAAS+uC,QACxB36C,KAAKurE,YAAc3/D,EAAS2/D,YAC5BvrE,KAAKkoE,UAAYt8D,EAASs8D,UAC1BloE,KAAKmoE,aAAev8D,EAASu8D,aAC7BnoE,KAAKooE,UAAYx8D,EAASw8D,UAC1BpoE,KAAKs8C,QAAU1wC,EAAS0wC,QACxBt8C,KAAKqoE,OAASz8D,EAASy8D,OACvBroE,KAAKsoE,OAAS18D,EAAS08D,OACvBtoE,KAAKwrE,OAAS5/D,EAAS4/D,OACvBxrE,KAAKyrE,gBAAkB7/D,EAAS6/D,gBAChCzrE,KAAKuoE,iBAAmB38D,EAAS28D,iBACjCvoE,KAAK0rE,SAAW9/D,EAAS8/D,SACzB1rE,KAAKymE,gBAAkB76D,EAAS66D,gBAChCzmE,KAAK+nE,MAAQn8D,EAASm8D,MACtB/nE,KAAKwlE,eAAiB55D,EAAS45D,eAC/BxlE,KAAKioE,aAAer8D,EAASq8D,aAC7BjoE,KAAK2rE,SAAW//D,EAAS+/D,SACzB3rE,KAAKqnB,WAAazb,EAASyb,WAC3BrnB,KAAK2O,YAAc/C,EAAS+C,YAC5B3O,KAAKirE,sBAAwBr/D,EAASq/D,sBACtCjrE,KAAKgoB,OAASpc,EAASoc,OACvBhoB,KAAKwoE,wBAA0B58D,EAAS48D,wBACxCxoE,KAAKwgE,WAAa50D,EAAS40D,WAC3BxgE,KAAK4rE,aAAehgE,EAASggE,aAC7B5rE,KAAK6rE,8BAAgCjgE,EAASigE,8BAC9C7rE,KAAK8rE,2BAA6BlgE,EAASkgE,2BAC3C9rE,KAAK+rE,gBAAkBngE,EAASmgE,gBAChC/rE,KAAK2iE,oBAAsB/2D,EAAS+2D,oBACpC3iE,KAAK8hE,gBAAkBl2D,EAASk2D,iBCxE7B,MAAMu5C,GASX97G,YAAYqM,GACV5L,KAAKhB,GAAK4M,EAAS5M,GACnBgB,KAAKsC,KAAOsJ,EAAStJ,KACrBtC,KAAK0T,OAAS9H,EAAS8H,OACvB1T,KAAKoL,KAAOQ,EAASR,KACrBpL,KAAK26C,QAAU/uC,EAAS+uC,QACxB36C,KAAKgoB,OAASpc,EAASoc,OACvBhoB,KAAKooE,UAAYx8D,EAASw8D,W,2SCgBvB,MAAM,GAGX7oE,YACU8W,EACAmyE,EACA7oD,EACAkZ,EACAz/B,EACA2/B,EACAr5C,EACAinB,EACAmsC,EACAv9C,EACA5V,EACAC,EACAq5C,EACAqiE,EACAtrC,GAdA,KAAA35D,WAAAA,EACA,KAAAmyE,gBAAAA,EACA,KAAA7oD,cAAAA,EACA,KAAAkZ,cAAAA,EACA,KAAAz/B,cAAAA,EACA,KAAA2/B,kBAAAA,EACA,KAAAr5C,iBAAAA,EACA,KAAAinB,cAAAA,EACA,KAAAmsC,YAAAA,EACA,KAAAv9C,WAAAA,EACA,KAAA5V,oBAAAA,EACA,KAAAC,aAAAA,EACA,KAAAq5C,oBAAAA,EACA,KAAAqiE,gBAAAA,EACA,KAAAtrC,eAAAA,EAjBV,KAAAtmB,gBAA0B,EAoBpB1X,c,0CACJ,GAA6C,aAAlChyC,KAAKJ,aAAaqoB,aAC3B,OAAO,KAGT,MAAM0pB,QAAiB3xC,KAAKJ,aAAaoyC,cACzC,OAAIL,EACK,IAAI5kC,KAAK4kC,GAGX,QAGHC,YAAYosB,EAAYh2C,G,gDACtBhoB,KAAKJ,aAAagyC,YAAYosB,EAAKu9C,SAAU,CAAEvzF,OAAQA,OAGzD5E,SAASo4F,EAAoBC,GAAoB,G,0CACrDz7G,KAAK07G,cAEL,WAD8B17G,KAAKJ,aAAaK,sBAE9C,OAAOD,KAAK27G,eAAc,GAG5B,MAAMrlD,EAAM,IAAIvpD,KAChB,IAAI6uG,GAAY,EAChB,IACEA,QAAkB57G,KAAK67G,aAAaL,GACpC,MAAO58G,GACP,GAAI68G,EACF,MAAM78G,EAIV,IAAKg9G,EAEH,aADM57G,KAAK4xC,YAAY0kB,GAChBt2D,KAAK27G,eAAc,GAG5B,MAAM3zF,QAAehoB,KAAKJ,aAAaqoB,YACvC,UACQjoB,KAAKqW,WAAWivB,uBACtB,MAAM15B,QAAiB5L,KAAKqW,WAAWujE,UAWvC,aATM55E,KAAK87G,YAAYlwG,EAAS6iB,eAC1BzuB,KAAK+7G,YAAY/zF,EAAQpc,EAAS4hB,eAClCxtB,KAAKg8G,gBAAgBpwG,EAAS8hB,mBAC9B1tB,KAAKi8G,YAAYj0F,EAAQpc,EAAS2hB,eAClCvtB,KAAKk8G,UAAUl0F,EAAQpc,EAAS6hB,aAChCztB,KAAKm8G,aAAavwG,EAAS4zD,eAC3Bx/D,KAAKo8G,aAAaxwG,EAAS+hB,gBAE3B3tB,KAAK4xC,YAAY0kB,GAChBt2D,KAAK27G,eAAc,GAC1B,MAAO/8G,GACP,GAAI68G,EACF,MAAM78G,EAEN,OAAOoB,KAAK27G,eAAc,OAK1B1Z,iBAAiBR,EAAsC4a,G,0CAE3D,GADAr8G,KAAK07G,oBACK17G,KAAKJ,aAAaK,qBAC1B,IACE,MAAMq8G,QAAoBt8G,KAAK2/B,cAAc7M,IAAI2uE,EAAaziG,IAC9D,IACIq9G,GAAyB,MAAfC,GACXD,GAAyB,MAAfC,GAAuBA,EAAY78E,aAAegiE,EAAahiE,aAC1E,CACA,MAAM88E,QAAqBv8G,KAAKqW,WAAWy9D,UAAU2tB,EAAaziG,IAClE,GAAoB,MAAhBu9G,EAAsB,CACxB,MAAMv0F,QAAehoB,KAAKJ,aAAaqoB,YAGvC,aAFMjoB,KAAK2/B,cAAc4sD,OAAO,IAAImS,GAAW6d,EAAcv0F,IAC7DhoB,KAAKN,iBAAiBQ,KAAK,uBAAwB,CAAEigC,SAAUshE,EAAaziG,KACrEgB,KAAK27G,eAAc,KAG9B,MAAO/8G,GACPoB,KAAKuV,WAAWK,MAAMhX,GAG1B,OAAOoB,KAAK27G,eAAc,MAGtBzZ,iBAAiBT,G,0CAErB,OADAzhG,KAAK07G,qBACK17G,KAAKJ,aAAaK,6BACpBD,KAAK2/B,cAAcjE,OAAO+lE,EAAaziG,IAC7CgB,KAAKN,iBAAiBQ,KAAK,sBAAuB,CAAEigC,SAAUshE,EAAaziG,KAC3EgB,KAAK27G,eAAc,IACZ,GAEF37G,KAAK27G,eAAc,MAGtB5Z,iBAAiBN,EAAsC4a,G,0CAE3D,GADAr8G,KAAK07G,oBACK17G,KAAKJ,aAAaK,qBAC1B,IACE,IAAIu8G,GAAe,EACnB,MAAMC,QAAoBz8G,KAAK64C,cAAc/lB,IAAI2uE,EAAaziG,IAC3C,MAAfy9G,GAAuBA,EAAYh9E,cAAgBgiE,EAAahiE,eAClE+8E,GAAe,GAGjB,IAAIE,GAAmB,EAevB,GAdIF,IACEH,GACFG,EAA8B,MAAfC,EACfC,GAAmB,GAEe,MAA9Bjb,EAAa9qD,eAAwD,MAA/B8qD,EAAazrD,eACrDwmE,EAA8B,MAAfC,GAEfD,GAAe,EACfE,GAAmB,KAMtBF,GACDE,GAC+B,MAA/Bjb,EAAazrD,gBACiB,MAA9ByrD,EAAa9qD,eACb8qD,EAAa9qD,cAActzC,OAAS,EACpC,CACA,MAAMqqB,QAAoB1tB,KAAK+4C,kBAAkB1M,SACjD,GAAmB,MAAf3e,EACF,IAAK,IAAIpqB,EAAI,EAAGA,EAAIoqB,EAAYrqB,OAAQC,IACtC,GAAIm+F,EAAa9qD,cAAclwC,QAAQinB,EAAYpqB,GAAGtE,KAAO,EAAG,CAC9Dw9G,GAAe,EACf,OAMR,GAAIA,EAAc,CAChB,MAAMG,QAAqB38G,KAAKqW,WAAW0+D,UAAU0sB,EAAaziG,IAClE,GAAoB,MAAhB29G,EAAsB,CACxB,MAAM30F,QAAehoB,KAAKJ,aAAaqoB,YAGvC,aAFMjoB,KAAK64C,cAAc0zC,OAAO,IAAIhI,GAAWo4B,EAAc30F,IAC7DhoB,KAAKN,iBAAiBQ,KAAK,uBAAwB,CAAE66C,SAAU0mD,EAAaziG,KACrEgB,KAAK27G,eAAc,KAG9B,MAAO/8G,GACP,GAAS,MAALA,GAA8B,MAAjBA,EAAEwV,YAAsBioG,EAGvC,aAFMr8G,KAAK64C,cAAcnd,OAAO+lE,EAAaziG,IAC7CgB,KAAKN,iBAAiBQ,KAAK,sBAAuB,CAAE66C,SAAU0mD,EAAaziG,KACpEgB,KAAK27G,eAAc,GAIhC,OAAO37G,KAAK27G,eAAc,MAGtB3Z,iBAAiBP,G,0CAErB,OADAzhG,KAAK07G,qBACK17G,KAAKJ,aAAaK,6BACpBD,KAAK64C,cAAcnd,OAAO+lE,EAAaziG,IAC7CgB,KAAKN,iBAAiBQ,KAAK,sBAAuB,CAAE66C,SAAU0mD,EAAaziG,KACpEgB,KAAK27G,eAAc,IAErB37G,KAAK27G,eAAc,MAGtBxZ,eAAeV,EAAoC4a,G,0CAEvD,GADAr8G,KAAK07G,oBACK17G,KAAKJ,aAAaK,qBAC1B,IACE,MAAM28G,QAAkB58G,KAAK8yD,YAAYhgC,IAAI2uE,EAAaziG,IAC1D,IACIq9G,GAAuB,MAAbO,GACXP,GAAuB,MAAbO,GAAqBA,EAAUn9E,aAAegiE,EAAahiE,aACtE,CACA,MAAMo9E,QAAmB78G,KAAKqW,WAAW69D,QAAQutB,EAAaziG,IAC9D,GAAkB,MAAd69G,EAAoB,CACtB,MAAM70F,QAAehoB,KAAKJ,aAAaqoB,YAGvC,aAFMjoB,KAAK8yD,YAAYy5B,OAAO,IAAIkb,GAASoV,EAAY70F,IACvDhoB,KAAKN,iBAAiBQ,KAAK,qBAAsB,CAAE0zD,OAAQ6tC,EAAaziG,KACjEgB,KAAK27G,eAAc,KAG9B,MAAO/8G,GACPoB,KAAKuV,WAAWK,MAAMhX,GAG1B,OAAOoB,KAAK27G,eAAc,MAGtBvZ,eAAeX,G,0CAEnB,OADAzhG,KAAK07G,qBACK17G,KAAKJ,aAAaK,6BACpBD,KAAK8yD,YAAYp3B,OAAO+lE,EAAaziG,IAC3CgB,KAAKN,iBAAiBQ,KAAK,oBAAqB,CAAE0zD,OAAQ6tC,EAAaziG,KACvEgB,KAAK27G,eAAc,IACZ,GAEF37G,KAAK27G,eAAc,MAKpBD,cACN17G,KAAK0pD,gBAAiB,EACtB1pD,KAAKN,iBAAiBQ,KAAK,eAGrBy7G,cAAcvzD,GAGpB,OAFApoD,KAAK0pD,gBAAiB,EACtB1pD,KAAKN,iBAAiBQ,KAAK,gBAAiB,CAAEkoD,aAAcA,IACrDA,EAGKyzD,aAAaL,G,0CACzB,GAAIA,EACF,OAAO,EAGT,MAAM7pE,QAAiB3xC,KAAKgyC,cAC5B,GAAgB,MAAZL,GAA2C,IAAvBA,EAAS3kC,UAC/B,OAAO,EAGT,MAAMpB,QAAiB5L,KAAKqW,WAAWo8D,yBACvC,QAAI,IAAI1lE,KAAKnB,IAAa+lC,MAMdmqE,YAAYlwG,G,0CACxB,MAAMguG,QAAc55G,KAAKJ,aAAa40G,mBACtC,GAAa,MAAToF,GAAiBA,IAAUhuG,EAASygE,cAKtC,MAJ2B,MAAvBrsE,KAAKgwE,uBACDhwE,KAAKgwE,gBAAe,IAGtB,IAAInxE,MAAM,2BAGZmB,KAAKoZ,cAAcuP,UAAU/c,EAAS0I,WACtCtU,KAAKoZ,cAAcwP,iBAAiBhd,EAASqiB,kBAC7CjuB,KAAKoZ,cAAcs5E,gBAAgB9mF,EAAS8gB,iBAC5C1sB,KAAKoZ,cAAc84E,WAAWtmF,EAAS6iD,cAAe7iD,EAASugE,6BAC/DnsE,KAAKJ,aAAa60G,iBAAiB7oG,EAASygE,qBAC5CrsE,KAAKJ,aAAayuG,iBAAiBziG,EAASynD,qBAC5CrzD,KAAKJ,aAAasyG,sBAAsBtmG,EAAS6W,0BACjDziB,KAAKL,oBAAoBu1G,oBAAoBtpG,EAAS+R,kBAE5D,MAAM8wC,EAAoD,GAC1D7iD,EAAS6iD,cAAcpnD,SAASqzC,IAC9B+T,EAAc/T,EAAE17C,IAAM,IAAIo8G,GAAiB1gE,MAG7C,MAAMhuB,EAA4C,GAClD9gB,EAAS8gB,UAAUrlB,SAASqiB,IAC1BgD,EAAUhD,EAAE1qB,IAAM,IAAIq8G,GAAa3xF,MAGrC9d,EAASugE,sBAAsB9kE,SAASqzC,IACX,MAAvB+T,EAAc/T,EAAE17C,MAClByvD,EAAc/T,EAAE17C,IAAM,IAAIo8G,GAAiB1gE,GAC3C+T,EAAc/T,EAAE17C,IAAIsjG,gBAAiB,YAInCtiG,KAAKi5C,oBAAoB6wD,KAAKr7C,SAC9BzuD,KAAKs7G,gBAAgBxR,KAAKp9E,UAEtB1sB,KAAKL,oBAAoBm9G,6BAC3B98G,KAAKL,oBAAoBo9G,2BAA0B,GACzD/8G,KAAKN,iBAAiBQ,KAAK,iCAE3BF,KAAKL,oBAAoBumB,kCAIf61F,YAAY/zF,EAAgBpc,G,0CACxC,MAAM4hB,EAAwC,GAI9C,OAHA5hB,EAASvE,SAAS+rB,IAChB5F,EAAQ4F,EAAEp0B,IAAM,IAAI0/F,GAAWtrE,EAAGpL,YAEvBhoB,KAAK2/B,cAAcj7B,QAAQ8oB,MAG5BwuF,gBAAgBpwG,G,0CAC5B,MAAM8hB,EAAgD,GAItD,OAHA9hB,EAASvE,SAASzB,IAChB8nB,EAAY9nB,EAAE5G,IAAM,IAAIywF,GAAe7pF,YAE5B5F,KAAK+4C,kBAAkBr0C,QAAQgpB,MAGhCuuF,YAAYj0F,EAAgBpc,G,0CACxC,MAAM2hB,EAAwC,GAI9C,OAHA3hB,EAASvE,SAASzB,IAChB2nB,EAAQ3nB,EAAE5G,IAAM,IAAIulF,GAAW3+E,EAAGoiB,YAEvBhoB,KAAK64C,cAAcn0C,QAAQ6oB,MAG5B2uF,UAAUl0F,EAAgBpc,G,0CACtC,MAAM6hB,EAAoC,GAI1C,OAHA7hB,EAASvE,SAASoB,IAChBglB,EAAMhlB,EAAEzJ,IAAM,IAAIyoG,GAASh/F,EAAGuf,YAEnBhoB,KAAK8yD,YAAYpuD,QAAQ+oB,MAG1B0uF,aAAavwG,G,0CACzB,IAAI0/E,EAAwB,GAa5B,OAZgB,MAAZ1/E,GAAkD,MAA9BA,EAASg0D,oBAC/B0rB,EAAYA,EAAUn2E,OAAOvJ,EAASg0D,oBAGxB,MAAZh0D,GAAwD,MAApCA,EAAS+zD,yBAC/B/zD,EAAS+zD,wBAAwBt4D,SAASzE,IACpCA,EAAO48D,QAAQn8D,OAAS,GAC1BioF,EAAUx2E,KAAKlS,EAAO48D,YAKrBx/D,KAAKwoF,gBAAgBmpB,qBAAqBrmB,MAGrC8wB,aAAaxwG,G,0CACzB,MAAM+hB,EAAyC,GAM/C,OALgB,MAAZ/hB,GACFA,EAASvE,SAASqiB,IAChBiE,EAASjE,EAAE1qB,IAAM,IAAIimG,GAAWv7E,YAGvB1pB,KAAK2mB,cAAcjiB,QAAQipB,O,2SCtY5C,MAAMqvF,GAAW,mCACXC,GAAa,6BCRZ,MAAMC,GAGX39G,YAAYo/B,GACV3+B,KAAK2+B,IAAMA,G,slBCYR,MAAM,GAGXp/B,YACUs5C,EACAlZ,EACAoZ,EACA3/B,EACEhK,EACF1P,EACA0iD,EACAgN,EACAzoC,EACAhnB,EACAC,EACAu9G,EAAqD,KACrDC,EAAwD,MAZxD,KAAAvkE,cAAAA,EACA,KAAAlZ,cAAAA,EACA,KAAAoZ,kBAAAA,EACA,KAAA3/B,cAAAA,EACE,KAAAhK,qBAAAA,EACF,KAAA1P,iBAAAA,EACA,KAAA0iD,cAAAA,EACA,KAAAgN,aAAAA,EACA,KAAAzoC,cAAAA,EACA,KAAAhnB,oBAAAA,EACA,KAAAC,aAAAA,EACA,KAAAu9G,eAAAA,EACA,KAAAC,kBAAAA,EAfF,KAAAl7G,QAAS,EAkBjByH,KAAK0zG,GACCr9G,KAAKkC,SAITlC,KAAKkC,QAAS,EACVm7G,GACFr9G,KAAKs9G,cAITA,aACEt9G,KAAKu9G,oBACLztD,aAAY,IAAM9vD,KAAKu9G,qBAAqB,KAIxCp9G,SAAS6nB,G,0CAUb,aARShoB,KAAKoZ,cAAckE,aAAapF,GAAiB86E,KAAMhrE,aACtDhoB,KAAKJ,aAAamyG,oBAAoB,CAAE/pF,OAAQA,aAIlDhoB,KAAKoZ,cAAcmD,OAAOrE,GAAiB86E,KAAMhrE,YAG1ChoB,KAAKoZ,cAAcg8E,eAAeptE,OAG7Cu1F,oB,0CACJ,WAAUv9G,KAAKoP,qBAAqBouG,cAIpC,IAAK,MAAMx1F,KAAUhoB,KAAKJ,aAAawoG,SAASqV,WAChC,MAAVz1F,UAAyBhoB,KAAK09G,WAAW11F,YACrChoB,KAAK29G,qBAAqB31F,OAKhCgoB,KAAK4tE,GAAgB,EAAO51F,G,0CAEhC,SADqBhoB,KAAKJ,aAAaK,mBAAmB,CAAE+nB,OAAQA,IACpE,CAIA,SAAUhoB,KAAKL,oBAAoBie,sBAAuB,CACxD,MAAMnD,QAAeza,KAAKmd,eAEvB1C,EAAO,IAA8D,aAAjDza,KAAKJ,aAAa+a,6BAAwCF,EAAO,WAEhEza,KAAKqd,8BACrBrd,KAAKkc,OAAO8L,IAIR,MAAVA,GAAkBA,WAAkBhoB,KAAKJ,aAAaqoB,cACxDjoB,KAAKoiD,cAAc4mC,mBAGfhpF,KAAKJ,aAAamd,qBAAoB,EAAM,CAAEiL,OAAQA,UACtDhoB,KAAKJ,aAAakd,oBAAmB,EAAM,CAAEkL,OAAQA,UAErDhoB,KAAKoZ,cAAcm8E,UAAS,EAAOvtE,SACnChoB,KAAKoZ,cAAc88E,cAAa,EAAMluE,SACtChoB,KAAKoZ,cAAc48E,cAAa,EAAMhuE,SACtChoB,KAAKoZ,cAAc08E,aAAY,EAAM9tE,SAErChoB,KAAK2/B,cAAcupD,WAAWlhE,SAC9BhoB,KAAK64C,cAAcqwC,WAAWlhE,SAC9BhoB,KAAK+4C,kBAAkBmwC,WAAWlhE,GAExChoB,KAAKN,iBAAiBQ,KAAK,SAAU,CAAE8nB,OAAQA,IAEpB,MAAvBhoB,KAAKm9G,uBACDn9G,KAAKm9G,eAAen1F,QAIxB9L,OAAO8L,G,0CACmB,MAA1BhoB,KAAKo9G,0BACDp9G,KAAKo9G,kBAAkBp1F,OAI3BwmB,uBAAuBp5B,EAAiBg5B,G,gDACtCpuC,KAAKJ,aAAau1G,gBAAgB//F,GAIxC,MAAMqM,QAAczhB,KAAKovD,aAAasxB,WAChCjf,QAAqBzhE,KAAKovD,aAAamyB,kBACvC1+D,QAAiB7iB,KAAKovD,aAAaqyB,cACnC7xD,QAAqB5vB,KAAKovD,aAAasyB,kBAEvCm8B,QAAsB79G,KAAKJ,aAAayuC,wBAC9B,MAAXj5B,GAA+B,IAAZA,GAA6B,WAAXg5B,GAAuBA,IAAWyvE,UAEpE79G,KAAKovD,aAAakpD,oBAGpBt4G,KAAKJ,aAAa01G,sBAAsBlnE,SAExCpuC,KAAKovD,aAAa8oD,SAASz2F,SAC3BzhB,KAAKovD,aAAaklD,gBAAgB7yC,SAClCzhE,KAAKovD,aAAa+oD,YAAYt1F,SAC9B7iB,KAAKovD,aAAagpD,gBAAgBxoF,SAElC5vB,KAAKoZ,cAAco2B,eAGrBryB,e,0CAGJ,MAAO,CAAiB,aAFGnd,KAAKJ,aAAamb,mBAEI,aADnB/a,KAAKJ,aAAa42F,gCAI5Cn5E,qB,0CACJ,aAAard,KAAKJ,aAAa25F,wBAG3B7sD,gBAAgB1kB,G,0CACpB,MAAM8jB,QAAqB9rC,KAAKJ,aAAa8sC,gBAAgB,CAAE1kB,OAAQA,IAEvE,SACQhoB,KAAK2mB,cAAciW,oBAAoBf,GAAWsQ,oBAAqB,KAAMnkB,GACnF,CACA,MAAM81F,QAAe99G,KAAK2mB,cAAc0lB,OAAOxQ,GAAWsQ,oBAAqBnkB,GAE/E,IAAI5S,EAAUtP,KAAK8yF,IAAI9sD,EAAcgyE,EAAO,GAAGpzG,KAAKuhC,SAWpD,OAToB,MAAhBH,GAAwB12B,EAAU,KACpCA,EAAU0oG,EAAO,GAAGpzG,KAAKuhC,SAIvBH,IAAiB12B,UACbpV,KAAKJ,aAAau1G,gBAAgB//F,EAAS,CAAE4S,OAAQA,KAGtD5S,EAGT,OAAO02B,KAGHhV,MAAM9O,G,gDACJhoB,KAAKJ,aAAamd,qBAAoB,EAAO,CAAEiL,OAAQA,UACvDhoB,KAAKJ,aAAaoc,yBAAyB,KAAM,CAAEgM,OAAQA,UAC3DhoB,KAAKJ,aAAa8rC,gBAAgB,KAAM,CAAE1jB,OAAQA,OAG5C+1F,YAAY/1F,G,0CACxB,cAAehoB,KAAKJ,aAAaK,mBAAmB,CAAE+nB,OAAQA,QAGlD01F,WAAW11F,G,0CACvB,SAAUhoB,KAAK+9G,YAAY/1F,GACzB,OAAO,EAGT,SAAUhoB,KAAKG,SAAS6nB,GACtB,OAAO,EAGT,MAAM8jB,QAAqB9rC,KAAK0sC,gBAAgB1kB,GAChD,GAAoB,MAAhB8jB,GAAwBA,EAAe,EACzC,OAAO,EAGT,MAAM4tE,QAAmB15G,KAAKJ,aAAa2yG,cAAc,CAAEvqF,OAAQA,IACnE,GAAkB,MAAd0xF,EACF,OAAO,EAGT,MAAMsE,EAAqC,GAAflyE,EAE5B,QADqB,IAAI/+B,MAAOC,UAAY0sG,GAAc,KACpCsE,KAGVL,qBAAqB31F,G,0CAEf,kBADUhoB,KAAKJ,aAAayuC,sBAAsB,CAAErmB,OAAQA,WAC3ChoB,KAAKkc,OAAO8L,SAAgBhoB,KAAKgwC,MAAK,EAAMhoB,O,gBC3N5E,MAAMi2F,I,2SCAN,MAAe,ICKf,MAAe,ICLf,MAAe,ICIf,MAAe,ICJf,MAAe,ICAf,MAAe,ICEf,MAAeC,ICGf,MAAM,WCHN,MAAP,cACE,KAAAC,YAAkD,IAAIh3G,IAEtDjH,KAAK4T,EAAc9U,GACP,MAANA,EAOJgB,KAAKm+G,YAAY92G,SAASksB,IACxBA,EAAMzf,MAPF9T,KAAKm+G,YAAYvoF,IAAI52B,IACvBgB,KAAKm+G,YAAYrrF,IAAI9zB,EAArBgB,CAAyB8T,GAU/BzS,UAAUrC,EAAYo/G,GACpBp+G,KAAKm+G,YAAY32G,IAAIxI,EAAIo/G,GAG3Bv8G,YAAY7C,GACNgB,KAAKm+G,YAAYvoF,IAAI52B,IACvBgB,KAAKm+G,YAAYziF,OAAO18B,M,oFDnBjB,MAAkB,GAAlB,K,2CAAA,GAAkB,QAAlB,GAAkB,OECxB,MAAMq/G,GAAb,cAGE,KAAAl9F,OAAkB,KAMlB,KAAAgiB,MAAoB7C,GAAUwB,OAC9B,KAAA//B,OAAuB,IAAIwmG,GAa3B,KAAAiN,aAA6BuC,GAAaoC,IAC1C,KAAA/rF,gBAAmC,IAAIlB,IC5BlC,MAAMoxF,GAGX/+G,YAAYg/G,GACVv+G,KAAKu+G,mBAAqBA,EAG5BjzG,OAAOi4E,GACL,OAAO,IAAIvjF,KAAKu+G,mBAAmBh7B,ICRhC,MAAMi7B,GAGXj/G,YAAYk/G,GACVz+G,KAAKy+G,uBAAyBA,EAGhCnzG,OAAOi4E,GACL,OAAO,IAAIvjF,KAAKy+G,uBAAuBl7B,ICLpC,MAAMm7B,GAOXn/G,YACEk/G,EACAF,GAEAv+G,KAAK2+G,mBAAqB,IAAIH,GAAmBC,GACjDz+G,KAAK4+G,eAAiB,IAAIN,GAAeC,GAG3C1G,aAAat0B,GACX,OAAOvjF,KAAK2+G,mBAAmBrzG,OAAOi4E,GAGxCimB,cAAcjmB,GACZ,OAAOvjF,KAAK4+G,eAAetzG,OAAOi4E,I,2SCqc/B,MAAMs7B,I,kCAAAA,K,oCAAAA,K,yCAxYA,CACT,CAAEhgF,QAAS,SAAUigF,SAAU/8G,QAC/B,CACE88B,QAAS,EAAAkgF,UACTn6D,WAAal9C,GAAwCA,EAAY0Z,kBACjE0jC,KAAM,CAAC31C,IAET4F,EACAzV,EACA,EACA,EACA2pC,GACA,CACEpK,QAAS,GACTg9B,SC9FC,MACLt8D,YAAoBkpG,GAAA,KAAAA,eAAAA,EAEpB/G,WACE,OAAO1hG,KAAKg/G,gBAAgB,SAG9BC,oBACE,OAAOj/G,KAAKg/G,gBAAgB,kBAGhBA,gBAAgB1qG,G,0CAC5B,MAAM4qG,QAAmBl/G,KAAKyoG,eAAe31E,IAAYxe,EAAK,CAC5DiiG,oBAAqBxmC,GAAoBymC,QAE3C,GAAkB,MAAd0I,EACF,OAAOA,EAGT,MAAMC,EAAOn9G,EAAMo9G,UAInB,aAHMp/G,KAAKyoG,eAAeqB,KAAKx1F,EAAK6qG,EAAM,CACxC5I,oBAAqBxmC,GAAoBymC,QAEpC2I,ODwELr6D,KAAM,CAACo5D,KAET,CACEr/E,QAAS2Z,GACTqjB,SAAU,GACV/W,KAAM,CAACnuC,GAAkC1D,IAE3C,CACE4rB,QAAShd,GACTg6C,S/VlBC,MAeLt8D,YACU6Z,EACE/C,EACA+4C,EACAixC,EACF34F,EACE0H,EACF1P,EACAF,EACA+V,EACEuB,EACFnX,EACE0P,EACAzP,EACFy/G,GAAgB,GAbhB,KAAAjmG,cAAAA,EACE,KAAA/C,WAAAA,EACA,KAAA+4C,aAAAA,EACA,KAAAixC,aAAAA,EACF,KAAA34F,YAAAA,EACE,KAAA0H,qBAAAA,EACF,KAAA1P,iBAAAA,EACA,KAAAF,oBAAAA,EACA,KAAA+V,WAAAA,EACE,KAAAuB,sBAAAA,EACF,KAAAnX,oBAAAA,EACE,KAAA0P,mBAAAA,EACA,KAAAzP,aAAAA,EACF,KAAAy/G,cAAAA,EAnBV,KAAAryF,8BAAuD,KAsBvDrjB,OACEonB,GAAmB3E,GAAsBoF,OAAOlvB,KAAOtC,KAAK0H,YAAYiJ,EAAE,cAC1EogB,GAAmB3E,GAAsBoF,OAAOP,YAAcjxB,KAAK0H,YAAYiJ,EAAE,aAEjFogB,GAAmB3E,GAAsB4E,eAAe1uB,KACtDtC,KAAK0H,YAAYiJ,EAAE,yBACrBogB,GAAmB3E,GAAsB4E,eAAeC,YACtDjxB,KAAK0H,YAAYiJ,EAAE,wBAErBogB,GAAmB3E,GAAsBkF,KAAKL,YAAcjxB,KAAK0H,YAAYiJ,EAAE,WAE/EogB,GAAmB3E,GAAsBmF,iBAAiBjvB,KACxD,QAAUtC,KAAK0H,YAAYiJ,EAAE,gBAAkB,IACjDogB,GAAmB3E,GAAsBmF,iBAAiBN,YACxDjxB,KAAK0H,YAAYiJ,EAAE,uBAErBogB,GAAmB3E,GAAsBqF,UAAUnvB,KAAOtC,KAAK0H,YAAYiJ,EAAE,iBAC7EogB,GAAmB3E,GAAsBqF,UAAUR,YACjDjxB,KAAK0H,YAAYiJ,EAAE,gBAErBogB,GAAmB3E,GAAsBiF,SAAS/uB,KAAOtC,KAAK0H,YAAYiJ,EAAE,gBAC5EogB,GAAmB3E,GAAsBiF,SAASJ,YAChDjxB,KAAK0H,YAAYiJ,EAAE,eAGjB0R,MAAMrP,EAAe2G,EAAwB2H,G,0CACjDthB,KAAKgtB,8BAAgC,KACrC,MAAM1Y,QAAYtU,KAAKs/G,gBAAgB3lG,EAAgB3G,GACjD8R,QAAuB9kB,KAAKoZ,cAAckC,aAAa3B,EAAgBrF,GACvEirG,QAA4Bv/G,KAAKoZ,cAAckC,aACnD3B,EACArF,EACA2D,GAAY0D,oBAEd,aAAa3b,KAAKw/G,YAChBxsG,EACA8R,EACAy6F,EACA,KACA,KACA,KACA,KACA,KACAjrG,EACA,KACA,KACA,KACAgN,EACA,SAIEwK,SACJhtB,EACAyY,EACA3W,EACAsY,G,0CAGA,OADAlZ,KAAKgtB,8BAAgC,WACxBhtB,KAAKw/G,YAChB,KACA,KACA,KACA1gH,EACAyY,EACA3W,EACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAsY,MAIEumG,YAAY58F,EAAkB+M,G,0CAElC,OADA5vB,KAAKgtB,8BAAgC,WACxBhtB,KAAKw/G,YAChB,KACA,KACA,KACA,KACA,KACA,KACA38F,EACA+M,EACA,KACA,KACA,KACA,KACA,KACA,SAIE+D,eACJjD,EACAD,EACAf,G,0CAEA,aAAa1vB,KAAKw/G,YAChBx/G,KAAKgT,MACLhT,KAAKwb,mBACLxb,KAAK0/G,wBACL1/G,KAAKlB,KACLkB,KAAKuX,aACLvX,KAAK2/G,eACL3/G,KAAK6iB,SACL7iB,KAAK4vB,aACL5vB,KAAKsU,IACLoc,EACAD,EACAf,EACA1vB,KAAKshB,aACL,SAIEs+F,cACJ5sG,EACA2G,EACA+W,EACAD,EACAf,EACApO,G,0CAEAthB,KAAKgtB,8BAAgC,KACrC,MAAM1Y,QAAYtU,KAAKs/G,gBAAgB3lG,EAAgB3G,GACjD8R,QAAuB9kB,KAAKoZ,cAAckC,aAAa3B,EAAgBrF,GACvEirG,QAA4Bv/G,KAAKoZ,cAAckC,aACnD3B,EACArF,EACA2D,GAAY0D,oBAEd,aAAa3b,KAAKw/G,YAChBxsG,EACA8R,EACAy6F,EACA,KACA,KACA,KACA,KACA,KACAjrG,EACAoc,EACAD,EACAf,EACApO,EACA,SAIEu+F,iBACJ/gH,EACAyY,EACA3W,EACA8vB,EACAD,EACAf,G,0CAGA,OADA1vB,KAAKgtB,8BAAgC,WACxBhtB,KAAKw/G,YAChB,KACA,KACA,KACA1gH,EACAyY,EACA3W,EACA,KACA,KACA,KACA8vB,EACAD,EACAf,EACA,KACA,SAIEowF,oBACJj9F,EACA+M,EACAc,EACAD,EACAf,G,0CAGA,OADA1vB,KAAKgtB,8BAAgC,WACxBhtB,KAAKw/G,YAChB,KACA,KACA,KACA,KACA,KACA,KACA38F,EACA+M,EACA,KACAc,EACAD,EACAf,EACA,KACA,SAIJxT,OAAO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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/keyConnector.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/browser/safariApp.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./src/popup/services/launch-guard.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/angular/src/components/environment.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///./jslib/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./jslib/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./src/popup/components/pop-out.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/generator/password-generator.component.html","webpack:///./src/popup/generator/password-generator.component.ts","webpack:///./src/popup/private-mode.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/private-mode.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/common/src/abstractions/userVerification.service.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/angular/src/components/verify-master-password.component.html","webpack:///./jslib/angular/src/components/verify-master-password.component.ts","webpack:///./src/popup/components/verify-master-password.component.html","webpack:///./src/popup/components/verify-master-password.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///./jslib/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/settings/sync.component.html","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/common/src/abstractions/organization.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./jslib/angular/src/directives/cipherListVirtualScroll.directive.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./src/popup/vault/groupings.component.html","webpack:///./src/popup/vault/groupings.component.ts","webpack:///./jslib/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/view.component.ts","webpack:///./jslib/angular/src/components/view-custom-fields.component.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/provider.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./jslib/common/src/abstractions/stateMigration.service.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./jslib/angular/src/services/jslib-services.module.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///./jslib/angular/src/components/toastr.component.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<Set<string>>;\n  setCollapsedGroupings: (value: Set<string>, options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\n\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","import * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      // tslint:disable-next-line\n      const r = (Math.random() * 16) | 0;\n      // tslint:disable-next-line\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    // tslint:disable-next-line\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      // tslint:disable-next-line\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { SafariApp } from \"./safariApp\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage: boolean = false, active: boolean = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { BrowserApi } from \"../../browser/browserApi\";\n\nimport { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\n@Injectable()\nexport class LaunchGuardService implements CanActivate {\n  constructor(private router: Router, private unauthGuardService: UnauthGuardService) {}\n\n  async canActivate() {\n    if (BrowserApi.getBackgroundPage() == null) {\n      this.router.navigate([\"private-mode\"]);\n      return false;\n    }\n    return await this.unauthGuardService.canActivate();\n  }\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  identityClientId: string;\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isIE: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(private elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        (event: Event) => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        (event: Event) => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"jslib-angular/components/environment.component\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\n\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\n\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\n\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: TokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if (\n          (e instanceof ErrorResponse || e.constructor.name === \"ErrorResponse\") &&\n          (e as ErrorResponse).captchaRequired\n        ) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\n\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nexport class HintComponent {\n  email: string = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword: string = \"\";\n  pin: string = \"\";\n  showPassword: boolean = false;\n  email: string;\n  pinLock: boolean = false;\n  webVaultHostname: string = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute: string = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async (_userId) => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button type=\"button\" class=\"btn primary block\" (click)=\"unlockBiometric()\" appStopClick>\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n  </content>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (this.biometricLock && !disableAutoBiometricsPrompt && this.isInitialLockScreen) {\n        if (await this.vaultTimeoutService.isLocked()) {\n          await this.unlockBiometric();\n        }\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const div = document.createElement(\"div\");\n    div.innerHTML = `<div class=\"swal2-text\">${this.i18nService.t(\"awaitDesktop\")}</div>`;\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"cancel\"),\n      showConfirmButton: false,\n    });\n\n    const success = await super.unlockBiometric();\n\n    // Avoid closing the error dialogs\n    if (success) {\n      Swal.close();\n    }\n\n    return success;\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nexport abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\n\nimport { AuthResult } from \"../models/domain/authResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class AuthService {\n  email: string;\n  masterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  ssoRedirectUrl: string;\n  clientId: string;\n  clientSecret: string;\n  twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  selectedTwoFactorProviderType: TwoFactorProviderType;\n\n  logIn: (email: string, masterPassword: string, captchaToken?: string) => Promise<AuthResult>;\n  logInSso: (\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    orgId: string\n  ) => Promise<AuthResult>;\n  logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logInComplete: (\n    email: string,\n    masterPassword: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean,\n    captchaToken?: string\n  ) => Promise<AuthResult>;\n  logInSsoComplete: (\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logInApiKeyComplete: (\n    clientId: string,\n    clientSecret: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logOut: (callback: Function) => void;\n  getSupportedTwoFactorProviders: (win: Window) => any[];\n  getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\n\nimport { take } from \"rxjs/operators\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email: string = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword: string = \"\";\n  showPassword: boolean = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail: boolean = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.twoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail: boolean = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n  </content>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name: string = \"\";\n  email: string = \"\";\n  masterPassword: string = \"\";\n  confirmMasterPassword: string = \"\";\n  hint: string = \"\";\n  showPassword: boolean = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies: boolean = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    const kdfIterations = useLowerKdf ? 10000 : 100000;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            [appAutofocus]=\"email === ''\"\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                [appAutofocus]=\"email !== ''\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"confirmMasterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input\n            type=\"checkbox\"\n            id=\"acceptPolicies\"\n            [(ngModel)]=\"acceptPolicies\"\n            name=\"AcceptPolicies\"\n          />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing: boolean = false;\n  leaving: boolean = false;\n\n  loading: boolean = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyData } from \"../models/data/policyData\";\n\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\n\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading: boolean = true;\n  showPassword: boolean = false;\n  hint: string = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    this.kdfIterations = useLowerKdf ? 10000 : 100000;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","import { EncString } from \"./encString\";\n\nimport { View } from \"../view/view\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity: number = 0;\n  minLength: number = 0;\n  requireUpper: boolean = false;\n  requireLower: boolean = false;\n  requireNumbers: boolean = false;\n  requireSpecial: boolean = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      this.formPromise = this.authService.logInSso(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      const response = await this.formPromise;\n      if (response.twoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { Component } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n      if (await this.vaultTimeoutService.isLocked()) {\n        // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://help.bitwarden.com/article/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(authService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.authService.selectedTwoFactorProviderType = p.type;\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  collapsedGroupings?: Set<string>;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class AuthResult {\n  twoFactor: boolean = false;\n  captchaSiteKey: string = \"\";\n  resetMasterPassword: boolean = false;\n  forcePasswordReset: boolean = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n}\n","import { KeysRequest } from \"../keysRequest\";\n\nimport { KdfType } from \"../../../enums/kdfType\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { DeviceRequest } from \"./deviceRequest\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n  email: string;\n  masterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  redirectUri: string;\n  clientId: string;\n  clientSecret: string;\n  device?: DeviceRequest;\n\n  constructor(\n    credentials: string[],\n    codes: string[],\n    clientIdClientSecret: string[],\n    public provider: TwoFactorProviderType,\n    public token: string,\n    public remember: boolean,\n    public captchaResponse: string,\n    device?: DeviceRequest\n  ) {\n    if (credentials != null && credentials.length > 1) {\n      this.email = credentials[0];\n      this.masterPasswordHash = credentials[1];\n    } else if (codes != null && codes.length > 2) {\n      this.code = codes[0];\n      this.codeVerifier = codes[1];\n      this.redirectUri = codes[2];\n    } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n      this.clientId = clientIdClientSecret[0];\n      this.clientSecret = clientIdClientSecret[1];\n    }\n    this.device = device != null ? device : null;\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.clientSecret != null) {\n      obj.scope = clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n      obj.grant_type = \"client_credentials\";\n      obj.client_secret = this.clientSecret;\n    } else if (this.masterPasswordHash != null && this.email != null) {\n      obj.grant_type = \"password\";\n      obj.username = this.email;\n      obj.password = this.masterPasswordHash;\n    } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n      obj.grant_type = \"authorization_code\";\n      obj.code = this.code;\n      obj.code_verifier = this.codeVerifier;\n      obj.redirect_uri = this.redirectUri;\n    } else {\n      throw new Error(\"must provide credentials or codes\");\n    }\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.token && this.provider != null) {\n      obj.twoFactorToken = this.token;\n      obj.twoFactorProvider = this.provider;\n      obj.twoFactorRemember = this.remember ? \"1\" : \"0\";\n    }\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n      headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n    }\n  }\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\n\nimport {\n  Account,\n  AccountData,\n  AccountKeys,\n  AccountProfile,\n  AccountTokens,\n} from \"../models/domain/account\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\n\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport const TwoFactorProviders = {\n  [TwoFactorProviderType.Authenticator]: {\n    type: TwoFactorProviderType.Authenticator,\n    name: null as string,\n    description: null as string,\n    priority: 1,\n    sort: 1,\n    premium: false,\n  },\n  [TwoFactorProviderType.Yubikey]: {\n    type: TwoFactorProviderType.Yubikey,\n    name: null as string,\n    description: null as string,\n    priority: 3,\n    sort: 2,\n    premium: true,\n  },\n  [TwoFactorProviderType.Duo]: {\n    type: TwoFactorProviderType.Duo,\n    name: \"Duo\",\n    description: null as string,\n    priority: 2,\n    sort: 3,\n    premium: true,\n  },\n  [TwoFactorProviderType.OrganizationDuo]: {\n    type: TwoFactorProviderType.OrganizationDuo,\n    name: \"Duo (Organization)\",\n    description: null as string,\n    priority: 10,\n    sort: 4,\n    premium: false,\n  },\n  [TwoFactorProviderType.Email]: {\n    type: TwoFactorProviderType.Email,\n    name: null as string,\n    description: null as string,\n    priority: 0,\n    sort: 6,\n    premium: false,\n  },\n  [TwoFactorProviderType.WebAuthn]: {\n    type: TwoFactorProviderType.WebAuthn,\n    name: null as string,\n    description: null as string,\n    priority: 4,\n    sort: 5,\n    premium: true,\n  },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n  email: string;\n  masterPasswordHash: string;\n  localMasterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  ssoRedirectUrl: string;\n  clientId: string;\n  clientSecret: string;\n  twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  selectedTwoFactorProviderType: TwoFactorProviderType = null;\n  captchaToken: string;\n\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    private cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    private i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private logService: LogService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    private keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    private setCryptoKeys = true\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      null,\n      null,\n      null,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSso(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    orgId: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      orgId\n    );\n  }\n\n  async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null\n    );\n  }\n\n  async logInTwoFactor(\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    return await this.logInHelper(\n      this.email,\n      this.masterPasswordHash,\n      this.localMasterPasswordHash,\n      this.code,\n      this.codeVerifier,\n      this.ssoRedirectUrl,\n      this.clientId,\n      this.clientSecret,\n      this.key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      this.captchaToken,\n      null\n    );\n  }\n\n  async logInComplete(\n    email: string,\n    masterPassword: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean,\n    captchaToken?: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSsoComplete(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  async logInApiKeyComplete(\n    clientId: string,\n    clientSecret: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  logOut(callback: Function) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  getSupportedTwoFactorProviders(win: Window): any[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  authingWithApiKey(): boolean {\n    return this.clientId != null && this.clientSecret != null;\n  }\n\n  authingWithSso(): boolean {\n    return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n  }\n\n  authingWithPassword(): boolean {\n    return this.email != null && this.masterPasswordHash != null;\n  }\n\n  private async logInHelper(\n    email: string,\n    hashedPassword: string,\n    localHashedPassword: string,\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    clientId: string,\n    clientSecret: string,\n    key: SymmetricCryptoKey,\n    twoFactorProvider?: TwoFactorProviderType,\n    twoFactorToken?: string,\n    remember?: boolean,\n    captchaToken?: string,\n    orgId?: string\n  ): Promise<AuthResult> {\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    let emailPassword: string[] = [];\n    let codeCodeVerifier: string[] = [];\n    let clientIdClientSecret: [string, string] = [null, null];\n\n    if (email != null && hashedPassword != null) {\n      emailPassword = [email, hashedPassword];\n    } else {\n      emailPassword = null;\n    }\n    if (code != null && codeVerifier != null && redirectUrl != null) {\n      codeCodeVerifier = [code, codeVerifier, redirectUrl];\n    } else {\n      codeCodeVerifier = null;\n    }\n    if (clientId != null && clientSecret != null) {\n      clientIdClientSecret = [clientId, clientSecret];\n    } else {\n      clientIdClientSecret = null;\n    }\n\n    let request: TokenRequest;\n    if (twoFactorToken != null && twoFactorProvider != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        twoFactorProvider,\n        twoFactorToken,\n        remember,\n        captchaToken,\n        deviceRequest\n      );\n    } else if (storedTwoFactorToken != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        TwoFactorProviderType.Remember,\n        storedTwoFactorToken,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    } else {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        null,\n        null,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    }\n\n    const response = await this.apiService.postIdentityToken(request);\n\n    this.clearState();\n    const result = new AuthResult();\n    result.captchaSiteKey = (response as any).siteKey;\n    if (!!result.captchaSiteKey) {\n      return result;\n    }\n    result.twoFactor = !!(response as any).twoFactorProviders2;\n\n    if (result.twoFactor) {\n      // two factor required\n      this.email = email;\n      this.masterPasswordHash = hashedPassword;\n      this.localMasterPasswordHash = localHashedPassword;\n      this.code = code;\n      this.codeVerifier = codeVerifier;\n      this.ssoRedirectUrl = redirectUrl;\n      this.clientId = clientId;\n      this.clientSecret = clientSecret;\n      this.key = this.setCryptoKeys ? key : null;\n      const twoFactorResponse = response as IdentityTwoFactorResponse;\n      this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n      result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n      this.captchaToken = twoFactorResponse.captchaToken;\n      return result;\n    }\n\n    const tokenResponse = response as IdentityTokenResponse;\n    result.resetMasterPassword = tokenResponse.resetMasterPassword;\n    result.forcePasswordReset = tokenResponse.forcePasswordReset;\n\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            apiKeyClientId: clientId,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        keys: {\n          ...new AccountKeys(),\n          ...{\n            apiKeyClientSecret: clientSecret,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n\n    if (tokenResponse.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n    }\n\n    if (this.setCryptoKeys) {\n      if (key != null) {\n        await this.cryptoService.setKey(key);\n      }\n      if (localHashedPassword != null) {\n        await this.cryptoService.setKeyHash(localHashedPassword);\n      }\n\n      // Skip this step during SSO new user flow. No key is returned from server.\n      if (code == null || tokenResponse.key != null) {\n        if (tokenResponse.keyConnectorUrl != null) {\n          await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n        } else if (tokenResponse.apiUseKeyConnector) {\n          const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n          await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n        }\n\n        await this.cryptoService.setEncKey(tokenResponse.key);\n\n        // User doesn't have a key pair yet (old account), let's generate one for them\n        if (tokenResponse.privateKey == null) {\n          try {\n            const keyPair = await this.cryptoService.makeKeyPair();\n            await this.apiService.postAccountKeys(\n              new KeysRequest(keyPair[0], keyPair[1].encryptedString)\n            );\n            tokenResponse.privateKey = keyPair[1].encryptedString;\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n\n        await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n      } else if (tokenResponse.keyConnectorUrl != null) {\n        const password = await this.cryptoFunctionService.randomBytes(64);\n\n        const k = await this.cryptoService.makeKey(\n          Utils.fromBufferToB64(password),\n          await this.tokenService.getEmail(),\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations\n        );\n        const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n        await this.cryptoService.setKey(k);\n\n        const encKey = await this.cryptoService.makeEncKey(k);\n        await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n        const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n        try {\n          await this.apiService.postUserKeyToKeyConnector(\n            tokenResponse.keyConnectorUrl,\n            keyConnectorRequest\n          );\n        } catch (e) {\n          throw new Error(\"Unable to reach key connector\");\n        }\n\n        const keys = new KeysRequest(pubKey, privKey.encryptedString);\n        const setPasswordRequest = new SetKeyConnectorKeyRequest(\n          encKey[1].encryptedString,\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations,\n          orgId,\n          keys\n        );\n        await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n      }\n    }\n\n    if (this.vaultTimeoutService != null) {\n      await this.stateService.setBiometricLocked(false);\n    }\n    this.messagingService.send(\"loggedIn\");\n    return result;\n  }\n\n  private clearState(): void {\n    this.key = null;\n    this.email = null;\n    this.masterPasswordHash = null;\n    this.localMasterPasswordHash = null;\n    this.code = null;\n    this.codeVerifier = null;\n    this.ssoRedirectUrl = null;\n    this.clientId = null;\n    this.clientSecret = null;\n    this.twoFactorProvidersData = null;\n    this.selectedTwoFactorProviderType = null;\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function,\n    private errorCallback: Function,\n    private infoCallback: Function\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { TwoFactorProviders } from \"jslib-common/services/auth.service\";\n\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n  token: string = \"\";\n  remember: boolean = false;\n  webAuthnReady: boolean = false;\n  webAuthnNewTab: boolean = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported: boolean = false;\n  webAuthn: WebAuthnIFrame = null;\n  title: string = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService\n  ) {\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.authService.twoFactorProvidersData == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(\n      this.webAuthnSupported\n    );\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.authService.twoFactorProvidersData.size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      this.selectedProviderType,\n      this.token,\n      this.remember\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  getContentScrollY(win: Window, scrollingContainer: string = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer: string = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword: boolean = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += '<span class=\"password-' + type + '\">' + character + \"</span>\";\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n  @Input() showSelect: boolean = false;\n  @Output() onSelected = new EventEmitter<string>();\n\n  passTypeOptions: any[];\n  options: any = {};\n  password: string = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n\n  async ngOnInit() {\n    const optionsResponse = await this.passwordGenerationService.getOptions();\n    this.options = optionsResponse[0];\n    this.enforcedPolicyOptions = optionsResponse[1];\n    this.avoidAmbiguous = !this.options.ambiguous;\n    this.options.type = this.options.type === \"passphrase\" ? \"passphrase\" : \"password\";\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderChanged() {\n    this.saveOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizeOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n  }\n\n  async saveOptions(regenerate: boolean = true) {\n    this.normalizeOptions();\n    await this.passwordGenerationService.saveOptions(this.options);\n\n    if (regenerate) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  copy() {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.password);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizeOptions() {\n    // Application level normalize options depedent on class variables\n    this.options.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.options.uppercase &&\n      !this.options.lowercase &&\n      !this.options.number &&\n      !this.options.special\n    ) {\n      this.options.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","<ng-container>\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!showSelect\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"showSelect\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passGen\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"showSelect\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"password-block\">\n    <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row text-primary\"\n        appStopClick\n        appBlurClick\n        (click)=\"regenerate()\"\n      >\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row text-primary\"\n        appStopClick\n        appBlurClick\n        (click)=\"copy()\"\n      >\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n        <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"options\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label class=\"sr-only radio-header\">{{ \"type\" | i18n }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"options.type\"\n            name=\"Type_{{ o.value }}\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"saveOptions()\"\n            [checked]=\"options.type === o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"options.type === 'passphrase'\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-input\" appBoxRow>\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.numWords\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-input\" appBoxRow>\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          type=\"text\"\n          maxlength=\"1\"\n          (input)=\"saveOptions()\"\n          [(ngModel)]=\"options.wordSeparator\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n        <input\n          id=\"capitalize\"\n          type=\"checkbox\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.capitalize\"\n          [disabled]=\"enforcedPolicyOptions?.capitalize\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n        <input\n          id=\"include-number\"\n          type=\"checkbox\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.includeNumber\"\n          [disabled]=\"enforcedPolicyOptions?.includeNumber\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"options.type === 'password'\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n          <label for=\"length\">{{ \"length\" | i18n }}</label>\n          <input\n            id=\"length\"\n            type=\"number\"\n            min=\"5\"\n            max=\"128\"\n            [(ngModel)]=\"options.length\"\n            (change)=\"saveOptions()\"\n          />\n          <input\n            id=\"lengthRange\"\n            type=\"range\"\n            min=\"5\"\n            max=\"128\"\n            step=\"1\"\n            [(ngModel)]=\"options.length\"\n            (change)=\"sliderChanged()\"\n            (input)=\"sliderInput()\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"uppercase\">A-Z</label>\n          <input\n            id=\"uppercase\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useUppercase\"\n            [(ngModel)]=\"options.uppercase\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"lowercase\">a-z</label>\n          <input\n            id=\"lowercase\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useLowercase\"\n            [(ngModel)]=\"options.lowercase\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"numbers\">0-9</label>\n          <input\n            id=\"numbers\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'numbers' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useNumbers\"\n            [(ngModel)]=\"options.number\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"special\">!@#$%^&*</label>\n          <input\n            id=\"special\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useSpecial\"\n            [(ngModel)]=\"options.special\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n          <input\n            id=\"min-number\"\n            type=\"number\"\n            min=\"0\"\n            max=\"9\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"options.minNumber\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n          <input\n            id=\"min-special\"\n            type=\"number\"\n            min=\"0\"\n            max=\"9\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"options.minSpecial\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n          <input\n            id=\"ambiguous\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"avoidAmbiguous\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { PasswordGeneratorComponent as BasePasswordGeneratorComponent } from \"jslib-angular/components/password-generator.component\";\n\n@Component({\n  selector: \"app-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private stateService: StateService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipherState = addEditCipherInfo.cipher;\n    }\n    this.showSelect = this.cipherState != null;\n  }\n\n  select() {\n    super.select();\n    this.cipherState.login.password = this.password;\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { BrowserApi } from \"../browser/browserApi\";\n\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-private-mode\",\n  templateUrl: \"private-mode.component.html\",\n})\nexport class PrivateModeComponent implements OnInit {\n  privateModeMessage: string;\n  learnMoreMessage: string;\n\n  ngOnInit() {\n    this.privateModeMessage = chrome.i18n.getMessage(\"privateModeMessage\");\n    this.learnMoreMessage = chrome.i18n.getMessage(\"learnMore\");\n  }\n\n  learnMore() {\n    BrowserApi.createNewTab(\n      \"https://help.bitwarden.com/article/extension-wont-load-in-private-mode/\"\n    );\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" *ngIf=\"showCurrentTab\">\n        <a routerLink=\"current\" appA11yTitle=\"{{ 'currentTab' | i18n }}\">\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"vault\" appA11yTitle=\"{{ 'myVault' | i18n }}\">\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"myVault\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"send\" appA11yTitle=\"{{ 'send' | i18n }}\">\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"generator\" appA11yTitle=\"{{ 'passGen' | i18n }}\">\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"settings\" appA11yTitle=\"{{ 'settings' | i18n }}\">\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<div class=\"content\">\n  <p class=\"text-center\">{{ privateModeMessage }}</p>\n  <button type=\"button\" class=\"btn primary block\" (click)=\"learnMore()\">\n    <b>{{ learnMoreMessage }}</b>\n  </button>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab: boolean = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport abstract class ExportService {\n  getExport: (format?: \"csv\" | \"json\" | \"encrypted_json\") => Promise<string>;\n  getOrganizationExport: (\n    organizationId: string,\n    format?: \"csv\" | \"json\" | \"encrypted_json\"\n  ) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\n\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy: boolean = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector: boolean = false;\n  disableRequestOTP: boolean = false;\n  sentCode: boolean = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VerifyMasterPasswordComponent as BaseComponent } from \"jslib-angular/components/verify-master-password.component\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent extends BaseComponent {}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { View } from \"./view\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\n\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode: boolean = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"folders && folders.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!folders || !folders.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent implements OnInit {\n  folders: FolderView[];\n\n  constructor(private folderService: FolderService, private router: Router) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    // Remove \"No Folder\"\n    if (this.folders.length > 0) {\n      this.folders = this.folders.slice(0, this.folders.length - 1);\n    }\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"disableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"disableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"disableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"disableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"disableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"disableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableChangedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"disableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateDisableContextMenuItem()\"\n            [(ngModel)]=\"disableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableContextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowCards\">{{ \"dontShowCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowCards\"\n            type=\"checkbox\"\n            (change)=\"updateShowCards()\"\n            [(ngModel)]=\"dontShowCards\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowIdentities\">{{ \"dontShowIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowIdentities\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentities()\"\n            [(ngModel)]=\"dontShowIdentities\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"disableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateDisableFavicon()\"\n            [(ngModel)]=\"disableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableFaviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"disableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateDisableBadgeCounter()\"\n            [(ngModel)]=\"disableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableBadgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  disableFavicon = false;\n  disableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  disableAutoTotpCopy = false;\n  disableContextMenuItem = false;\n  disableAddLoginNotification = false;\n  disableChangedPasswordNotification = false;\n  dontShowCards = false;\n  dontShowIdentities = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral: boolean = true;\n  showAutofill: boolean = true;\n  showDisplay: boolean = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.disableAddLoginNotification = await this.stateService.getDisableAddLoginNotification();\n\n    this.disableChangedPasswordNotification =\n      await this.stateService.getDisableChangedPasswordNotification();\n\n    this.disableContextMenuItem = await this.stateService.getDisableContextMenuItem();\n\n    this.dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    this.dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n\n    this.disableAutoTotpCopy = !(await this.totpService.isAutoCopyEnabled());\n\n    this.disableFavicon = await this.stateService.getDisableFavicon();\n\n    this.disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(this.disableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      this.disableChangedPasswordNotification\n    );\n  }\n\n  async updateDisableContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(this.disableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(this.disableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateDisableFavicon() {\n    await this.stateService.setDisableFavicon(this.disableFavicon);\n  }\n\n  async updateDisableBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(this.disableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCards() {\n    await this.stateService.setDontShowCardsCurrentTab(this.dontShowCards);\n  }\n\n  async updateShowIdentities() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(this.dontShowIdentities);\n  }\n\n  async saveTheme() {\n    await this.stateService.setTheme(this.theme);\n    window.setTimeout(() => window.location.reload(), 200);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium: boolean = false;\n  price: number = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</content>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"jslib-angular/components/premium.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals: boolean = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", (event) => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"jslib-angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  // tslint:disable-next-line\n  registerOnTouched(onTouched: any): void {}\n\n  // tslint:disable-next-line\n  setDisabledState?(isDisabled: boolean): void {}\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"autoBiometricsPrompt\">{{ \"disableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"disableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</content>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2/src/sweetalert2.js\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { SetPinComponent } from \"../components/set-pin.component\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric: boolean = false;\n  disableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // tslint:disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(this.disableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://help.bitwarden.com/article/change-your-master-password/\");\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://help.bitwarden.com/article/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://help.bitwarden.com/article/what-is-an-organization/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://help.bitwarden.com/article/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://help.bitwarden.com/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://help.bitwarden.com/article/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</content>\n","import { View } from \"./view\";\n\nimport { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { ItemView } from \"../models/view/itemView\";\n\nimport { LinkedIdType } from \"../enums/linkedIdType\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Card } from \"../domain/card\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  // tslint:disable\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(c?: Card) {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Identity } from \"../domain/identity\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  // tslint:disable\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(i?: Identity) {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { Login } from \"../domain/login\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { ItemView } from \"./itemView\";\n\nimport { SecureNote } from \"../domain/secureNote\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { ItemView } from \"./itemView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { View } from \"./view\";\n\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { Utils } from \"../../misc/utils\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  // tslint:disable\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n  // tslint:enable\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\n\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\n\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode: boolean = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n\n  editMode: boolean = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword: boolean = false;\n  showCardNumber: boolean = false;\n  showCardCode: boolean = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt: boolean = false;\n  canUseReprompt: boolean = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (\n      this.cipher.login != null &&\n      this.cipher.login.password != null &&\n      this.cipher.login.password.length\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { View } from \"./view\";\n\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField: boolean = false; // Marks if the field is new and hasn't been saved\n  showValue: boolean = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              name=\"Login.Username\"\n              [(ngModel)]=\"cipher.login.username\"\n              inputmode=\"email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/article/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      this.stateService.setAddEditCipherInfo({\n        cipher: this.cipher,\n        collectionIds:\n          this.collections == null\n            ? []\n            : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n      });\n      this.router.navigate([\"generator\"]);\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://help.bitwarden.com/article/update-encryption-key/\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded: boolean = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted: boolean = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\n\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","import {\n  CdkFixedSizeVirtualScroll,\n  FixedSizeVirtualScrollStrategy,\n  VIRTUAL_SCROLL_STRATEGY,\n} from \"@angular/cdk/scrolling\";\nimport { Directive, forwardRef } from \"@angular/core\";\n\n// Custom virtual scroll strategy for cdk-virtual-scroll\n// Uses a sample list item to set the itemSize for FixedSizeVirtualScrollStrategy\n// The use case is the same as FixedSizeVirtualScrollStrategy, but it avoids locking in pixel sizes in the template.\nexport class CipherListVirtualScrollStrategy extends FixedSizeVirtualScrollStrategy {\n  private checkItemSizeCallback: any;\n  private timeout: any;\n\n  constructor(\n    itemSize: number,\n    minBufferPx: number,\n    maxBufferPx: number,\n    checkItemSizeCallback: any\n  ) {\n    super(itemSize, minBufferPx, maxBufferPx);\n    this.checkItemSizeCallback = checkItemSizeCallback;\n  }\n\n  onContentRendered() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = setTimeout(this.checkItemSizeCallback, 500);\n  }\n}\n\nexport function _cipherListVirtualScrollStrategyFactory(cipherListDir: CipherListVirtualScroll) {\n  return cipherListDir._scrollStrategy;\n}\n\n@Directive({\n  selector: \"cdk-virtual-scroll-viewport[itemSize]\",\n  providers: [\n    {\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: _cipherListVirtualScrollStrategyFactory,\n      deps: [forwardRef(() => CipherListVirtualScroll)],\n    },\n  ],\n})\nexport class CipherListVirtualScroll extends CdkFixedSizeVirtualScroll {\n  _scrollStrategy: CipherListVirtualScrollStrategy;\n\n  constructor() {\n    super();\n    this._scrollStrategy = new CipherListVirtualScrollStrategy(\n      this.itemSize,\n      this.minBufferPx,\n      this.maxBufferPx,\n      this.checkAndUpdateItemSize\n    );\n  }\n\n  checkAndUpdateItemSize = () => {\n    const sampleItem = document.querySelector(\n      \"cdk-virtual-scroll-viewport .virtual-scroll-item\"\n    ) as HTMLElement;\n    const newItemSize = sampleItem?.offsetHeight;\n\n    if (newItemSize != null && newItemSize !== this.itemSize) {\n      this.itemSize = newItemSize;\n      this._scrollStrategy.updateItemAndBufferSize(\n        this.itemSize,\n        this.minBufferPx,\n        this.maxBufferPx\n      );\n    }\n  };\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img [src]=\"image\" appFallbackSrc=\"{{ fallbackImage }}\" *ngIf=\"imageEnabled && image\" alt=\"\" />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<span\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</span>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"selectCipher(cipher)\"\n  (dblclick)=\"launchCipher(cipher)\"\n  appStopClick\n  title=\"{{ title }} - {{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <div class=\"row-main\">\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </div>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div class=\"no-items\" *ngIf=\"!ciphers.length\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n      <ng-container *ngIf=\"loaded\">\n        <p>{{ \"noItemsInList\" | i18n }}</p>\n        <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n          {{ \"addItem\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n    >\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(null, true);\n      } else if (params.type) {\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load((c) => c.type === this.type);\n      } else if (params.folderId) {\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          const folderNode = await this.folderService.getNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load((c) => c.folderId === this.folderId);\n      } else if (params.collectionId) {\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load();\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], { queryParams: { name: this.hostname, uri: this.url } });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      switch (c.type) {\n        case CipherType.Login:\n          this.loginCiphers.push(c);\n          break;\n        case CipherType.Card:\n          this.cardCiphers.push(c);\n          break;\n        case CipherType.Identity:\n          this.identityCiphers.push(c);\n          break;\n        default:\n          break;\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded: boolean = false;\n  cipherType = CipherType;\n  selectedAll: boolean = false;\n  selectedFavorites: boolean = false;\n  selectedTrash: boolean = false;\n  selectedType: CipherType = null;\n  selectedFolder: boolean = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(this.collapsedGroupings);\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nconst ComponentId = \"GroupingsComponent\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService\n  ) {\n    super(collectionService, folderService, browserStateService);\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    await super.load(false);\n    await this.loadCiphers();\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    super.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    this.deletedCount = this.allCiphers.filter((c) => c.isDeleted).length;\n    await this.search(null);\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.ciphers.forEach((c) => {\n      if (c.isDeleted) {\n        return;\n      }\n      if (c.favorite) {\n        if (favoriteCiphers == null) {\n          favoriteCiphers = [];\n        }\n        favoriteCiphers.push(c);\n      }\n\n      if (c.folderId == null) {\n        if (noFolderCiphers == null) {\n          noFolderCiphers = [];\n        }\n        noFolderCiphers.push(c);\n      }\n\n      if (typeCounts.has(c.type)) {\n        typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n      } else {\n        typeCounts.set(c.type, 1);\n      }\n\n      if (folderCounts.has(c.folderId)) {\n        folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n      } else {\n        folderCounts.set(c.folderId, 1);\n      }\n\n      if (c.collectionIds != null) {\n        c.collectionIds.forEach((colId) => {\n          if (collectionCounts.has(colId)) {\n            collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n          } else {\n            collectionCounts.set(colId, 1);\n          }\n        });\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    super.selectType(type);\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    super.selectFolder(folder);\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    super.selectCollection(collection);\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    super.selectTrash();\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"]);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"jslib-angular/components/password-history.component\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","export abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (token: string, email: string) => Promise<any>;\n  getTwoFactorToken: (email: string) => Promise<string>;\n  clearTwoFactorToken: (email: string) => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted: boolean = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span [hidden]=\"!field.showValue\" class=\"monospaced show-whitespace\">{{\n            field.value\n          }}</span>\n          <span [hidden]=\"field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"jslib-angular/components/view-custom-fields.component\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<content *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div [hidden]=\"showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              [hidden]=\"!showPassword\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{ cipher.card.maskedNumber }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{ cipher.card.number }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { ViewComponent as BaseViewComponent } from \"jslib-angular/components/view.component\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { View } from \"./view\";\n\nimport { SendFile } from \"../domain/sendFile\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { View } from \"./view\";\n\nimport { SendText } from \"../domain/sendText\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount: number = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled: boolean = false;\n  hideEmail: boolean = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default:\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default:\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\n\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\n\nimport { Component } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired: boolean = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","<button\n  type=\"button\"\n  *ngFor=\"let s of sends\"\n  (click)=\"selectSend(s)\"\n  appStopClick\n  title=\"{{ title }} - {{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <div class=\"row-main\">\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </div>\n  <div class=\"action-buttons\">\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </span>\n  </div>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</content>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { Location } from \"@angular/common\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\n\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { LaunchGuardService } from \"./services/launch-guard.service\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./generator/password-generator.component\";\n\nimport { PrivateModeComponent } from \"./private-mode.component\";\nimport { TabsComponent } from \"./tabs.component\";\n\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\n\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuardService],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [LaunchGuardService],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: PasswordGeneratorComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"private-mode\",\n    component: PrivateModeComponent,\n    data: { state: \"private-mode\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: GroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: PasswordGeneratorComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nenum SsoType {\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nenum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nenum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n  Artifact = 4,\n}\n\nenum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nenum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n\nexport class SsoConfigApi extends BaseResponse {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpArtifactResolutionServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpArtifactResolutionServiceUrl = this.getResponseProperty(\n      \"IdpArtifactResolutionServiceUrl\"\n    );\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data = new SsoConfigApi(this.getResponseProperty(\"Data\"));\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nimport { PlanType } from \"../../enums/planType\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { PermissionsApi } from \"../../api/permissionsApi\";\n\nimport { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { ChallengeResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: TokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(\n          request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)\n        ),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken(request.email);\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\"POST\", \"/accounts/prelogin\", request, false, true);\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/register\", request, false, false);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\n\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\n\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { View } from \"./view\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { AttachmentData } from \"../data/attachmentData\";\n\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { CardView } from \"../view/cardView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(this),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldData } from \"../data/fieldData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { FieldView } from \"../view/fieldView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(this),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriData } from \"../data/loginUriData\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginData } from \"../data/loginData\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteData } from \"../data/secureNoteData\";\n\nimport Domain from \"./domainBase\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherData } from \"../data/cipherData\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(\n    groupingId: string,\n    folder: boolean = true\n  ): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host:\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(\n    url: string,\n    autofillOnPageLoad: boolean = false\n  ): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    await this.apiService.putShareCiphers(request);\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = (_evt) => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === \"Array\") {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\n\nimport * as hrtime from \"browser-hrtime\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // tslint:disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // tslint:disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label: string = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label: string = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import * as bigInt from \"big-integer\";\n\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage: boolean = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    // tslint:disable-next-line\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKey(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { CardView } from \"../view/cardView\";\n\nimport { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldView } from \"../view/fieldView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { IdentityView } from \"../view/identityView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher } from \"./cipher\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection } from \"./collection\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FolderData } from \"../data/folderData\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { FolderView } from \"../view/folderView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder } from \"./folder\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { NotificationType } from \"../../enums/notificationType\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { NotificationType } from \"../enums/notificationType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType: string = \"\";\n  minLength: number = 0;\n  useUppercase: boolean = false;\n  useLowercase: boolean = false;\n  useNumbers: boolean = false;\n  numberCount: number = 0;\n  useSpecial: boolean = false;\n  specialCount: number = 0;\n  minNumberWords: number = 0;\n  capitalize: boolean = false;\n  includeNumber: boolean = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyResponse } from \"../response/policyResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled: boolean = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      // tslint:disable-next-line\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nimport { SendResponse } from \"../response/sendResponse\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendFileData } from \"../data/sendFileData\";\n\nimport { SendFileView } from \"../view/sendFileView\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendTextData } from \"../data/sendTextData\";\n\nimport { SendTextView } from \"../view/sendTextView\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SendData } from \"../data/sendData\";\n\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\n\nimport { Account, AccountData } from \"../models/domain/account\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { WindowState } from \"../models/domain/windowState\";\n\nimport { StateFactory } from \"../factories/stateFactory\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited: boolean = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? true\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? false\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<Set<string>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: Set<string>, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collapsedGroupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(`${options.userId}${partialKeys.autoKey}`, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.masterKey}`,\n      value,\n      options\n    );\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.biometricKey}`,\n      value,\n      options\n    );\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    const cachedAccount = this.accountDiskCache.get(options.userId);\n    if (cachedAccount != null) {\n      return cachedAccount;\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.accountDiskCache.set(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n    this.accountDiskCache.delete(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    this.accountDiskCache.delete(userId);\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async toggleTokens(): Promise<any> {\n    const token = await this.getToken();\n    const refreshToken = await this.getRefreshToken();\n    const clientId = await this.getClientId();\n    const clientSecret = await this.getClientSecret();\n    const timeout = await this.stateService.getVaultTimeout();\n    const action = await this.stateService.getVaultTimeoutAction();\n\n    if ((timeout != null || timeout === 0) && action === \"logOut\") {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.clearToken();\n    }\n\n    await this.setToken(token);\n    await this.setRefreshToken(refreshToken);\n    await this.setClientId(clientId);\n    await this.setClientSecret(clientSecret);\n  }\n\n  async setTwoFactorToken(token: string): Promise<any> {\n    return await this.stateService.setTwoFactorToken(token);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds: number = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes: number = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport { GlobalStateFactory } from \"../factories/globalStateFactory\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys + userId),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys + userId),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress: boolean = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    /* tslint:disable */\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n    /* tslint:enable */\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      // tslint:disable-next-line\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\n\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\n\nimport { GlobalStateFactory } from \"jslib-common/factories/globalStateFactory\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        I18nServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        LogService,\n        CryptoFunctionServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async (userId?: string) =>\n            messagingService.send(\"logout\", { expired: false, userId: userId })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\", PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { Utils } from \"../misc/utils\";\n\nimport { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\n\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { FolderRequest } from \"../models/request/folderRequest\";\n\nimport { FolderResponse } from \"../models/response/folderResponse\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","import { CollectionData } from \"../models/data/collectionData\";\n\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async (_userId) => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport { FileUploadType } from \"../enums/fileUploadType\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\n\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { ExportService as ExportServiceAbstraction } from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\n\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { EventView } from \"../models/view/eventView\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService\n  ) {}\n\n  async getExport(format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension: string = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter: string = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private isIE: boolean;\n  private isOldSafari: boolean;\n\n  constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.isIE = platformUtilsService.isIE();\n    const ua = win.navigator.userAgent;\n    this.isOldSafari =\n      platformUtilsService.isSafari() &&\n      (ua.indexOf(\" Version/10.\") > -1 || ua.indexOf(\" Version/9.\") > -1);\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    if (this.isIE || this.isOldSafari) {\n      const forgeLen = algorithm === \"sha256\" ? 32 : 64;\n      const passwordBytes = this.toByteString(password);\n      const saltBytes = this.toByteString(salt);\n      const derivedKeyBytes = (forge as any).pbkdf2(\n        passwordBytes,\n        saltBytes,\n        iterations,\n        forgeLen,\n        algorithm\n      );\n      return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n    }\n\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if ((this.isIE && algorithm === \"sha1\") || algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    if (this.isIE && algorithm === \"sha512\") {\n      const hmac = (forge as any).hmac.create();\n      const keyBytes = this.toByteString(key);\n      const valueBytes = this.toByteString(value);\n      hmac.start(algorithm, keyBytes);\n      hmac.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n    }\n\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = (forge as any).hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = (forge as any).hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    const decipher = (forge as any).cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString(\"utf8\");\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { EventType } from \"../enums/eventType\";\n\nimport { EventData } from \"../models/data/eventData\";\n\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { PolicyData } from \"../models/data/policyData\";\n\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\n\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\n\nimport { SendRequest } from \"../models/request/sendRequest\";\n\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SendType } from \"../enums/sendType\";\n\nimport { SendView } from \"../models/view/sendView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        100000\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","import { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nimport { VerificationType } from \"../enums/verificationType\";\n\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\n\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { OrganizationData } from \"../models/data/organizationData\";\n\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ProviderData } from \"../models/data/providerData\";\n\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { LaunchGuardService } from \"./launch-guard.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\n\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nfunction getBgService<T>(service: string) {\n  return (): T => {\n    const page = BrowserApi.getBackgroundPage();\n    return page ? (page.bitwardenMain[service] as T) : null;\n  };\n}\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\n\nexport function initFactory(\n  platformUtilsService: PlatformUtilsService,\n  i18nService: I18nService,\n  popupUtilsService: PopupUtilsService,\n  stateService: StateServiceAbstraction,\n  logService: LogServiceAbstraction\n): Function {\n  return async () => {\n    await stateService.init();\n\n    if (!popupUtilsService.inPopup(window)) {\n      window.document.body.classList.add(\"body-full\");\n    } else if (window.screen.availHeight < 600) {\n      window.document.body.classList.add(\"body-xs\");\n    } else if (window.screen.availHeight <= 800) {\n      window.document.body.classList.add(\"body-sm\");\n    }\n\n    if (!isPrivateMode) {\n      const htmlEl = window.document.documentElement;\n      const theme = await platformUtilsService.getEffectiveTheme();\n      htmlEl.classList.add(\"theme_\" + theme);\n      platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n        const bwTheme = await stateService.getTheme();\n        if (bwTheme == null || bwTheme === ThemeType.System) {\n          htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n          htmlEl.classList.add(\"theme_\" + sysTheme);\n        }\n      });\n      htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        logService.info(\"Force redraw is on\");\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useFactory: () =>\n        isPrivateMode ? null : getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        PlatformUtilsService,\n        I18nService,\n        PopupUtilsService,\n        StateServiceAbstraction,\n        LogServiceAbstraction,\n      ],\n      multi: true,\n    },\n    LaunchGuardService,\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    DebounceNavigationService,\n    PopupUtilsService,\n    { provide: MessagingService, useClass: BrowserMessagingService },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return isPrivateMode\n          ? null\n          : new PopupSearchService(\n              getBgService<SearchService>(\"searchService\")(),\n              cipherService,\n              logService,\n              i18nService\n            );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    { provide: FolderService, useFactory: getBgService<FolderService>(\"folderService\"), deps: [] },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: StorageServiceAbstraction,\n      useFactory: getBgService<StorageServiceAbstraction>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: \"SECURE_STORAGE\",\n      useFactory: getBgService<StorageServiceAbstraction>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex: number = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(\n  direction: string,\n  from: number,\n  to: number,\n  zIndex: number = 1000\n) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(\n  direction: string,\n  from: number,\n  to: number,\n  zIndex: number = 1000\n) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import { ChangeDetectorRef, Component, NgZone, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2/src/sweetalert2.js\";\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <main [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </main>`,\n})\nexport class AppComponent implements OnInit {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService,\n    private keyConnectoService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    if (BrowserApi.getBackgroundPage() == null) {\n      return;\n    }\n    this.stateService.activeAccount.subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.stateService.setBrowserGroupingComponentState(null);\n          await this.stateService.setBrowserCipherComponentState(null);\n          await this.stateService.setBrowserSendComponentState(null);\n          await this.stateService.setBrowserSendTypeComponentState(null);\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { ServicesModule } from \"./services/services.module\";\n\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./generator/password-generator.component\";\n\nimport { AppComponent } from \"./app.component\";\nimport { PrivateModeComponent } from \"./private-mode.component\";\nimport { TabsComponent } from \"./tabs.component\";\n\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\n\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\n\nimport { A11yTitleDirective } from \"jslib-angular/directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"jslib-angular/directives/api-action.directive\";\nimport { AutofocusDirective } from \"jslib-angular/directives/autofocus.directive\";\nimport { BlurClickDirective } from \"jslib-angular/directives/blur-click.directive\";\nimport { BoxRowDirective } from \"jslib-angular/directives/box-row.directive\";\nimport { CipherListVirtualScroll } from \"jslib-angular/directives/cipherListVirtualScroll.directive\";\nimport { FallbackSrcDirective } from \"jslib-angular/directives/fallback-src.directive\";\nimport { InputVerbatimDirective } from \"jslib-angular/directives/input-verbatim.directive\";\nimport { SelectCopyDirective } from \"jslib-angular/directives/select-copy.directive\";\nimport { StopClickDirective } from \"jslib-angular/directives/stop-click.directive\";\nimport { StopPropDirective } from \"jslib-angular/directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"jslib-angular/directives/true-false-value.directive\";\n\nimport { ColorPasswordPipe } from \"jslib-angular/pipes/color-password.pipe\";\nimport { I18nPipe } from \"jslib-angular/pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"jslib-angular/pipes/search-ciphers.pipe\";\n\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { VerifyMasterPasswordComponent } from \"./components/verify-master-password.component\";\n\nimport { CalloutComponent } from \"jslib-angular/components/callout.component\";\nimport { IconComponent } from \"jslib-angular/components/icon.component\";\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\n\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n  ],\n  declarations: [\n    A11yTitleDirective,\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    ApiActionDirective,\n    AppComponent,\n    AttachmentsComponent,\n    AutofocusDirective,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CipherListVirtualScroll,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    ColorPasswordPipe,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FallbackSrcDirective,\n    FolderAddEditComponent,\n    FoldersComponent,\n    GroupingsComponent,\n    HintComponent,\n    HomeComponent,\n    I18nPipe,\n    IconComponent,\n    InputVerbatimDirective,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    PasswordGeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeComponent,\n    RegisterComponent,\n    SearchCiphersPipe,\n    SelectCopyDirective,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    StopClickDirective,\n    StopPropDirective,\n    SyncComponent,\n    TabsComponent,\n    TrueFalseValueDirective,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    VaultTimeoutInputComponent,\n    VerifyMasterPasswordComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\n// tslint:disable-next-line\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(28981)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","VaultTimeoutService","MessagingService","KeyConnectorService","AuthGuardService","constructor","vaultTimeoutService","router","messagingService","keyConnectorService","stateService","canActivate","route","routerState","this","getIsAuthenticated","send","isLocked","url","navigate","queryParams","promptBiometric","includes","getConvertAccountRequired","homepage","loginpage","redirectUrl","DebounceNavigationService","navigationStartSub","events","pipe","filter","event","NavigationStart","pairwise","subscribe","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ngOnDestroy","unsubscribe","nodeURL","window","Utils","static","inited","isNode","process","release","name","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","Array","prototype","map","call","x","slice","join","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","RegExp","test","uriString","getUrl","hostname","host","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","forEach","pair","parts","set","toLowerCase","i18nService","prop","a","b","collator","compare","localeCompare","target","source","Object","assign","obj","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","BrowserApi","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","command","data","tabSendMessage","sendMessage","runtime","lastError","extension","getBackgroundPage","getManifest","version","getViews","type","extensionPage","create","callback","onMessage","addListener","msg","sender","response","title","windowType","tabToClose","remove","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","browser","finally","close","blobData","blobOptions","fileName","isSafariApi","resolveNow","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","sendNativeMessage","responseData","sendMessageToApp","JSON","stringify","blob","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","body","appendChild","click","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","request","reject","getPlatformInfo","LaunchGuardService","unauthGuardService","PlatformUtilsService","EnvironmentService","I18nService","platformUtilsService","environmentService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","t","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","querySelectorAll","formEl","addEventListener","classList","add","contains","tagName","inputEl","focus","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","I18nPipe","transform","p1","p2","p3","EnvironmentComponent","super","PasswordHintRequest","email","ApiService","LogService","BaseResponse","getResponseProperty","propertyName","exactName","undefined","otherCasePropertyName","ErrorResponse","status","identityResponse","errorModel","responseErrorModel","message","validationErrors","captchaSiteKey","HCaptcha_SiteKey","captchaRequired","isNullOrWhitespace","statusCode","getSingleMessage","key","hasOwnProperty","getAllMessages","messages","item","prefix","lastSep","lastIndexOf","push","ValidationService","showError","defaultErrorMessage","errors","concat","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","error","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","take","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HomeComponent","passwordGenerationService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","state","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","EncryptionType","HashPurpose","KeySuffixOptions","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","_userId","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","StopClickDirective","$event","preventDefault","A11yTitleDirective","appA11yTitle","LockComponent","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","div","innerHTML","heightAuto","buttonsStyling","html","showCancelButton","cancelButtonText","showConfirmButton","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","height","width","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaToken","setupCaptcha","captcha","token","info","showCaptcha","handleCaptchaRequired","AuthService","authService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","logIn","setRememberedEmail","twoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","KdfType","confirmMasterPassword","hint","showTerms","acceptPolicies","isSelfHost","masterPasswordScoreWidth","masterPasswordScore","masterPasswordScoreColor","masterPasswordScoreText","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","PBKDF2_SHA256","isIE","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","enforcedPolicyOptions","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","useLowerKdf","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","logInSso","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","TwoFactorProviderType","SsoComponent","reloadOpenWindows","open","onProviderSelected","onRecoverSelected","providers","getSupportedTwoFactorProviders","choose","recover","Window","TwoFactorOptionsComponent","selectedTwoFactorProviderType","TwoFactorEmailRequest","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","AccountSettings","environmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","Account","profile","tokens","AuthResult","twoFactorProviders","SetKeyConnectorKeyRequest","DeviceRequest","appId","getDevice","getDeviceString","pushToken","KeyConnectorUserKeyRequest","PreloginRequest","TokenRequest","credentials","codes","clientIdClientSecret","provider","remember","device","clientSecret","toIdentityToken","scope","client_id","grant_type","client_secret","username","password","code_verifier","redirect_uri","deviceType","deviceIdentifier","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","alterIdentityTokenHeaders","headers","fromUtf8ToUrlB64","TwoFactorProviders","Authenticator","description","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","twoFactorProvidersData","needsLock","getDefaultTwoFactorProvider","cleanupWebAuthn","providerData","get","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","querySelector","value","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","PopupUtilsService","inSidebar","inTab","inPopout","inPopup","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","getBoundingClientRect","round","closePopup","BroadcasterService","TwoFactorComponent","broadcasterService","popupUtilsService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","has","isLinux","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","masterPasswordScoreStyle","scoreWidth","Color","Text","Width","history","getHistory","clear","copy","copyOptions","copyToClipboard","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","passwordArray","colorizedPassword","character","isSpecial","PasswordGeneratorHistoryComponent","back","showSelect","onSelected","showOptions","avoidAmbiguous","passTypeOptions","optionsResponse","getOptions","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","regenerate","select","toggleOptions","number","checked","PopOutComponent","show","expand","PasswordGeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","PrivateModeComponent","privateModeMessage","getMessage","learnMoreMessage","learnMore","createNewTab","TabsComponent","showCurrentTab","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","run","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","toggleUriInput","uriSet","Set","delete","currentUris","EventType","PolicyType","ExportService","EventService","UserVerificationService","exportService","eventService","userVerificationService","formBuilder","disabledByPolicy","exportForm","group","format","secret","formatOptions","checkExportDisabled","policyAppliesToUser","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","setValue","getExport","getFileName","collect","User_ClientExportedVault","csv","saveFile","VerificationType","disableRequestOTP","sentCode","FormControl","processChanges","valueChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","provide","NG_VALUE_ACCESSOR","multi","useExisting","trigger","transition","style","opacity","animate","VerifyMasterPasswordComponent","ExportComponent","FolderView","revisionDate","FolderService","folderService","onSavedFolder","onDeletedFolder","editMode","folder","saveWithServer","deletePromise","deleteWithServer","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","getAllDecrypted","folderSelected","addFolder","TotpService","OptionsComponent","totpService","disableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","disableAutoTotpCopy","disableContextMenuItem","disableAddLoginNotification","disableChangedPasswordNotification","dontShowCards","dontShowIdentities","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","Never","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","isAutoCopyEnabled","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateDisableContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateDisableFavicon","updateDisableBadgeCounter","setDisableBadgeCounter","updateShowCards","setDontShowCardsCurrentTab","updateShowIdentities","setDontShowIdentitiesCurrentTab","saveTheme","setTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","getCanAccessPremium","refresh","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","DeviceType","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","config","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","stopPropagation","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","minutes","CUSTOM_VALUE","MaximumVaultTimeout","vaultTimeoutPolicy","getAll","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","control","policyError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","newValue","valid","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","titleText","iconHtml","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","fingerprint","getFingerprint","innerText","confirmButtonText","rate","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","ItemView","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","brand","subTitle","count","expiration","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","passwordRevisionDate","totp","uris","autofillOnPageLoad","hasUris","maskedPassword","canLaunch","some","u","hasTotp","find","SecureNoteView","n","CipherView","organizationId","notes","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","CipherService","AuditService","CollectionService","PasswordRepromptService","OrganizationService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","organizationService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","Confirmed","writeableCollections","loadCollections","cipherId","setAddEditCipherInfo","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","cancel","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","linkedId","maskedValue","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","field","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","AddEditComponent","showAttachments","collectionId","collection","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","createUrlTree","currentBaseUrl","allowOwnershipOptions","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","canAccessPremium","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","SearchService","indexedEntityId","searchService","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","loaded","searchPlaceholder","deleted","searchPending","searchTimeout","deletedFilter","applyFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","isSearchable","searchText","searchCiphers","StateService","CipherListVirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","checkItemSizeCallback","onContentRendered","CipherListVirtualScroll","CdkFixedSizeVirtualScroll","checkAndUpdateItemSize","sampleItem","newItemSize","offsetHeight","_scrollStrategy","updateItemAndBufferSize","VIRTUAL_SCROLL_STRATEGY","useFactory","cipherListDir","deps","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","StopPropDirective","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","view","CipherRowComponent","viewCipher","ComponentId","CiphersComponent","changeDetectorRef","popupUtils","searchTypeSearch","preventSelected","applySavedState","getBrowserCipherComponentState","groupingTitle","folderNode","getNested","node","nestedFolders","children","collectionNode","nestedCollections","setBrowserCipherComponentState","successfully","saveState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","routeDirection","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","syncInProgress","loadedTimeout","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedAll","selectedFavorites","selectedTrash","selectedType","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","loadFolders","getAllNested","selectAll","clearSelections","selectFavorites","selectTrash","selectType","editFolder","collapse","grouping","idPrefix","isCollapsed","setCollapsedGroupings","GroupingsComponent","browserStateService","folderCounts","collectionCounts","typeCounts","showLeftHeader","deletedCount","noFolderListSize","hasSearched","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","restoredScopeState","restoreState","getBrowserGroupingComponentState","replaceState","loadCiphers","favoriteCiphers","colId","filterDeleted","showSearching","setBrowserGroupingComponentState","decCipher","PasswordHistoryComponent","onSharedCipher","organizations","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","SendType","SendFileView","sizeName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","maxAccessCount","accessCount","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendService","BrowserPath","DateField","DatePreset","datePipe","sendService","onSavedSend","onDeletedSend","copyLink","disableSend","disableHideEmail","sendType","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","isDateTimeLocalSupported","sendId","setDates","DisableSend","SendOptions","getEmailVerified","loadSend","setDate","getDate","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","sendData","togglePasswordVisible","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","NgForm","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","SendComponent","refreshing","filteredSends","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","searchSends","SendListComponent","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","SendGroupingsComponent","calculateTypeCounts","setBrowserSendTypeComponentState","addSend","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","getBrowserSendTypeComponentState","refreshTimeout","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","LockGuardService","PasswordRepromptComponent","UnauthGuardService","ApiKeyResponse","apiKey","AttachmentResponse","PasswordHistoryResponse","lastUsedDate","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","ListResponse","dr","continuationToken","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpArtifactResolutionServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","sendResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","KeyConnectorUserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","qsStringify","identityClientId","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","tokenResponse","setTokens","authed","hasResponse","alterHeaders","requestUrl","getApiUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","limit","throttleKey","descriptor","originalMethod","allThrottles","args","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","toFieldData","toIdentityData","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","model","reduce","promise","decAttachment","decField","decPh","toCipherData","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","sequentialize","cacheKey","caches","getCache","argsCacheKey","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","_evt","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","LogLevelType","ConsoleLogService","isDev","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EncArrayBuffer","EncryptedObject","EEFLongWordList","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getDecryptedCryptoSymmetricKey","getEncryptedCryptoSymmetricKey","decEncKey","encKeyCipher","stretchKey","symmetricCryptoKey","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","EventData","EventRequest","Field","LoginUri","toView","toDomain","Cipher","values","build","CipherWithIds","Collection","CollectionWithId","Event","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderWithId","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","FolderRequest","OrganizationUserType","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","NotificationsService","appIdService","connected","inactive","reconnectTimer","getNotificationsUrl","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","getAppId","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","isProviderUser","canAccess","Owner","isManager","Manager","Admin","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","toLocaleLowerCase","joined","protocolIndex","queryIndex","SendFileData","SendTextData","SendData","SendRequest","fileLength","SendFile","SendText","Send","cryptoKey","Keys","StorageLocation","State","globals","accounts","authenticatedAccounts","accountActivity","WindowState","partialKeys","storageService","secureStorageService","stateMigrationService","stateFactory","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","createAccount","diskAccount","getAccountFromDisk","addAccount","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","setApiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","setApiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","hasPremiumPersonally","getOrganizations","defaultOnDiskLocalOptions","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedFolders","setDecryptedFolders","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPolicies","setDecryptedPolicies","getDecryptedSends","setDecryptedSends","getDisableAutoTotpCopy","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","kdfType","getLastActive","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","setLoginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getProviders","setProviders","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","getTwoFactorToken","setTwoFactorToken","setUsesKeyConnector","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","stateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","createGlobal","timeoutAction","StateVersion","decoded","fromUrlB64ToUtf8","setToken","setClientId","setClientSecret","toggleTokens","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","sub","email_verified","getName","getPremium","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","StateMigrationService","currentStateVersion","getCurrentStateVersion","Latest","One","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","OrganizationData","ProviderData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","userNeedsMigration","setConvertAccountRequired","B32Chars","SteamChars","VerifyOTPRequest","lockedCallback","loggedOutCallback","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","getValue","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","policy","isLoggedOut","vaultTimeoutSeconds","DecryptParameters","StorageService","subscribers","messageCallback","GlobalState","AccountFactory","accountConstructor","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","JslibServicesModule","useValue","LOCALE_ID","makeAndGetAppId","getAnonymousAppId","existingId","guid","newGuid","setCryptoKeys","makePreloginKey","localHashedPassword","logInHelper","logInApiKey","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","supportsDuo","providerPriority","_value","preloginResponse","storedTwoFactorToken","deviceRequest","emailPassword","codeCodeVerifier","Remember","clearState","twoFactorResponse","accountInformation","getAndSetKey","getKeyConnectorUrl","keyConnectorRequest","pubKey","privKey","setPasswordRequest","Injector","decryptedFolders","decFolders","noneFolder","nodes","folderCopy","updates","cId","decryptMany","decCollections","decryptedCollections","collectionCopy","urlsSubject","setUrlsFromStorage","eventsUrl","envUrls","formatUrl","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","decryptHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","userInputs","globalUserInputs","finalUserInputs","num","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","getSettingsKey","setSettingsKey","getEncryptedExport","getDecryptedExport","getOrganizationExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","foldersMap","exportCiphers","buildCommonCipher","jsonDoc","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","collectionsMap","padCharacter","numString","login_uri","login_username","login_password","login_totp","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","fromByteStringToArray","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","uploadEvents","uploadImmediately","orgIds","clearEvents","decryptedPolicies","diskPolicies","getPolicyForOrganization","policyType","mapPoliciesFromToken","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","decSends","legacyServerSendFileUpload","loggedInUsingSso","requiredByOrganization","userIsNotUsingKeyConnector","userKeyResponse","keyArr","buildRequest","verification","requestClass","alreadyHashed","validateInput","getByIdentifier","canManageSponsorships","PopupSearchService","mainSearchService","consoleLogService","getBgService","service","page","bitwardenMain","isPrivateMode","ServicesModule","APP_INITIALIZER","screen","availHeight","htmlEl","documentElement","getEffectiveTheme","onDefaultSystemThemeChange","sysTheme","bwTheme","platform","screenLeft","screenTop","subscriber","arg","queryShown","position","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","toastrService","sanitizer","keyConnectoService","lastActivity","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","ngModule","TOAST_CONFIG","default","CommonModule","registerLocaleData","AppModule","CurrencyPipe","DatePipe","A11yModule","BrowserAnimationsModule","BrowserModule","DragDropModule","FormsModule","ReactiveFormsModule","ScrollingModule","forRoot","maxOpened","autoDismiss","closeButton","positionClass","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}