{"version":3,"file":"background.js","mappings":"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EACA0zB,GAAYqF,oBAEd,aAAalhC,KAAKmhC,YAChBl3B,EACA82B,EACAE,EACA,KACA,KACA,KACA,KACA,KACA94B,EACA,KACA,KACA,KACA2L,EACA,SAIEstB,SACJ1jC,EACAohC,EACAuC,EACAC,G,0CAGA,OADAthC,KAAK2gC,8BAAgC,WACxB3gC,KAAKmhC,YAChB,KACA,KACA,KACAzjC,EACAohC,EACAuC,EACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAC,MAIEC,YAAY3sB,EAAkBC,G,0CAElC,OADA7U,KAAK2gC,8BAAgC,WACxB3gC,KAAKmhC,YAChB,KACA,KACA,KACA,KACA,KACA,KACAvsB,EACAC,EACA,KACA,KACA,KACA,KACA,KACA,SAIE2sB,eACJlC,EACA9rB,EACAmrB,G,0CAEA,aAAa3+B,KAAKmhC,YAChBnhC,KAAKiK,MACLjK,KAAK6+B,mBACL7+B,KAAKyhC,wBACLzhC,KAAKtC,KACLsC,KAAK8+B,aACL9+B,KAAK0hC,eACL1hC,KAAK4U,SACL5U,KAAK6U,aACL7U,KAAKmI,IACLm3B,EACA9rB,EACAmrB,EACA3+B,KAAK8T,aACL,SAIE6tB,cACJ13B,EACA42B,EACAvB,EACA9rB,EACAmrB,EACA7qB,G,0CAEA9T,KAAK2gC,8BAAgC,KACrC,MAAMx4B,QAAYnI,KAAK8gC,gBAAgBD,EAAgB52B,GACjD82B,QAAuB/gC,KAAKmgC,cAAca,aAAaH,EAAgB14B,GACvE84B,QAA4BjhC,KAAKmgC,cAAca,aACnDH,EACA14B,EACA0zB,GAAYqF,oBAEd,aAAalhC,KAAKmhC,YAChBl3B,EACA82B,EACAE,EACA,KACA,KACA,KACA,KACA,KACA94B,EACAm3B,EACA9rB,EACAmrB,EACA7qB,EACA,SAIE8tB,iBACJlkC,EACAohC,EACAuC,EACA/B,EACA9rB,EACAmrB,G,0CAGA,OADA3+B,KAAK2gC,8BAAgC,WACxB3gC,KAAKmhC,YAChB,KACA,KACA,KACAzjC,EACAohC,EACAuC,EACA,KACA,KACA,KACA/B,EACA9rB,EACAmrB,EACA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oBAAXmsE,QAA0BA,OAAOK,MAAQL,OAAOK,KAAKS,SACrErsE,EAAOA,EACJjF,QAAQ,mBAAoB,kBAC5BA,QAAQ,oBAAqB,kBAC7BA,QAAQ,qBAAsB,kBACjCwwE,OAAOK,KAAKS,OAAO,CACjB7vE,IAAKwD,M,kCArEAy5E,IAAiB,qB,yCAAjBA,GAAiB,QAAjBA,GAAiB,OCPf,MAAMkB,GAQnBv6E,YAAYw6E,GAPZ,KAAAC,OAAqB,GACrB,KAAAD,aAAoB,GACpB,KAAAE,WAAkB,GAClB,KAAA3wB,QAAe,GACf,KAAA4wB,SAAgB,GAChB,KAAAC,WAAkB,KAGhBniF,KAAK+hF,aAAeA,GCTjB,MAAMK,IACK,GAAAC,mBAA+B,CAE7C,WACA,YACA,QACA,gBACA,SACA,iBACA,SACA,UACA,cACA,WAEA,eACA,gBACA,gBACA,iBACA,aACA,eAGc,GAAAC,wBAAoC,CAClD,kBACA,UACA,eACA,UAGc,GAAAC,sBAAkC,CAChD,QACA,WACA,SACA,OACA,SACA,QACA,QACA,UAIG,MAAMC,IACK,GAAAC,eAA2B,CACzC,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,uBAAmC,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBACA,iBACA,WACA,YAGc,GAAAC,mBAA+B,CAE7C,SACA,YACA,SACA,UACA,cACA,WACA,SAEA,WACA,gBAGc,GAAAC,gBAA4B,CAAC,SAAU,iBAEvC,GAAAC,kBAA8B,CAC5C,UACA,iBACA,OACA,SACA,eACA,eACA,YACA,aAGc,GAAAC,uBAAmC,CACjD,eACA,eACA,YACA,aAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/system.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/windows.background.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./src/background.ts","webpack:///./src/background/main.background.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      // tslint:disable-next-line\n      const r = (Math.random() * 16) | 0;\n      // tslint:disable-next-line\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    // tslint:disable-next-line\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      // tslint:disable-next-line\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nenum SsoType {\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nenum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nenum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n  Artifact = 4,\n}\n\nenum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nenum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n\nexport class SsoConfigApi extends BaseResponse {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpArtifactResolutionServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpArtifactResolutionServiceUrl = this.getResponseProperty(\n      \"IdpArtifactResolutionServiceUrl\"\n    );\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data = new SsoConfigApi(this.getResponseProperty(\"Data\"));\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nimport { PlanType } from \"../../enums/planType\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { PermissionsApi } from \"../../api/permissionsApi\";\n\nimport { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { ChallengeResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: TokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(\n          request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)\n        ),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken(request.email);\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\"POST\", \"/accounts/prelogin\", request, false, true);\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/register\", request, false, false);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { Utils } from \"../misc/utils\";\n\nimport { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\n\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\n\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  collapsedGroupings?: Set<string>;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class AuthResult {\n  twoFactor: boolean = false;\n  captchaSiteKey: string = \"\";\n  resetMasterPassword: boolean = false;\n  forcePasswordReset: boolean = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n}\n","import { KeysRequest } from \"../keysRequest\";\n\nimport { KdfType } from \"../../../enums/kdfType\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { DeviceRequest } from \"./deviceRequest\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n  email: string;\n  masterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  redirectUri: string;\n  clientId: string;\n  clientSecret: string;\n  device?: DeviceRequest;\n\n  constructor(\n    credentials: string[],\n    codes: string[],\n    clientIdClientSecret: string[],\n    public provider: TwoFactorProviderType,\n    public token: string,\n    public remember: boolean,\n    public captchaResponse: string,\n    device?: DeviceRequest\n  ) {\n    if (credentials != null && credentials.length > 1) {\n      this.email = credentials[0];\n      this.masterPasswordHash = credentials[1];\n    } else if (codes != null && codes.length > 2) {\n      this.code = codes[0];\n      this.codeVerifier = codes[1];\n      this.redirectUri = codes[2];\n    } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n      this.clientId = clientIdClientSecret[0];\n      this.clientSecret = clientIdClientSecret[1];\n    }\n    this.device = device != null ? device : null;\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.clientSecret != null) {\n      obj.scope = clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n      obj.grant_type = \"client_credentials\";\n      obj.client_secret = this.clientSecret;\n    } else if (this.masterPasswordHash != null && this.email != null) {\n      obj.grant_type = \"password\";\n      obj.username = this.email;\n      obj.password = this.masterPasswordHash;\n    } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n      obj.grant_type = \"authorization_code\";\n      obj.code = this.code;\n      obj.code_verifier = this.codeVerifier;\n      obj.redirect_uri = this.redirectUri;\n    } else {\n      throw new Error(\"must provide credentials or codes\");\n    }\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.token && this.provider != null) {\n      obj.twoFactorToken = this.token;\n      obj.twoFactorProvider = this.provider;\n      obj.twoFactorRemember = this.remember ? \"1\" : \"0\";\n    }\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n      headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n    }\n  }\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\n\nimport {\n  Account,\n  AccountData,\n  AccountKeys,\n  AccountProfile,\n  AccountTokens,\n} from \"../models/domain/account\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\n\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport const TwoFactorProviders = {\n  [TwoFactorProviderType.Authenticator]: {\n    type: TwoFactorProviderType.Authenticator,\n    name: null as string,\n    description: null as string,\n    priority: 1,\n    sort: 1,\n    premium: false,\n  },\n  [TwoFactorProviderType.Yubikey]: {\n    type: TwoFactorProviderType.Yubikey,\n    name: null as string,\n    description: null as string,\n    priority: 3,\n    sort: 2,\n    premium: true,\n  },\n  [TwoFactorProviderType.Duo]: {\n    type: TwoFactorProviderType.Duo,\n    name: \"Duo\",\n    description: null as string,\n    priority: 2,\n    sort: 3,\n    premium: true,\n  },\n  [TwoFactorProviderType.OrganizationDuo]: {\n    type: TwoFactorProviderType.OrganizationDuo,\n    name: \"Duo (Organization)\",\n    description: null as string,\n    priority: 10,\n    sort: 4,\n    premium: false,\n  },\n  [TwoFactorProviderType.Email]: {\n    type: TwoFactorProviderType.Email,\n    name: null as string,\n    description: null as string,\n    priority: 0,\n    sort: 6,\n    premium: false,\n  },\n  [TwoFactorProviderType.WebAuthn]: {\n    type: TwoFactorProviderType.WebAuthn,\n    name: null as string,\n    description: null as string,\n    priority: 4,\n    sort: 5,\n    premium: true,\n  },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n  email: string;\n  masterPasswordHash: string;\n  localMasterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  ssoRedirectUrl: string;\n  clientId: string;\n  clientSecret: string;\n  twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  selectedTwoFactorProviderType: TwoFactorProviderType = null;\n  captchaToken: string;\n\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    private cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    private i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private logService: LogService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    private keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    private setCryptoKeys = true\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      null,\n      null,\n      null,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSso(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    orgId: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      orgId\n    );\n  }\n\n  async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null\n    );\n  }\n\n  async logInTwoFactor(\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    return await this.logInHelper(\n      this.email,\n      this.masterPasswordHash,\n      this.localMasterPasswordHash,\n      this.code,\n      this.codeVerifier,\n      this.ssoRedirectUrl,\n      this.clientId,\n      this.clientSecret,\n      this.key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      this.captchaToken,\n      null\n    );\n  }\n\n  async logInComplete(\n    email: string,\n    masterPassword: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean,\n    captchaToken?: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSsoComplete(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  async logInApiKeyComplete(\n    clientId: string,\n    clientSecret: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  logOut(callback: Function) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  getSupportedTwoFactorProviders(win: Window): any[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  authingWithApiKey(): boolean {\n    return this.clientId != null && this.clientSecret != null;\n  }\n\n  authingWithSso(): boolean {\n    return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n  }\n\n  authingWithPassword(): boolean {\n    return this.email != null && this.masterPasswordHash != null;\n  }\n\n  private async logInHelper(\n    email: string,\n    hashedPassword: string,\n    localHashedPassword: string,\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    clientId: string,\n    clientSecret: string,\n    key: SymmetricCryptoKey,\n    twoFactorProvider?: TwoFactorProviderType,\n    twoFactorToken?: string,\n    remember?: boolean,\n    captchaToken?: string,\n    orgId?: string\n  ): Promise<AuthResult> {\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    let emailPassword: string[] = [];\n    let codeCodeVerifier: string[] = [];\n    let clientIdClientSecret: [string, string] = [null, null];\n\n    if (email != null && hashedPassword != null) {\n      emailPassword = [email, hashedPassword];\n    } else {\n      emailPassword = null;\n    }\n    if (code != null && codeVerifier != null && redirectUrl != null) {\n      codeCodeVerifier = [code, codeVerifier, redirectUrl];\n    } else {\n      codeCodeVerifier = null;\n    }\n    if (clientId != null && clientSecret != null) {\n      clientIdClientSecret = [clientId, clientSecret];\n    } else {\n      clientIdClientSecret = null;\n    }\n\n    let request: TokenRequest;\n    if (twoFactorToken != null && twoFactorProvider != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        twoFactorProvider,\n        twoFactorToken,\n        remember,\n        captchaToken,\n        deviceRequest\n      );\n    } else if (storedTwoFactorToken != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        TwoFactorProviderType.Remember,\n        storedTwoFactorToken,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    } else {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        null,\n        null,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    }\n\n    const response = await this.apiService.postIdentityToken(request);\n\n    this.clearState();\n    const result = new AuthResult();\n    result.captchaSiteKey = (response as any).siteKey;\n    if (!!result.captchaSiteKey) {\n      return result;\n    }\n    result.twoFactor = !!(response as any).twoFactorProviders2;\n\n    if (result.twoFactor) {\n      // two factor required\n      this.email = email;\n      this.masterPasswordHash = hashedPassword;\n      this.localMasterPasswordHash = localHashedPassword;\n      this.code = code;\n      this.codeVerifier = codeVerifier;\n      this.ssoRedirectUrl = redirectUrl;\n      this.clientId = clientId;\n      this.clientSecret = clientSecret;\n      this.key = this.setCryptoKeys ? key : null;\n      const twoFactorResponse = response as IdentityTwoFactorResponse;\n      this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n      result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n      this.captchaToken = twoFactorResponse.captchaToken;\n      return result;\n    }\n\n    const tokenResponse = response as IdentityTokenResponse;\n    result.resetMasterPassword = tokenResponse.resetMasterPassword;\n    result.forcePasswordReset = tokenResponse.forcePasswordReset;\n\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            apiKeyClientId: clientId,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        keys: {\n          ...new AccountKeys(),\n          ...{\n            apiKeyClientSecret: clientSecret,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n\n    if (tokenResponse.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n    }\n\n    if (this.setCryptoKeys) {\n      if (key != null) {\n        await this.cryptoService.setKey(key);\n      }\n      if (localHashedPassword != null) {\n        await this.cryptoService.setKeyHash(localHashedPassword);\n      }\n\n      // Skip this step during SSO new user flow. No key is returned from server.\n      if (code == null || tokenResponse.key != null) {\n        if (tokenResponse.keyConnectorUrl != null) {\n          await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n        } else if (tokenResponse.apiUseKeyConnector) {\n          const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n          await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n        }\n\n        await this.cryptoService.setEncKey(tokenResponse.key);\n\n        // User doesn't have a key pair yet (old account), let's generate one for them\n        if (tokenResponse.privateKey == null) {\n          try {\n            const keyPair = await this.cryptoService.makeKeyPair();\n            await this.apiService.postAccountKeys(\n              new KeysRequest(keyPair[0], keyPair[1].encryptedString)\n            );\n            tokenResponse.privateKey = keyPair[1].encryptedString;\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n\n        await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n      } else if (tokenResponse.keyConnectorUrl != null) {\n        const password = await this.cryptoFunctionService.randomBytes(64);\n\n        const k = await this.cryptoService.makeKey(\n          Utils.fromBufferToB64(password),\n          await this.tokenService.getEmail(),\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations\n        );\n        const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n        await this.cryptoService.setKey(k);\n\n        const encKey = await this.cryptoService.makeEncKey(k);\n        await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n        const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n        try {\n          await this.apiService.postUserKeyToKeyConnector(\n            tokenResponse.keyConnectorUrl,\n            keyConnectorRequest\n          );\n        } catch (e) {\n          throw new Error(\"Unable to reach key connector\");\n        }\n\n        const keys = new KeysRequest(pubKey, privKey.encryptedString);\n        const setPasswordRequest = new SetKeyConnectorKeyRequest(\n          encKey[1].encryptedString,\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations,\n          orgId,\n          keys\n        );\n        await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n      }\n    }\n\n    if (this.vaultTimeoutService != null) {\n      await this.stateService.setBiometricLocked(false);\n    }\n    this.messagingService.send(\"loggedIn\");\n    return result;\n  }\n\n  private clearState(): void {\n    this.key = null;\n    this.email = null;\n    this.masterPasswordHash = null;\n    this.localMasterPasswordHash = null;\n    this.code = null;\n    this.codeVerifier = null;\n    this.ssoRedirectUrl = null;\n    this.clientId = null;\n    this.clientSecret = null;\n    this.twoFactorProvidersData = null;\n    this.selectedTwoFactorProviderType = null;\n  }\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { View } from \"./view\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { EncString } from \"./encString\";\n\nimport { View } from \"../view/view\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { AttachmentData } from \"../data/attachmentData\";\n\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { View } from \"./view\";\n\nimport { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { ItemView } from \"../models/view/itemView\";\n\nimport { LinkedIdType } from \"../enums/linkedIdType\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Card } from \"../domain/card\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  // tslint:disable\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(c?: Card) {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CardData } from \"../data/cardData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { CardView } from \"../view/cardView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(this),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Identity } from \"../domain/identity\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  // tslint:disable\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(i?: Identity) {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { Login } from \"../domain/login\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { ItemView } from \"./itemView\";\n\nimport { SecureNote } from \"../domain/secureNote\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { ItemView } from \"./itemView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { View } from \"./view\";\n\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField: boolean = false; // Marks if the field is new and hasn't been saved\n  showValue: boolean = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldData } from \"../data/fieldData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { FieldView } from \"../view/fieldView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(this),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { View } from \"./view\";\n\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { Utils } from \"../../misc/utils\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  // tslint:disable\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n  // tslint:enable\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriData } from \"../data/loginUriData\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginData } from \"../data/loginData\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteData } from \"../data/secureNoteData\";\n\nimport Domain from \"./domainBase\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherData } from \"../data/cipherData\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(\n    groupingId: string,\n    folder: boolean = true\n  ): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host:\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(\n    url: string,\n    autofillOnPageLoad: boolean = false\n  ): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    await this.apiService.putShareCiphers(request);\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = (_evt) => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === \"Array\") {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionData } from \"../models/data/collectionData\";\n\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\n\nimport * as hrtime from \"browser-hrtime\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // tslint:disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // tslint:disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label: string = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label: string = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async (_userId) => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nimport { EventData } from \"../models/data/eventData\";\n\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { CardView } from \"../view/cardView\";\n\nimport { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldView } from \"../view/fieldView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { IdentityView } from \"../view/identityView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher } from \"./cipher\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection } from \"./collection\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { View } from \"./view\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { FolderView } from \"../view/folderView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder } from \"./folder\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { ExportService as ExportServiceAbstraction } from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\n\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { EventView } from \"../models/view/eventView\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService\n  ) {}\n\n  async getExport(format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension: string = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter: string = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport { FileUploadType } from \"../enums/fileUploadType\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\n\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\n\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { FolderRequest } from \"../models/request/folderRequest\";\n\nimport { FolderResponse } from \"../models/response/folderResponse\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { NotificationType } from \"../../enums/notificationType\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { NotificationType } from \"../enums/notificationType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { OrganizationData } from \"../models/data/organizationData\";\n\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType: string = \"\";\n  minLength: number = 0;\n  useUppercase: boolean = false;\n  useLowercase: boolean = false;\n  useNumbers: boolean = false;\n  numberCount: number = 0;\n  useSpecial: boolean = false;\n  specialCount: number = 0;\n  minNumberWords: number = 0;\n  capitalize: boolean = false;\n  includeNumber: boolean = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyResponse } from \"../response/policyResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity: number = 0;\n  minLength: number = 0;\n  requireUpper: boolean = false;\n  requireLower: boolean = false;\n  requireNumbers: boolean = false;\n  requireSpecial: boolean = false;\n}\n","import { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled: boolean = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { PolicyData } from \"../models/data/policyData\";\n\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\n\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ProviderData } from \"../models/data/providerData\";\n\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      // tslint:disable-next-line\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nimport { SendResponse } from \"../response/sendResponse\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { View } from \"./view\";\n\nimport { SendFile } from \"../domain/sendFile\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { View } from \"./view\";\n\nimport { SendText } from \"../domain/sendText\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount: number = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled: boolean = false;\n  hideEmail: boolean = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendFileData } from \"../data/sendFileData\";\n\nimport { SendFileView } from \"../view/sendFileView\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendTextData } from \"../data/sendTextData\";\n\nimport { SendTextView } from \"../view/sendTextView\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SendData } from \"../data/sendData\";\n\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\n\nimport { SendRequest } from \"../models/request/sendRequest\";\n\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SendType } from \"../enums/sendType\";\n\nimport { SendView } from \"../models/view/sendView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        100000\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async toggleTokens(): Promise<any> {\n    const token = await this.getToken();\n    const refreshToken = await this.getRefreshToken();\n    const clientId = await this.getClientId();\n    const clientSecret = await this.getClientSecret();\n    const timeout = await this.stateService.getVaultTimeout();\n    const action = await this.stateService.getVaultTimeoutAction();\n\n    if ((timeout != null || timeout === 0) && action === \"logOut\") {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.clearToken();\n    }\n\n    await this.setToken(token);\n    await this.setRefreshToken(refreshToken);\n    await this.setClientId(clientId);\n    await this.setClientSecret(clientSecret);\n  }\n\n  async setTwoFactorToken(token: string): Promise<any> {\n    return await this.stateService.setTwoFactorToken(token);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds: number = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes: number = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport { GlobalStateFactory } from \"../factories/globalStateFactory\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys + userId),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys + userId),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress: boolean = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    /* tslint:disable */\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n    /* tslint:enable */\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      // tslint:disable-next-line\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nimport { VerificationType } from \"../enums/verificationType\";\n\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\n\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private isIE: boolean;\n  private isOldSafari: boolean;\n\n  constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.isIE = platformUtilsService.isIE();\n    const ua = win.navigator.userAgent;\n    this.isOldSafari =\n      platformUtilsService.isSafari() &&\n      (ua.indexOf(\" Version/10.\") > -1 || ua.indexOf(\" Version/9.\") > -1);\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    if (this.isIE || this.isOldSafari) {\n      const forgeLen = algorithm === \"sha256\" ? 32 : 64;\n      const passwordBytes = this.toByteString(password);\n      const saltBytes = this.toByteString(salt);\n      const derivedKeyBytes = (forge as any).pbkdf2(\n        passwordBytes,\n        saltBytes,\n        iterations,\n        forgeLen,\n        algorithm\n      );\n      return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n    }\n\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if ((this.isIE && algorithm === \"sha1\") || algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    if (this.isIE && algorithm === \"sha512\") {\n      const hmac = (forge as any).hmac.create();\n      const keyBytes = this.toByteString(key);\n      const valueBytes = this.toByteString(value);\n      hmac.start(algorithm, keyBytes);\n      hmac.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n    }\n\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = (forge as any).hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = (forge as any).hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    const decipher = (forge as any).cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString(\"utf8\");\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { SafariApp } from \"./safariApp\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage: boolean = false, active: boolean = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\n\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              this.messagingService.send(\"showDialog\", {\n                text: this.i18nService.t(\"startDesktopDesc\"),\n                title: this.i18nService.t(\"startDesktopTitle\"),\n                confirmText: this.i18nService.t(\"ok\"),\n                type: \"error\",\n              });\n              reject();\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        if (error != null) {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"desktopIntegrationDisabledDesc\"),\n            title: this.i18nService.t(\"desktopIntegrationDisabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n        }\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n        reject();\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\":\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if (!(await this.vaultTimeoutService.isLocked())) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if (await this.vaultTimeoutService.isLocked()) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\":\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (await this.vaultTimeoutService.isLocked()) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked: boolean = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked: boolean = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\n\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    BrowserApi.messageListener(\n      \"runtime.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        await this.processMessage(msg, sender, sendResponse);\n      }\n    );\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\":\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\":\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\":\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      case \"webAuthnResult\":\n        const vaultUrl2 = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl2) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  async init() {\n    if (!chrome.tabs) {\n      return;\n    }\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabActivated\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabReplaced\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabUpdated\");\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if (await this.vaultTimeoutService.isLocked()) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import MainBackground from \"./main.background\";\n\nexport default class WindowsBackground {\n  private windows: any;\n\n  constructor(private main: MainBackground) {\n    this.windows = chrome.windows;\n  }\n\n  async init() {\n    if (!this.windows) {\n      return;\n    }\n\n    this.windows.onFocusChanged.addListener(async (windowId: any) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"windowFocused\");\n      this.main.messagingService.send(\"windowChanged\");\n    });\n  }\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  identityClientId: string;\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isIE: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  getContentScrollY(win: Window, scrollingContainer: string = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer: string = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage: boolean = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    // tslint:disable-next-line\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKey(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  identityClientId: string = \"browser\";\n\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml: boolean = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // tslint:disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // tslint:disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fr\",\n      \"he\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"sk\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ko\", \"한국어\"],\n    [\"lv\", \"Latvietis\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) ||\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\n\nimport { Account, AccountData } from \"../models/domain/account\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { WindowState } from \"../models/domain/windowState\";\n\nimport { StateFactory } from \"../factories/stateFactory\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited: boolean = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? true\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? false\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<Set<string>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: Set<string>, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collapsedGroupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(`${options.userId}${partialKeys.autoKey}`, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.masterKey}`,\n      value,\n      options\n    );\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.biometricKey}`,\n      value,\n      options\n    );\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    const cachedAccount = this.accountDiskCache.get(options.userId);\n    if (cachedAccount != null) {\n      return cachedAccount;\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.accountDiskCache.set(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n    this.accountDiskCache.delete(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    this.accountDiskCache.delete(userId);\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // tslint:disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import MainBackground from \"./background/main.background\";\n\nconst bitwardenMain = ((window as any).bitwardenMain = new MainBackground());\nbitwardenMain.bootstrap().then(() => {\n  // Finished bootstrapping\n});\n","import { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\n\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\nimport WindowsBackground from \"./windows.background\";\n\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport { Account } from \"../models/account\";\n\nimport { GlobalStateFactory } from \"jslib-common/factories/globalStateFactory\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n  private windowsBackground: WindowsBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor() {\n    // Services\n    this.messagingService = new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window, this.platformUtilsService);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService\n    );\n\n    const vaultTimeoutServiceCallbacks = {\n      locked: async (userId?: string) => {\n        if (this.notificationsService != null) {\n          this.notificationsService.updateConnection(false);\n        }\n        await this.setIcon();\n        await this.refreshBadgeAndMenu(true);\n        if (this.systemService != null) {\n          await this.systemService.clearPendingClipboard();\n          await this.reloadProcess();\n        }\n      },\n      logout: async (userId?: string) => await this.logout(false, userId),\n    };\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      vaultTimeoutServiceCallbacks.locked,\n      vaultTimeoutServiceCallbacks.logout\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      async (expired: boolean) => await this.logout(expired)\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.vaultTimeoutService,\n      this.environmentService,\n      () => this.logout(true),\n      this.logService,\n      this.stateService\n    );\n    this.popupUtilsService = new PopupUtilsService(this.platformUtilsService);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.stateService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.vaultTimeoutService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this,\n      this.autofillService,\n      this.cipherService,\n      this.vaultTimeoutService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.vaultTimeoutService\n    );\n    this.windowsBackground = new WindowsBackground(this);\n\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.i18nService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.vaultTimeoutService,\n      this.logService,\n      this.cryptoFunctionService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    (this.authService as AuthService).init();\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n    await this.windowsBackground.init();\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if (!chrome.browserAction && !this.sidebarAction) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const locked = await this.vaultTimeoutService.isLocked();\n\n    let suffix = \"\";\n    if (!isAuthenticated) {\n      suffix = \"_gray\";\n    } else if (locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked: boolean = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu();\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (!locked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override: boolean = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if (!(await this.vaultTimeoutService.isLocked(userId))) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t352: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(44736)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","CipherRepromptType","CipherType","StateVersion","ThemeType","DeviceType","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","WindowState","GlobalState","locale","theme","System","window","stateVersion","One","environmentUrls","nodeURL","Utils","static","inited","isNode","process","release","name","isBrowser","isMobileBrowser","this","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","Array","prototype","map","call","x","slice","join","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","RegExp","test","uriString","url","getUrl","hostname","host","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","forEach","pair","parts","set","toLowerCase","i18nService","prop","a","b","collator","compare","localeCompare","target","source","Object","assign","obj","filter","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","BaseResponse","constructor","response","getResponseProperty","propertyName","exactName","undefined","otherCasePropertyName","ApiKeyResponse","super","apiKey","AttachmentResponse","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CardApi","data","cardholderName","brand","number","expMonth","expYear","FieldApi","type","value","linkedId","IdentityApi","title","firstName","middleName","lastName","address1","address2","address3","city","state","postalCode","country","company","email","phone","ssn","username","passportNumber","licenseNumber","LoginUriApi","uri","LoginApi","passwordRevisionDate","totp","autofillOnPageLoad","uris","u","SecureNoteApi","CipherResponse","organizationId","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","revisionDate","collectionIds","deletedDate","login","card","secureNote","fields","f","attachments","passwordHistory","h","reprompt","None","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","t","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","status","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","ciphers","ErrorResponse","identityResponse","errorModel","responseErrorModel","message","validationErrors","captchaSiteKey","HCaptcha_SiteKey","captchaRequired","isNullOrWhitespace","statusCode","getSingleMessage","hasOwnProperty","getAllMessages","messages","item","prefix","lastSep","lastIndexOf","push","EventResponse","userId","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","deviceType","ipAddress","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","collections","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","privateKey","twoFactorToken","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","captchaToken","twoFactorProviders","ListResponse","dr","continuationToken","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","configType","keyConnectorEnabled","authority","clientId","clientSecret","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpArtifactResolutionServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OrganizationSsoResponse","enabled","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","publicKey","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","identifier","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","error","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premium","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","settings","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SyncResponse","folders","policies","sends","profile","p","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","KeyConnectorUserKeyResponse","HtmlStorageLocation","ApiService","tokenService","platformUtilsService","environmentService","logoutCallback","customUserAgent","isWebClient","isDesktopClient","device","getDevice","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","request","headers","Headers","Accept","alterIdentityTokenHeaders","fetch","Request","getIdentityUrl","body","qsStringify","toIdentityToken","identityClientId","credentials","getCredentials","cache","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","reject","refreshIdentityToken","doAuthRefresh","getProfile","send","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","apiUrl","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","sendId","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipher","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","getAttachmentData","emergencyAccessId","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachment","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","token","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","getOrganizationAutoEnrollStatus","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postLeaveOrganization","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","getOrganizationKeys","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","start","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","JSON","stringify","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","preValidateSso","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","grant_type","client_id","tokenResponse","setTokens","authed","hasResponse","alterHeaders","requestUrl","getApiUrl","requestInit","FormData","tokenError","isTextResponse","Message","params","hasBaseUrl","typeHeader","get","AppIdService","storageService","getAppId","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","AuditService","cryptoFunctionService","apiService","passwordLeaked","hashBytes","hash","fromBufferToHex","hashStart","hashEnding","find","v","breachedAccounts","limit","throttleKey","HashPurpose","TwoFactorProviderType","propertyKey","descriptor","originalMethod","allThrottles","args","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","splice","delete","val","catch","err","EncryptionPair","DataEncryptionPair","AccountData","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","AccountProfile","pinProtected","vaultTimeoutAction","AccountTokens","tokens","AuthResult","twoFactor","SetKeyConnectorKeyRequest","orgIdentifier","DeviceRequest","appId","getDeviceString","pushToken","KeyConnectorUserKeyRequest","KeysRequest","PreloginRequest","TokenRequest","codes","clientIdClientSecret","provider","remember","captchaResponse","masterPasswordHash","codeVerifier","redirectUri","scope","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorProvider","twoFactorRemember","fromUtf8ToUrlB64","TwoFactorProviders","Authenticator","priority","sort","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","AuthService","cryptoService","appIdService","messagingService","vaultTimeoutService","logService","keyConnectorService","stateService","setCryptoKeys","selectedTwoFactorProviderType","logIn","masterPassword","makePreloginKey","hashedPassword","hashPassword","localHashedPassword","LocalAuthorization","logInHelper","logInSso","redirectUrl","orgId","logInApiKey","logInTwoFactor","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","logOut","callback","getSupportedTwoFactorProviders","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultTwoFactorProvider","webAuthnSupported","providerType","providerPriority","_value","preloginResponse","makeKey","authingWithApiKey","authingWithSso","authingWithPassword","storedTwoFactorToken","getTwoFactorToken","deviceRequest","emailPassword","codeCodeVerifier","Remember","clearState","result","twoFactorResponse","accountInformation","addAccount","sub","apiKeyClientId","hasPremiumPersonally","kdfType","apiKeyClientSecret","setTwoFactorToken","setKey","setKeyHash","getAndSetKey","getKeyConnectorUrl","setEncKey","keyPair","makeKeyPair","encryptedString","setEncPrivateKey","randomBytes","getEmail","keyConnectorRequest","encKeyB64","encKey","makeEncKey","pubKey","privKey","setPasswordRequest","setBiometricLocked","FieldType","UriMatchType","EncryptionType","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Login","SecureNote","Card","Identity","ph","AttachmentView","fileSize","EncString","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","decryptedValue","containerService","getCryptoService","getOrgKey","decryptToUtf8","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","mapProp","all","SymmetricCryptoKey","macKey","keyB64","macKeyB64","LoginLinkedId","CardLinkedId","IdentityLinkedId","Attachment","view","orgKey","decValue","decryptToBytes","toAttachmentData","ItemView","LinkedMetadata","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","exp","formatYear","year","toCardData","IdentityView","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","hasUris","maskedPassword","canLaunch","some","launchUri","SecureNoteView","n","CipherView","localData","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","FieldView","newField","showValue","maskedValue","toFieldData","toIdentityData","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","RegularExpression","getHostname","getHost","hostnameOrUri","hostOrUri","isWebsite","toLoginUriData","Date","toLoginData","toISOString","PasswordHistoryView","Password","toPasswordHistoryData","toSecureNoteData","model","reduce","promise","attachment","decAttachment","field","decField","decPh","toCipherData","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","cipher","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","max","lastLaunched","y","valueOf","getNextIndex","sequentialize","cacheKey","caches","getCache","argsCacheKey","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","originalCipher","existingCipher","existingHiddenFields","Hidden","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","Boolean","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","indexedEntityId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","concat","matchingDomains","getDefaultUriMatch","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","_evt","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","append","filepath","contentType","saveCollectionsWithServer","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteWithServer","deleteManyWithServer","deleteAttachment","deleteAttachmentWithServer","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","softDeleteWithServer","softDeleteManyWithServer","restore","clearDeletedDate","restoreWithServer","restoreManyWithServer","restores","attachmentView","attachmentResponse","buf","arrayBuffer","decBuf","decryptFromBytes","theObj","modelProp","loginUri","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","TreeNode","node","parent","children","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionService","setDecryptedCollections","collection","decryptMany","decCollections","getSortFunction","getEncryptedCollections","decryptedCollections","getDecryptedCollections","getAllNested","nodes","collectionCopy","getNested","setEncryptedCollections","LogLevelType","ConsoleLogService","isDev","timersMap","debug","write","Debug","info","Info","warning","Warning","level","console","log","warn","time","label","hrtime","timeEnd","elapsed","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","EnvironmentService","urlsSubject","Subject","activeAccount","subscribe","_userId","setUrlsFromStorage","baseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","identityUrl","eventsUrl","getEnvironmentUrls","envUrls","setUrls","formatUrl","setEnvironmentUrls","next","getUrls","EventData","EventRequest","EventService","cipherService","organizationService","checkOnInterval","uploadEvents","setInterval","collect","eventType","uploadImmediately","getIsAuthenticated","orgIds","eventCollection","getEventCollection","event","setEventCollection","clearEvents","SecureNoteType","EventType","Field","Text","LoginUri","toView","toDomain","Generic","Cipher","values","build","CipherWithIds","Collection","CollectionWithId","Event","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FolderView","Folder","FolderWithId","FileUploadType","ExportService","folderService","getExport","format","getEncryptedExport","getDecryptedExport","getOrganizationExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","now","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","jsonDoc","encrypted","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","num","width","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","ceil","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","setTime","utfBlockId","fromUtf8ToB64","blockIdList","xml","version","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FileUploadService","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderService","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","KeyConnectorService","setUsesKeyConnector","getUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","organization","getKey","userKeyResponse","keyArr","Admin","Owner","isProviderUser","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","removeConvertAccountRequired","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationUserStatusType","NotificationsService","syncService","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","fullSync","syncUpsertSend","syncDeleteSend","isLocked","min","floor","Organization","canAccess","Confirmed","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","OrganizationService","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","EEFLongWordList","PolicyType","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","numWords","wordSeparator","PasswordGenerationService","policyService","generatePassword","options","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","randomNumber","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","index","history","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","MasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","PolicyService","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","org","setEncryptedPolicies","getMasterPasswordPoliciesForInvitedUsers","mapPoliciesFromToken","getMasterPasswordPolicyOptions","MasterPassword","evaluateMasterPassword","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyAppliesToUser","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","MaximumVaultTimeout","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","ProviderService","getProviders","setProviders","SendType","SearchService","indexing","searchableMinLength","isSearchable","query","builder","lunr","Builder","ref","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","add","searchCiphers","results","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","searchSends","joined","protocolIndex","queryIndex","substring","SendFileData","SendTextData","SendData","File","SendRequest","fileLength","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","SendText","Send","cryptoKey","makeSendKey","SendService","setDecryptedSends","fileData","passwordHash","pbkdf2","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","sendData","legacyServerSendFileUpload","setEncryptedSends","removePasswordWithServer","Keys","SettingsService","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","TokenService","decoded","fromUrlB64ToUtf8","parse","setToken","setRefreshToken","setClientId","setClientSecret","setApiKeyClientId","getApiKeyClientId","setApiKeyClientSecret","getApiKeyClientSecret","setAccessToken","getAccessToken","toggleTokens","getVaultTimeout","action","getVaultTimeoutAction","clearToken","storedToken","getDecodedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","minutes","getEmailVerified","email_verified","getName","getPremium","getIssuer","iss","amr","includes","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricText","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableFavicon","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableFullWidth","enableGravatars","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","encProviderKeys","entityId","entityType","installedVersion","keyHash","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","protectedPin","ssoCodeVerifier","ssoIdentifier","ssoState","stamp","usesConnector","vaultTimeout","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","StateMigrationService","secureStorageService","stateFactory","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","globals","createGlobal","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","createAccount","accountSettings","autoConfirmFingerPrints","biometricLocked","enableGravitars","addEditCipherInfo","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","everBeenUnlocked","accountActivity","keySuffix","remove","authenticatedUserIds","account","getGlobals","Four","OrganizationData","ProviderData","SyncService","collectionService","sendService","providerService","syncInProgress","getLastSync","setLastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","successfully","getSecurityStamp","setProviderKeys","setOrgKeys","setSecurityStamp","setEmailVerified","setForcePasswordReset","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","getDecryptedPinProtected","getBiometricLocked","cancelProcessReload","doRefresh","getLastActive","biometricLockedFingerprintValidated","getBiometricFingerprintValidated","clearInterval","clipboardValue","timeoutMs","getClearClipboard","clearSeconds","clipboardValueNow","readFromClipboard","copyToClipboard","clearing","clearPendingClipboard","B32Chars","SteamChars","TotpService","getCode","period","alg","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","pow","getTimeInterval","isAutoCopyEnabled","getDisableAutoTotpCopy","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","hmac","VerificationType","VerifyOTPRequest","OTP","SecretVerificationRequest","UserVerificationService","buildRequest","verification","requestClass","alreadyHashed","validateInput","secret","verifyUser","compareAndUpdateKeyHash","requestOTP","DecryptParameters","WebCryptoFunctionService","crypto","subtle","isIE","ua","isOldSafari","isSafari","salt","algorithm","iterations","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","fromByteStringToArray","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","hkdf","ikm","outputByteSize","hkdfParams","hkdfExpand","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","aesDecryptFastParameters","meta","encKeyByteString","macKeyByteString","macData","aesDecryptFast","parameters","dataBuffer","decipher","finish","aesDecrypt","rsaEncrypt","rsaParams","rsaDecrypt","rsaExtractPublicKey","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","rsaGenerateKeyPair","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","tabs","tab","tabSendMessage","sendMessage","lastError","getBackgroundPage","getManifest","getViews","extensionPage","create","onMessage","addListener","msg","sender","windowType","tabToClose","tabId","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","sendMessageToApp","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","appendChild","click","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","getPlatformInfo","CommandsBackground","main","passwordGenerationService","isVivaldi","messageListener","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","lock","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","eventService","totpService","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","frameId","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","setBiometricFingerprintValidated","onAdded","reloadExtension","connect","port","connecting","connectedCallback","confirmText","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","postMessage","encryptMessage","secureCommunication","getResponse","rawMessage","abs","setBiometricAwaitingAcceptance","getBiometricUnlock","setBiometricUnlock","getFingerprint","clearKey","processMessage","sendUnencrypted","fingerprint","html","NotificationQueueMessageType","NotificationBackground","autofillService","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","forms","getFormsWithPasswordFields","checkNotificationQueue","doNotificationQueueCheck","currentTab","getTabFromCurrentWindow","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","getDisableAddLoginNotification","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","getDisableChangedPasswordNotification","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","PersonalOwnership","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","createNewTab","resolveDialogPromise","dialogId","confirmed","reseedStorage","totpCode","doAutoFillActiveTab","autofillTimeout","autofillPage","vaultUrl","referrer","vaultUrl2","doAutoFill","pageDetails","fillNewPassword","TabsBackground","notificationBackground","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","isFirefox","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","WindowsBackground","onFocusChanged","PlatformUtilsService","PopupUtilsService","inSidebar","inTab","inPopout","inPopup","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","height","closePopup","AutofillScript","documentUUID","script","properties","metadata","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","AutofillService","formData","passwordFields","loadPasswordFields","formKey","formPasswordFields","pf","form","uf","findUsernameField","passwords","totpPromise","getActiveTab","canAccessPremium","getCanAccessPremium","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","tagName","matchingIndex","findMatchingFieldIndex","matchingField","Linked","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","option","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","KdfType","KeySuffixOptions","EncArrayBuffer","EncryptedObject","CryptoService","platformUtilService","setCryptoMasterKey","storeKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","orgs","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","getKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getDecryptedCryptoSymmetricKey","getEncryptedCryptoSymmetricKey","decEncKey","encKeyCipher","newKey","stretchKey","symmetricCryptoKey","getPublicKey","inMemoryPublicKey","getPrivateKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","PBKDF2_SHA256","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","decKey","makeShareKey","shareKey","keyMaterial","sendKey","hashPurpose","theKey","getKeyForEncryption","buildEncKey","remakeEncKey","plainValue","plainBuf","encObj","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","encString","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","rval","range","bitsNeeded","log2","bytesNeeded","mask","byteArray","shouldStoreKey","supportsSecureStorage","getCryptoMasterKeyBiometric","keyForEnc","resolveLegacyKey","fastParams","computedMac","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","BrowserCryptoService","authenticateBiometric","BrowserMessagingService","subscriber","arg","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","FirefoxExtension","opr","addons","OperaExtension","EdgeExtension","VivaldiExtension","ChromeExtension","SafariExtension","isChrome","isEdge","isOpera","isMacAppStore","isViewOpen","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","saveFile","downloadFile","getApplicationVersion","PublicKeyCredential","showToast","showDialog","cancelText","bodyIsHtml","isSelfHost","doc","clearMs","clipboard","writeText","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","select","execCommand","readText","focus","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","supportsBiometric","os","getBrowserInfo","sidebarAction","getDefaultSystemTheme","Dark","Light","onDefaultSystemThemeChange","addEventListener","getEffectiveTheme","getTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","StorageLocation","I18nService","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","p1","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","State","accounts","authenticatedAccounts","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","sendType","StateService","stateMigrationService","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAddEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","getAutoConfirmFingerPrints","setAutoConfirmFingerprints","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","getBiometricText","setBiometricText","defaultOnDiskLocalOptions","setClearClipboard","getCollapsedGroupings","setCollapsedGroupings","defaultSecureStorageOptions","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDecodedToken","setDecryptedPinProtected","setDefaultUriMatch","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","setDisableFavicon","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableFullWidth","setEnableFullWidth","getEnableGravitars","setEnableGravitars","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLocale","setLocale","getLoginRedirect","loginRedirect","setLoginRedirect","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","getProtectedPin","setProtectedPin","getRememberedEmail","setRememberedEmail","getSsoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","getSsoState","setSsoState","setTheme","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","getBrowserGroupingComponentState","setBrowserGroupingComponentState","getBrowserCipherComponentState","setBrowserCipherComponentState","getBrowserSendComponentState","setBrowserSendComponentState","getBrowserSendTypeComponentState","setBrowserSendTypeComponentState","VaultTimeoutService","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","getValue","shouldLock","executeTimeoutAction","allowSoftLock","pinSet","isPinLockSet","isBiometricLockSet","setVaultTimeoutOptions","currentAction","isLoggedOut","vaultTimeoutSeconds","checkSafari","AccountFactory","accountConstructor","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","bitwardenMain","menuOptionsLoaded","nativeMessagingBackground","vaultTimeoutServiceCallbacks","locked","reloadProcess","auditService","exportService","popupUtilsService","userVerificationService","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","windowsBackground","that","backgroundMessagingService","authService","bootstrap","browserAction","suffix","actionSetIcon","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}